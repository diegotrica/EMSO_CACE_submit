using "mbo_streams";
using "PID";
using "pressure_changers";
using "thermal_changers";
using "mixers_splitters";
using "separators";

Model UnitOilTreatment
	VARIABLES
#INLET TRIPHASE STREAM AND WATER RECYCLE MIXER	
	InletMix		as mixer_W3ph;

#TRIPHASE SEPARATOR AND AUXILIARY DEVICES
	SG_001 		as triphase_separator;

	FE_001		as valv_gas;
	FIT_001		as volflow_transmitter;

	LIT_001		as level_transmitter;
	LIC_001		as PID_pos;
	LV_001		as valv_liq_ctrl;

	LIT_002		as level_transmitter;
	LIC_002		as PID_pos;
	LV_002		as valv_water_ctrl;

#OIL TO TREAT STREAM AND CONDENSATE FROM GAS PLANT STREAMS MIXER
	CondMix		as mixer_3ph2ph;

#HEAT EXCHANGER BATTERY AND AUXILIARY DEVICES
	P_001		as hexch_liq;
	P_002		as heater_liq;
	
	TIT_001		as temperature_transmitter;
	TIC_001		as PID_pos;

#PRE-OIL TREATMENT AND AUXILIARY DEVICES
	V_TO_001		as degasser;
	SPT_001		as splitter2_gas;
	TO_001		as oil_treater;
	B_001		as pump_water;

	PIT_002A		as pressure_transmitter;
	PIC_002A		as PID_pos;
	PV_002A		as valv_gas_ctrl;

	PIT_002B		as pressure_transmitter;
	PIC_002B		as PID_pos;
	PV_002B		as valv_gas_ctrl;

	LIT_003		as level_transmitter;
	LIC_003		as PID_pos;
	LV_003		as valv_liq_ctrl;

	LIT_004		as level_transmitter;
	LIC_004		as PID_pos;
	LV_004		as valv_water_ctrl;

#OIL TO DESALT STREAM AND SALT-FREE WATER MIXER
	DesaltMix		as mixer_W3ph;

#OIL TREATMENT AND AUXILIARY DEVICES		
	V_TO_002		as degasser;
	SPT_002		as splitter2_gas;
	TO_002		as oil_treater;
	B_002		as pump_water;
	B_003		as pump_liq;

	PIT_003A		as pressure_transmitter;
	PIC_003A		as PID_pos;
	PV_003A		as valv_gas_ctrl;

	PIT_003B		as pressure_transmitter;
	PIC_003B		as PID_pos;
	PV_003B		as valv_gas_ctrl;

	LIT_005		as level_transmitter;
	LIC_005		as PID_pos;
	LV_005		as valv_liq_ctrl;

	LIT_006		as level_transmitter;
	LIC_006		as PID_pos;
	LV_006		as valv_water_ctrl;
	
	CONNECTIONS
#FROM INLET MIXER BETWEEN FEED AND WATER RECYLE TO TRIPHASE SEPARATOR
	InletMix.Outlet		to SG_001.Inlet;
	SG_001.OutletG			to FE_001.Inlet;
	SG_001.OutletL 		to LV_001.Inlet;
	SG_001.OutletW 		to LV_002.Inlet;

#TRIPHASE SEPARATOR OUTLET GAS STD. VOL. FLOW TRANSMITTER
	SG_001.OutletG.Qg		to FIT_001.PVinput;

#TRIPHASE SEPARATOR LIGHT CHAMBER LEVEL CONTROL
	SG_001.LevelCL			to LIT_001.PVinput;
	LIT_001.PVoutput		to LIC_001.PV;
	LIT_001.SPoutput		to LIC_001.SP;
	LIC_001.MVoutput 		to LV_001.MVinput;

#TRIPHASE SEPARATOR SEPARATION CHAMBER WATER (INTERFACE) LEVEL CONTROL
	SG_001.LevelWCS		to LIT_002.PVinput;
	LIT_002.PVoutput		to LIC_002.PV;
	LIT_002.SPoutput		to LIC_002.SP;
	LIC_002.MVoutput 		to LV_002.MVinput;

#FROM TRIPHASE SEPARATOR OUTLET LIQUID STREAMS TO HEAT EXCHANGER BATTERY
	LV_001.Outlet			to CondMix.InletF;
	CondMix.Outlet			to P_001.Cold.Inlet;
	CondMix.Outlet			to P_001.ColdMax.Inlet;
	P_001.Cold.Outlet		to P_002.Inlet;

#HEAT EXCHANGER OIL OUTLET STREAM TEMPERATURE CONTROL
	P_002.Outlet.T			to TIT_001.PVinput;
	TIT_001.PVoutput		to TIC_001.PV;
	TIT_001.SPoutput		to TIC_001.SP;

#FROM HEAT EXCHANGER BATTERY TO PRE-OIL TREATMENT
	P_002.Outlet			to V_TO_001.Inlet;
	V_TO_001.OutletG		to SPT_001.Inlet;
	SPT_001.Outlet1		to PV_002A.Inlet;
	SPT_001.Outlet2		to PV_002B.Inlet;
	V_TO_001.OutletL		to TO_001.Inlet;
	TO_001.OutletL			to LV_003.Inlet;
	TO_001.OutletW 		to B_001.Inlet;
	B_001.Outlet			to LV_004.Inlet;

#PRE-OIL DEGASSER PRESSURE CONTROL
	V_TO_001.OutletG.P		to PIT_002A.PVinput;
	PIT_002A.PVoutput		to PIC_002A.PV;
	PIT_002A.SPoutput		to PIC_002A.SP;
	PIC_002A.MVoutput 		to PV_002A.MVinput;

#PRE-OIL DEGASSER PRESSURE CONTROL
	V_TO_001.OutletG.P		to PIT_002B.PVinput;
	PIT_002B.PVoutput		to PIC_002B.PV;
	PIT_002B.SPoutput		to PIC_002B.SP;
	PIC_002B.MVoutput 		to PV_002B.MVinput;

#PRE-OIL DEGASSER LEVEL CONTROL
	V_TO_001.Level			to LIT_003.PVinput;
	LIT_003.PVoutput		to LIC_003.PV;
	LIT_003.SPoutput		to LIC_003.SP;
	LIC_003.MVoutput 		to LV_003.MVinput;

#PRE-OIL TREATER WATER (INTERFACE) CONTROLE
	TO_001.LevelW			to LIT_004.PVinput;
	LIT_004.PVoutput		to LIC_004.PV;
	LIT_004.SPoutput		to LIC_004.SP;
	LIC_004.MVoutput 		to LV_004.MVinput;

#FROM PRE-OIL TREATER LIGHT OUTLET STREAM TO DESALT MIXER
	LV_003.Outlet			to DesaltMix.InletF;
	DesaltMix.Outlet		to V_TO_002.Inlet;

#FROM DESALT MIXER TO OIL TREATMENT
	V_TO_002.OutletG		to SPT_002.Inlet;
	SPT_002.Outlet1		to PV_003A.Inlet;
	SPT_002.Outlet2		to PV_003B.Inlet;
	V_TO_002.OutletL		to TO_002.Inlet;
	TO_002.OutletL			to B_003.Inlet;
	B_003.Outlet			to LV_005.Inlet;
	LV_005.Outlet 			to P_001.Hot.Inlet;
	LV_005.Outlet 			to P_001.HotMax.Inlet;	
	TO_002.OutletW 		to B_002.Inlet;
	B_002.Outlet			to LV_006.Inlet;

#OIL DEGASSER PRESSURE CONTROL
	V_TO_002.OutletG.P		to PIT_003A.PVinput;
	PIT_003A.PVoutput		to PIC_003A.PV;
	PIT_003A.SPoutput		to PIC_003A.SP;
	PIC_003A.MVoutput 		to PV_003A.MVinput;

#OIL DEGASSER PRESSURE CONTROL
	V_TO_002.OutletG.P		to PIT_003B.PVinput;
	PIT_003B.PVoutput		to PIC_003B.PV;
	PIT_003B.SPoutput		to PIC_003B.SP;
	PIC_003B.MVoutput 		to PV_003B.MVinput;

#OIL DEGASSER LEVEL CONTROL
	V_TO_002.Level			to LIT_005.PVinput;
	LIT_005.PVoutput		to LIC_005.PV;
	LIT_005.SPoutput		to LIC_005.SP;
	LIC_005.MVoutput 		to LV_005.MVinput;

#OIL TREATER WATER (INTERFACE) CONTROLE
	TO_002.LevelW			to LIT_006.PVinput;
	LIT_006.PVoutput		to LIC_006.PV;
	LIT_006.SPoutput		to LIC_006.SP;
	LIC_006.MVoutput 		to LV_006.MVinput;

#FROM OIL TREATERS WATER STREAMS TO INLET TRIPHASE SEPARATOR RECYCLE
	LV_004.Outlet			to InletMix.InletW(1);
	LV_006.Outlet			to InletMix.InletW(2);

	SET
##WATER RECYCLE TO UPSTREAM THE  TRIPHASE SEPARATOR MIXER PARAMETERS
	InletMix.numOfInletsF = 1;
	InletMix.numOfInletsW = 2;

#TRIPHASE SEPARATOR PARAMETERS
	SG_001.hweir = 2.15 * 'm';
	SG_001.LCS = 16.5 * 'm';
	SG_001.LCL = 2.5 * 'm';
	SG_001.D = 4.3 * 'm';

#TRIPHASE SEPARATOR OUTLET GAS FLOW ELEMENT AND TRANSMITTER
	FE_001.Cv = 3000*'gal/min';
	FE_001.Fgamma = 0.8;
	FE_001.xT = 0.7;

	FIT_001.RangeMax = 6e6*'m^3/d';
	FIT_001.RangeMin = 0*'m^3/d';

#TRIPHASE SEPARATOR OIL LEVEL CONTROLLER
	LIT_001.RangeMax = 3*'m';
	LIT_001.RangeMin = 0*'m';
	LIC_001.action = "Direct";

#TRIPHASE SEPARATOR OIL LEVEL FINAL ELEMENT
	LV_001.Cv = 1200 * 'gal/min';
	LV_001.FL = 0.91;

#TRIPHASE SEPARATOR WATER LEVEL CONTROLLER
	LIT_002.RangeMax = 3*'m';
	LIT_002.RangeMin = 0*'m';
	LIC_002.action = "Direct";
	
#TRIPHASE SEPARATOR WATER LEVEL FINAL ELEMENT
	LV_002.Cv = 500 * 'gal/min';
	LV_002.FL = 0.91;

#CONDENSATE FROM GAS PLANT TO PRE-OIL DEGASSER MIXER PARAMETERS
	CondMix.numOfInletsF = 1;
	CondMix.numOfInletsC = 3;

#HEAT EXCHANGER BATERRY PARAMETERS
	P_001.UA = 1600*'kW/K';

#HEAT EXCHANGER BATERRY PARAMETERS TEMPERATURE CONTROLLER
	TIT_001.RangeMax = (120+273.15)*'K';
	TIT_001.RangeMin = (0+273.15)*'K';
	TIC_001.action = "Reverse";

#PRE-OIL DEGASSER PARAMETERS
	V_TO_001.L = 9.45 * 'm';
	V_TO_001.D = 3.15 * 'm';
	
#PRE-OIL TREATER PARAMETERS
	TO_001.L = 15.0 * 'm';
	TO_001.D = 4.3 * 'm';
	TO_001.TRL50 = 210*'s';
	TO_001.b = 3.6;

#PRE-OIL DEGASSER PRESSURE CONTROLLER
	PIT_002A.RangeMax = 1500*'kPa';
	PIT_002A.RangeMin = 0*'kPa';
	PIC_002A.action = "Direct";

#PRE-OIL DEGASSER PRESSURE FINAL ELEMENT
	PV_002A.Cv = 360 * 'gal/min';
	PV_002A.Fgamma = 0.8;
	PV_002A.xT = 0.7;

#PRE-OIL DEGASSER PRESSURE CONTROLLER
	PIT_002B.RangeMax = 1500*'kPa';
	PIT_002B.RangeMin = 0*'kPa';
	PIC_002B.action = "Direct";

#PRE-OIL DEGASSER PRESSURE FINAL ELEMENT
	PV_002B.Cv = 60 * 'gal/min';
	PV_002B.Fgamma = 0.8;
	PV_002B.xT = 0.7;

#PRE-OIL DEGASSER LEVEL CONTROLLER
	LIT_003.RangeMax = 3.15*'m';
	LIT_003.RangeMin = 0*'m';
	LIC_003.action = "Direct";

#PRE-OIL DEGASSER LEVEL FINAL ELEMENT
	LV_003.Cv = 1800 * 'gal/min';
	LV_003.FL = 0.91;

#PRE-OIL TREATER WATER LEVEL CONTROLLER
	LIT_004.RangeMax = 4.3*'m';
	LIT_004.RangeMin = 0*'m';
	LIC_004.action = "Direct";
	
#PRE-OIL TREATER WATER LEVEL FINAL ELEMENT
	LV_004.Cv = 270 * 'gal/min';
	LV_004.FL = 0.91;

#PRE-OIL TREATER WATER RECYCLE PUMP
	B_001.A = 4e-4*'h^2/m^5';
	B_001.h0 = 300*'m';

#DESALT WATER MIXER PARAMETERS
	DesaltMix.numOfInletsF = 1;
	DesaltMix.numOfInletsW = 1;

#DEGASSER PARAMETERS
	V_TO_002.L = 9.45 * 'm';
	V_TO_002.D = 3.15 * 'm';

#OIL TREATER PARAMETERS
	TO_002.L = 15.0 * 'm';
	TO_002.D = 4.3 * 'm';
	TO_002.TRL50 = 210*'s';
	TO_002.b = 3.6;

#DEGASSER PRESSURE CONTROLLER
	PIT_003A.RangeMax = 500*'kPa';
	PIT_003A.RangeMin = 0*'kPa';
	PIC_003A.action = "Direct";	

#DEGASSER PRESSURE FINAL ELEMENT
	PV_003A.Cv = 210 * 'gal/min';
	PV_003A.Fgamma = 0.8;
	PV_003A.xT = 0.7;
	
#DEGASSER PRESSURE CONTROLLER
	PIT_003B.RangeMax = 500*'kPa';
	PIT_003B.RangeMin = 0*'kPa';
	PIC_003B.action = "Direct";	

#DEGASSER PRESSURE FINAL ELEMENT
	PV_003B.Cv = 50 * 'gal/min';
	PV_003B.Fgamma = 0.8;
	PV_003B.xT = 0.7;

#DEGASSER OIL LEVEL CONTROLLER
	LIT_005.RangeMax = 3.15*'m';
	LIT_005.RangeMin = 0*'m';
	LIC_005.action = "Direct";

#DEGASSER OIL LEVEL FINAL ELEMENT
	LV_005.Cv = 1800 * 'gal/min';
	LV_005.FL = 0.91;

#OIL TREATER WATER LEVEL CONTROLLER
	LIT_006.RangeMax = 4.3*'m';
	LIT_006.RangeMin = 0*'m';
	LIC_006.action = "Direct";
	
#OIL TREATER WATER LEVEL FINAL ELEMENT
	LV_006.Cv = 60 * 'gal/min';
	LV_006.FL = 0.91;

#OIL TREATER WATER RECYCLE PUMP
	B_002.A = 1.2e-2*'h^2/m^5';
	B_002.h0 = 300*'m';

#PRE-OIL TREATER WATER RECYCLE PUMP
	B_003.A = 1.2e-6*'h^2/m^5';
	B_003.h0 = 50*'m';
end

Model UnitVapourRecovery
	PARAMETERS
	rho_AIRstd			as dens_mass	(Brief="Air mass density at std. cond.",Default=1.2938);
	numOfStg				as Integer	(Brief="Number of compression stages",Lower=1,Default=2);
	tau					as time_sec	(Brief="Shift-gear assemble 1st-order time constant",Default=60);
	Nr_Max				as positive	(Brief="Max compressor rotation",Unit='rpm',Default=12000);
	Qout_Max(numOfStg)		as power		(Brief="Max heat removed from system",DisplayUnit='MW',Default=10000);

	SET
#NUMBER OF STAGES
	numOfStg = 2;

	VARIABLES
#COMPRESSION STAGE BASIC DEVICES
	mix(numOfStg)			as mixer3_gas;
	cool(numOfStg)			as cooler_gasliq;
	scrb(numOfStg)			as scrubber_gasliq;
	comp(numOfStg)			as compressor;

#VOL. FLOW SURGE CONTROL DEVICES
	FIT(numOfStg)			as volflow_transmitter;
	FIC(numOfStg)			as PID_pos;
	SPT(numOfStg)			as splitter2_gas_ctrl;

#STAGE SCRUBBER LEVEL CONTROL AND FINAL ELEMENT
	LIT(numOfStg)			as level_transmitter;
	LIC(numOfStg)			as PID_pos;
	LV(numOfStg)			as valv_cond_ctrl;

#STAGE COOLER CONTROL
	TIT(numOfStg)			as temperature_transmitter;
	TIC(numOfStg)			as PID_pos;

#MASTER CAPACITY CONTROL
	PIT					as pressure_transmitter;
	MCC					as PID_pos;

#NULL STREAMS FOR MODEL'S INLET INPUTS
	nullComp				as nullG;
	nullSurge(numOfStg)		as nullG;
	nullLiq				as null2ph;

	CONNECTIONS
#FROM PREVIOUS STAGE OUTLET, SURGE FLOW AND SIDE FEED INLET MIXING TO STAGE COOLER
	mix(1:numOfStg).Outlet		to cool(1:numOfStg).Inlet;

#FROM STAGE COOLER TO STAGE SCRUBBER
	cool(1:numOfStg).Outlet		to scrb(1:numOfStg).InletG;

#FROM STAGE SCRUBBER TO STAGE COMPRESSION AND LIQUID RECYCLE TO PREVIOUS STAGE SCRUBBER
	scrb(1:numOfStg).OutletG		to comp(1:numOfStg).Inlet;
	scrb(1:numOfStg).OutletL		to LV(1:numOfStg).Inlet;
	LV(2:numOfStg).Outlet		to scrb(1:numOfStg-1).InletL;

#FROM STAGE COMPRESSION TO SURGE VOL. FLOW CONTROL SPLIT
	comp(1:numOfStg).Outlet		to SPT(1:numOfStg).Inlet;
	SPT(1:numOfStg).Outlet1		to mix(1:numOfStg).Inlet1;

#FROM STAGE OUTLET TO NEXT STAGE INLET MIXING
	SPT(1:numOfStg-1).Outlet2	to mix(2:numOfStg).Inlet2;

#STAGE VOL. FLOW SURGE CONTROLLER
	scrb(1:numOfStg).OutletG.Qg	to FIT(1:numOfStg).PVinput;
	FIT(1:numOfStg).PVoutput		to FIC(1:numOfStg).PV;
	FIT(1:numOfStg).SPoutput		to FIC(1:numOfStg).SP;
	FIC(1:numOfStg).MVoutput		to SPT(1:numOfStg).qfrac;

#STAGE SCRUBBER LEVEL CONTROLLER
	scrb(1:numOfStg).Level		to LIT(1:numOfStg).PVinput;
	LIT(1:numOfStg).PVoutput		to LIC(1:numOfStg).PV;
	LIT(1:numOfStg).SPoutput		to LIC(1:numOfStg).SP;
	LIC(1:numOfStg).MVoutput		to LV(1:numOfStg).MVinput;

#STAGE COOLER TEMPERATURE CONTROLLER
	cool(1:numOfStg).Outlet.T	to TIT(1:numOfStg).PVinput;
	TIT(1:numOfStg).PVoutput		to TIC(1:numOfStg).PV;
	TIT(1:numOfStg).SPoutput		to TIC(1:numOfStg).SP;

#UNIT MASTER CAPACITY CONTROL
	scrb(1).OutletG.P			to PIT.PVinput;
	PIT.PVoutput				to MCC.PV;
	PIT.SPoutput				to MCC.SP;

#NULL STREAM SPECIFICATION FOR FIRST STAGE MIXER STREAM FROM COMPRESSOR
	nullComp					to mix(1).Inlet2;

#NULL STREAM SPECIFICATION FOR ALL SCRUBBERS InletSurge INPUT
	nullSurge(1:numOfStg)		to scrb(1:numOfStg).InletSurge;

#NULL STREAM SPECIFICATION FOR LAST SCRUBBER InletL INPUT
	nullLiq					to scrb(numOfStg).InletL;
	
	SET
#STAGE PARAMETERS
	tau	= 60*'s';
	Nr_Max = 12000*'rpm';
	Qout_Max = [2,2] * 'MW';

#STAGE COOLER PARAMETERS
	cool.Cf = [200,200] * 'cm^2';

#STAGE SCRUBBER PARAMETERS
	scrb.H = 3 * 'm';
	scrb.D = 1.25 * 'm';

#STAGE COMPRESSOR PARAMETERS
	comp.effM = [0.95,0.95];
	comp.CpCv = [1.2,1.2];
	comp.a2 = [0.35,0.35];
	comp.a3 = [4.5,4.5];
	comp.a4 = [1.5,1.5];
	comp.p0 = [0.35,0.35];
	comp.p1 = [1.1,1.1];
	comp.p2 = [7.0,7.0];

#STAGE ANTI-SURGE CONTROLLER
	FIT.RangeMax = 1e6*'m^3/d';
	FIT.RangeMin = 0*'m^3/d';
	FIC.action = "Reverse";

#STAGE SCRUBBER LEVEL CONTROLLER
	LIT.RangeMax = 1.5 * 'm';
	LIT.RangeMin = 0 * 'm';
	LIC.action = "Direct";

#STAGE SCRUBBER LEVEL FINAL ELEMENT
	LV.Cv = [84,48] * 'gal/min';
	LV.FL = [0.91,0.91];

#STAGE TEMPERATURE CONTROLLER
	TIT.RangeMax = (300+273.15)*'K';
	TIT.RangeMin = (30+273.15)*'K';	
	TIC.action = "Direct";

#UNIT MASTER CONTROL CAPACITY CONTROLLER
	PIT.RangeMax = 500*'kPa';
	PIT.RangeMin = 0*'kPa';
	MCC.action = "Direct";

	EQUATIONS
	"Anti-surge flow control"
	FIT(1).SPinput*comp(1).Inlet.dg*rho_AIRstd/'kg/s' = 
		2 + 2*0.5*(comp(1).a3*1e-6)/(comp(1).a4*1e-1)*(comp(1).Nr/'rpm')*(comp(1).Inlet.P/'bar');
	FIT(2).SPinput*comp(2).Inlet.dg*rho_AIRstd/'kg/s' = 
		3 + 3*0.5*(comp(2).a3*1e-6)/(comp(2).a4*1e-1)*(comp(2).Nr/'rpm')*(comp(2).Inlet.P/'bar');
	FIC.mode = 0;	#Auto
	FIC.MVinput = FIC.MVoutput;

	"Temperature discharge control"
	cool.Qout = TIC.MVoutput*Qout_Max;

	"MCC: Master Capacity Control with linear first-order dynamic behavior for shift-gear assemble"
	(1e-3*'s'+tau)*diff(comp.Nr) + comp.Nr = MCC.MVoutput*Nr_Max;
end

Model UnitGasKnockout
	VARIABLES
#INLET GAS MIXING, COOLING AND AUXILIARY DEVICES
	GMX_001		as mixer_gas;
	P_001		as cooler_gasliq;

	TIT_001		as temperature_transmitter;
	TIC_001		as PID_pos;

#INLET GAS SCRUBBER AND AUXILIARY DEVICES
	V_001		as gasliq_separator;
	SPT_001		as splitter2_gas_ctrl;

	PIT_001		as pressure_transmitter;
	PIC_001		as PID_pos;

	LIT_001		as level_transmitter;
	LIC_001		as PID_pos;
	LV_001		as valv_cond_ctrl;

#OUTLET GAS STD. VOL. FLOWMETER
	FE_001		as valv_gas;
	FIT_001		as volflow_transmitter;

	CONNECTIONS
#FROM OIL TREATMENT UNIT TO INLET GAS MIXING AND COOLING
	GMX_001.Outlet			to P_001.Inlet;
	
#INLET GAS STREAM TEMPERATURE CONTROLLER
	P_001.Outlet.T			to TIT_001.PVinput;
	TIT_001.PVoutput		to TIC_001.PV;
	TIT_001.SPoutput		to TIC_001.SP;

#FROM INLET GAS MIXING AND COOLING TO SCRUBBER
	P_001.Outlet			to V_001.Inlet;
	V_001.OutletG			to SPT_001.Inlet;
	V_001.OutletL			to LV_001.Inlet;

#INLET SCRUBBER LEVEL CONTROL
	V_001.Level			to LIT_001.PVinput;
	LIT_001.PVoutput		to LIC_001.PV;
	LIT_001.SPoutput		to LIC_001.SP;
	LIC_001.MVoutput 		to LV_001.MVinput;

#INLET SCRUBBER PRESSURE CONTROL
	V_001.OutletG.P		to PIT_001.PVinput;
	PIT_001.PVoutput		to PIC_001.PV;
	PIT_001.SPoutput		to PIC_001.SP;
	PIC_001.MVoutput 		to SPT_001.qfrac;

#FROM GAS SPLIT FLARE OUTLET GAS STD. VOL. FLOW TRANSMITTER
	SPT_001.Outlet2		to FE_001.Inlet;
	SPT_001.Outlet2.Qg		to FIT_001.PVinput;

	SET
#INLET GAS MIXER PARAMETERS
	GMX_001.numOfInlets = 2;	

#INLET GAS COOLER PARAMETERS
	P_001.Cf = 540*'cm^2';

#INLET GAS TEMPERATURE CONTROLLER
	TIT_001.RangeMax = (100+273.15)*'K';
	TIT_001.RangeMin = (0+273.15)*'K';
	TIC_001.action = "Direct";

#INLET SCRUBBER PARAMETERS
	V_001.D = 2.5 * 'm';
	V_001.H = 6 * 'm';

#INLET SCRUBBER PRESSURE CONTROLLER
	PIT_001.RangeMax = 3000*'kPa';
	PIT_001.RangeMin = 0*'kPa';
	PIC_001.action = "Direct";

#INLET SCRUBBER LEVEL CONTROLLER
	LIT_001.RangeMax = 3*'m';
	LIT_001.RangeMin = 0*'m';
	LIC_001.action = "Direct";

#INLET SCRUBBER LEVEL FINAL ELEMENT
#	LV_001.Cv = 36 * 'gal/min';
	LV_001.Cv = 12 * 'gal/min';
	LV_001.FL = 0.91;

#OUTLET GAS STD. VOL. FLOW ELEMENT AND TRANSMITTER
	FE_001.Cv = 3000*'gal/min';
	FE_001.Fgamma = 0.8;
	FE_001.xT = 0.7;

	FIT_001.RangeMax = 6e6*'m^3/d';
	FIT_001.RangeMin = 0*'m^3/d';

	EQUATIONS
	SPT_001.Outlet1.P = SPT_001.Outlet2.P;
end

Model UnitMainCompression
	PARAMETERS
	rho_AIRstd			as dens_mass	(Brief="Air mass density at std. cond.",Default=1.2938);
	numOfStg				as Integer	(Brief="Number of compression stages",Lower=1,Default=1);
	tau					as time_sec	(Brief="Shift-gear assemble 1st-order time constant",Default=60);
	Nr_Max				as positive	(Brief="Max compressor rotation",Unit='rpm',Default=12000);
	Qout_Max(numOfStg)		as power		(Brief="Max heat removed from system",DisplayUnit='MW',Default=10000);

	SET
#NUMBER OF STAGES
	numOfStg = 1;

	VARIABLES
#COMPRESSION TRAIN UNITS SPLITTING
	InletSPT				as	splitter2_gas;
	ExitL				as	biphase_ref;
	ExitG				as	gasliq_ref;

#COMPRESSION STAGE BASIC DEVICES
	scrb(numOfStg+1)		as 	scrubber_gasliq;
	comp(numOfStg)			as 	compressor;
	cool(numOfStg)			as 	cooler_gasliq;

#VOL. FLOW SURGE CONTROL DEVICES
	FIT(numOfStg)			as 	volflow_transmitter;
	FIC(numOfStg)			as 	PID_pos;
	SPT(numOfStg)			as 	splitter2_gasliq_ctrl;

#STAGE SCRUBBER LEVEL CONTROL AND FINAL ELEMENT
	LIT(numOfStg+1)		as 	level_transmitter;
	LIC(numOfStg+1)		as 	PID_pos;
	LV(numOfStg+1)			as 	valv_cond_ctrl;

#STAGE COOLER CONTROL
	TIT(numOfStg)			as 	temperature_transmitter;
	TIC(numOfStg)			as 	PID_pos;

#MASTER CAPACITY CONTROL
	PIT					as 	pressure_transmitter;
	MCC					as 	PID_pos;

#NULL STREAMS FOR MODEL`S INLET INPUTS
	nullSurge				as 	nullG;
	nullLiq				as 	null2ph;

	CONNECTIONS
#FROM COMPRESSION TRAIN UNIT SPLITTING TO STAGE SCRUBBER
	InletSPT.Outlet1			to	scrb(1).InletG;
	LV(1).Outlet				to	ExitL.Inlet;
	scrb(numOfStg+1).OutletG		to	ExitG.Inlet;

#FROM STAGE SCRUBBER TO STAGE COMPRESSION AND LIQUID RECYCLE TO PREVIOUS STAGE SCRUBBER
	scrb(1:numOfStg).OutletG		to 	comp(1:numOfStg).Inlet;
	scrb(1:numOfStg+1).OutletL	to 	LV(1:numOfStg+1).Inlet;
	LV(2:numOfStg+1).Outlet		to 	scrb(1:numOfStg).InletL;

#FROM STAGE COMPRESSION TO STAGE COOLER
	comp(1:numOfStg).Outlet		to 	cool(1:numOfStg).Inlet;

#FROM STAGE COOLER TO SURGE VOL. FLOW CONTROL SPLIT
	cool(1:numOfStg).Outlet		to 	SPT(1:numOfStg).Inlet;
	SPT(1:numOfStg).Outlet1		to 	scrb(1:numOfStg).InletSurge;

#FROM STAGE OUTLET TO NEXT STAGE SCRUBBER
	SPT(1:numOfStg).Outlet2		to 	scrb(2:numOfStg+1).InletG;

#STAGE VOL. FLOW SURGE CONTROLLER	
	scrb(1:numOfStg).OutletG.Qg	to 	FIT(1:numOfStg).PVinput;
	FIT(1:numOfStg).PVoutput		to 	FIC(1:numOfStg).PV;
	FIT(1:numOfStg).SPoutput		to 	FIC(1:numOfStg).SP;
	FIC(1:numOfStg).MVoutput		to 	SPT(1:numOfStg).qfrac;

#STAGE SCRUBBER LEVEL CONTROLLER
	scrb(1:numOfStg+1).Level		to 	LIT(1:numOfStg+1).PVinput;
	LIT(1:numOfStg+1).PVoutput	to 	LIC(1:numOfStg+1).PV;
	LIT(1:numOfStg+1).SPoutput	to 	LIC(1:numOfStg+1).SP;
	LIC(1:numOfStg+1).MVoutput	to 	LV(1:numOfStg+1).MVinput;

#STAGE COOLER TEMPERATURE CONTROLLER
	cool(1:numOfStg).Outlet.T	to 	TIT(1:numOfStg).PVinput;
	TIT(1:numOfStg).PVoutput		to 	TIC(1:numOfStg).PV;
	TIT(1:numOfStg).SPoutput		to 	TIC(1:numOfStg).SP;

#UNIT MASTER CAPACITY CONTROL
	scrb(1).OutletG.P			to 	PIT.PVinput;
	PIT.PVoutput				to 	MCC.PV;
	PIT.SPoutput				to 	MCC.SP;

#NULL STREAM SPECIFICATIONS FOR LAST SCRUBBER
	nullSurge					to 	scrb(numOfStg+1).InletSurge;
	nullLiq					to 	scrb(numOfStg+1).InletL;

	SET
#STAGE AND COMPRESSION UNIT PARAMETERS
	tau = 60*'s';
	Qout_Max = 20*'MW';
	Nr_Max = 12000*'rpm';	

#SCRUBBER PARAMETERS
	scrb.H = 6.125 * 'm';
	scrb.D = 2.5 * 'm';

#COMPRESSOR PARAMETERS
	comp.effM = 0.95;
	comp.CpCv = 1.2;
	comp.a2 = 0.35;
	comp.a3 = 1.3;
	comp.a4 = 0.8;
	comp.p0 = 0.35;
	comp.p1 = 0.36;
	comp.p2 = 0.6;

#STAGE COOLER PARAMETERS
	cool.Cf = 180*'cm^2';

#STAGE ANTI-SURGE CONTROLLER
	FIT.RangeMax = 3e6*'m^3/d';
	FIT.RangeMin = 0*'m^3/d';
	FIC.action = "Reverse";

#STAGE SCRUBBER LEVEL CONTROLLER
	LIT.RangeMax = 3*'m';
	LIT.RangeMin = 0*'m';
	LIC.action 	= "Direct";

#STAGE SCRUBBER LEVEL FINAL ELEMENT
	LV.Cv = [36,36] * 'gal/min';
	LV.FL = [0.91,0.91];

#STAGE TEMPERATURE CONTROLLER
	TIT.RangeMax = (300+273.15) * 'K';
	TIT.RangeMin = (30+273.15) * 'K';
	TIC.action = "Direct";

#UNIT MASTER CONTROL CAPACITY CONTROLLER
	PIT.RangeMax = 4200*'kPa';
	PIT.RangeMin = 0*'kPa';
	MCC.action = "Direct";

	EQUATIONS
	"Anti-surge flow control"
	FIT.SPinput*comp.Inlet.dg*rho_AIRstd/'kg/s' = 
		6 + 3*0.5*(comp.a3*1e-6)/(comp.a4*1e-1)*(comp.Nr/'rpm')*(comp.Inlet.P/'bar');
	FIC.mode = 0;	#Auto
	FIC.MVinput = FIC.MVoutput;

	"Temperature discharge control"
	cool.Qout = Qout_Max*TIC.MVoutput;
	
	"MCC: Master Capacity Control with linear first-order dynamic behavior for shift-gear assemble"
	(1e-3*'s'+tau)*diff(comp.Nr) + comp.Nr = MCC.MVoutput*Nr_Max;
	
	"Compression train units splitting"
	InletSPT.Outlet2.Qg = InletSPT.Outlet1.Qg;
	ExitL.Outlet.Qf = 2*LV(1).Outlet.Qf;
	ExitL.Outlet.Qg = 2*LV(1).Outlet.Qg;
	ExitG.Outlet.Qg = 2*scrb(numOfStg+1).OutletG.Qg;
	ExitG.Outlet.Qo = 2*scrb(numOfStg+1).OutletG.Qo;
end


Model UnitHydrocarbonDewpoint
	VARIABLES
#INLET GAS/GAS HEAT EXCHANGER
	P_001		as hexch_gasliq;

#INLET GAS/LIQUID HEAT EXCHANGER
	P_002		as hexch_hliq_cgas;

#JOULE-THOMSON (JT) VALVE AND AUXILIARY DEVICES
	PIT_001		as pressure_transmitter;
	PIC_001		as PID_pos;
	PV_001		as valv_gasliq_ctrl;

#COLD VESSEL SEPARATOR AND AUXILIARY DEVICES	
	V_001		as gasliq_separator;
	LIT_001		as level_transmitter;
	LV_001		as valv_cond_ctrl;
	LIC_001		as PID_pos;	

	CONNECTIONS
#INLET GAS STREAM FROM GAS/GAS HEX TO GAS-LIQUID HEX
	P_001.Hot.Outlet		to	P_002.Hot.Inlet;
	P_001.Hot.Outlet		to	P_002.HotMax.Inlet;

#FROM GAS/LIQUID HEX TO JT VALVE
	P_002.Hot.Outlet		to	PV_001.Inlet;

#FROM JT VALVE TO COLD VESSEL
	PV_001.Outlet			to 	V_001.Inlet;

#FROM COLD VESSEL LIQUID OUTLET TO GAS/LIQUID HEX ENERGY RECOVERY 
	V_001.OutletL			to	LV_001.Inlet;
	LV_001.Outlet			to 	P_002.Cold.Inlet;
	LV_001.Outlet			to 	P_002.ColdMax.Inlet;

#FROM COLD VESSEL GAS OUTLET TO GAS/GAS HEX ENERGY RECOVERY 
	V_001.OutletG			to	P_001.Cold.Inlet;
	V_001.OutletG			to	P_001.ColdMax.Inlet;

#UPSTREAM JT VALVE PRESSURE CONTROL
	P_002.Hot.Outlet.P		to	PIT_001.PVinput;
	PIT_001.PVoutput		to	PIC_001.PV;
	PIT_001.SPoutput		to	PIC_001.SP;
	PIC_001.MVoutput		to	PV_001.MVinput;

#COLD VESSEL LIQUID LEVEL CONTROL
	V_001.Level			to	LIT_001.PVinput;
	LIT_001.PVoutput		to	LIC_001.PV;
	LIT_001.SPoutput		to	LIC_001.SP;
	LIC_001.MVoutput		to	LV_001.MVinput;

	SET
#GAS/GAS EXCHANGER PARAMETERS
	P_001.Hot.Cf = 240*'cm^2';
	P_001.Cold.Cf = 240*'cm^2';
	P_001.UA = 35*'kW/K';

#GAS/LIQ EXCHANGER PARAMETERS
	P_002.Hot.Cf = 240*'cm^2';
	P_002.UA = 45*'kW/K';

#UPSTREAM JT VALVE PRESSURE CONTROLLER
	PIT_001.RangeMax = 10000*'kPa';
	PIT_001.RangeMin = 0*'kPa';
	PIC_001.action = "Direct";	

#UPSTREAM JT VALVE PRESSURE CONTROLLER FINAL ELEMENT
	PV_001.Cv = 420 * 'gal/min';
	PV_001.Fgamma = 0.8;
	PV_001.xT = 0.7;

#COLD VESSEL PARAMETERS
	V_001.H = 5 * 'm';
	V_001.D = 2 * 'm';

#COLD VESSEL LEVEL CONTROLLER
	LIT_001.RangeMax = 2.5*'m';
	LIT_001.RangeMin = 0*'m';
	LIC_001.action = "Direct";

#COLD VESSEL LEVEL FINAL ELEMENT
	LV_001.Cv = 36 * 'gal/min';
	LV_001.FL = 0.91;
end

Model UnitExportCompression
	PARAMETERS
	numOfStg				as Integer	(Brief="Number of compression stages",Lower=1,Default=1);
	tau					as time_sec	(Brief="Shift-gear assemble 1st-order time constant",Default=60);
	rho_AIRstd			as dens_mass	(Brief="Air mass density at std. cond.",Default=1.2938);
	Nr_Max				as positive	(Brief="Max compressor rotation",Unit='rpm',Default=12000);
	Qout_Max(numOfStg)		as power		(Brief="Max heat removed from system",DisplayUnit='MW',Default=10000);

	SET
#NUMBER OF STAGES
	numOfStg = 2;

	VARIABLES
#COMPRESSION TRAIN UNITS SPLITTING
	InletSPT				as	splitter2_gas;
	ExitG				as	gas_ref;

#COMPRESSION STAGE BASIC DEVICES
	scrb(numOfStg+1)		as scrubber_gas;
	comp(numOfStg)			as compressor;
	cool(numOfStg)			as cooler_gas;

#VOL. FLOW SURGE CONTROL DEVICES
	FIT(numOfStg)			as volflow_transmitter;
	FIC(numOfStg)			as PID_pos;
	SPT(numOfStg)			as splitter2_gas_ctrl;

#STAGE COOLER CONTROL
	TIT(numOfStg)			as temperature_transmitter;
	TIC(numOfStg)			as PID_pos;

#MASTER CAPACITY CONTROL
	PIT					as pressure_transmitter;
	MCC					as PID_pos;

#NULL STREAMS FOR MODEL`S INLET INPUTS
	nullSurge				as nullG;

	CONNECTIONS
#FROM COMPRESSION TRAIN UNIT SPLITTING TO STAGE SCRUBBER
	InletSPT.Outlet1			to	scrb(1).InletG;
	scrb(numOfStg+1).OutletG		to	ExitG.Inlet;

#FROM STAGE SCRUBBER TO STAGE COMPRESSION AND LIQUID RECYCLE TO PREVIOUS STAGE SCRUBBER
	scrb(1:numOfStg).OutletG		to comp(1:numOfStg).Inlet;

#FROM STAGE COMPRESSION TO STAGE COOLER
	comp(1:numOfStg).Outlet		to cool(1:numOfStg).Inlet;

#FROM STAGE COOLER TO SURGE VOL. FLOW CONTROL SPLIT
	cool(1:numOfStg).Outlet		to SPT(1:numOfStg).Inlet;
	SPT(1:numOfStg).Outlet1		to scrb(1:numOfStg).InletSurge;

#FROM STAGE OUTLET TO NEXT STAGE SCRUBBER
	SPT(1:numOfStg).Outlet2		to scrb(2:numOfStg+1).InletG;

#STAGE VOL. FLOW SURGE CONTROLLER	
	scrb(1:numOfStg).OutletG.Qg	to FIT(1:numOfStg).PVinput;
	FIT(1:numOfStg).PVoutput		to FIC(1:numOfStg).PV;
	FIT(1:numOfStg).SPoutput		to FIC(1:numOfStg).SP;
	FIC(1:numOfStg).MVoutput		to SPT(1:numOfStg).qfrac;

#STAGE COOLER TEMPERATURE CONTROLLER
	cool(1:numOfStg).Outlet.T	to TIT(1:numOfStg).PVinput;
	TIT(1:numOfStg).PVoutput		to TIC(1:numOfStg).PV;
	TIT(1:numOfStg).SPoutput		to TIC(1:numOfStg).SP;

#UNIT MASTER CAPACITY CONTROL
	scrb(1).OutletG.P			to PIT.PVinput;
	PIT.PVoutput				to MCC.PV;
	PIT.SPoutput				to MCC.SP;

#NULL STREAM SPECIFICATIONS FOR LAST SCRUBBER
	nullSurge					to scrb(numOfStg+1).InletSurge;

	SET
#STAGE AND COMPRESSION UNIT PARAMETERS
	Qout_Max = [20,20]*'MW';
	tau = 60*'s';
	Nr_Max = 12000*'rpm';

#SCRUBBER PARAMETERS
	scrb.H = 6.125 * 'm';
	scrb.D = 2.5 * 'm';

#COMPRESSOR PARAMETERS
	comp.effM = [0.95,0.95];
	comp.CpCv = [1.2,1.2];
	comp.a2 = [0.35,0.3];
	comp.a3 = [6.5,25];
	comp.a4 = [8.3,37];
	comp.p0 = [0.35,0.35];
	comp.p1 = [0.36,0.36];
	comp.p2 = [0.6,0.6];

#STAGE COOLER PARAMETERS
	cool.Cf = 180*'cm^2';

#STAGE ANTI-SURGE CONTROLLER
	FIT.RangeMax = 3e6*'m^3/d';
	FIT.RangeMin = 0*'m^3/d';
	FIC.action = "Reverse";

#STAGE TEMPERATURE CONTROLLER
	TIT.RangeMax = (300+273.15)*'K';
	TIT.RangeMin = (30+273.15)*'K';
	TIC.action = "Direct";
	
#UNIT MASTER CONTROL CAPACITY CONTROLLER
	PIT.RangeMax = 8500*'kPa';
	PIT.RangeMin = 0*'kPa';
	MCC.action = "Direct";

	EQUATIONS
	"Anti-surge flow control"
	FIT.SPinput*comp.Inlet.dg*rho_AIRstd/'kg/s' = 
		6 + 3*0.5*(comp.a3*1e-6)/(comp.a4*1e-1)*(comp.Nr/'rpm')*(comp.Inlet.P/'bar');
	FIC.mode = 0;	#Auto
	FIC.MVinput = FIC.MVoutput;

	"Temperature discharge control"
	cool.Qout = Qout_Max*TIC.MVoutput;
	
	"MCC: Master Capacity Control with linear first-order dynamic behavior for shift-gear assemble"
	(1e-3*'s'+tau)*diff(comp.Nr) + comp.Nr = MCC.MVoutput*Nr_Max;

	"Compression train units splitting"
	InletSPT.Outlet2.Qg = InletSPT.Outlet1.Qg;
	ExitG.Outlet.Qg = 2*scrb(numOfStg+1).OutletG.Qg;
end

Model UnitGasExportHeader
	VARIABLES
#INLET GAS SPLIT
	SPT_001		as splitter_gas;

#HEADER PRESSURE CONTROL
	PV_001		as valv_gas_ctrl;
	PIT_001		as pressure_transmitter;
	PIC_001		as PID_pos;

#EXPORTATION GAS STD. VOL. FLOWMETER
	FE_001		as valv_gas;
	FIT_001		as volflow_transmitter;

	SET
	SPT_001.numOfOutlets = 2;

	CONNECTIONS
#FROM INLET GAS SPLIT TO HEADER PRESSURE CONTROL
	SPT_001.Outlet(1)		to PV_001.Inlet;
	
	SPT_001.Outlet(1).P 	to PIT_001.PVinput;
	PIT_001.PVoutput		to PIC_001.PV;
	PIT_001.SPoutput		to PIC_001.SP;
	PIC_001.MVoutput		to PV_001.MVinput;

#FROM HEADER PRESSURE CONTROL TO EXPORTATION GAS STD. VOL. FLOWMETER
	PV_001.Outlet			to FE_001.Inlet;
	FE_001.Outlet(1).Qg 	to FIT_001.PVinput;	

	SET
#HEADER PRESSURE CONTROLLER
	PIT_001.RangeMax = 30000*'kPa';
	PIT_001.RangeMin = 0*'kPa';
	PIC_001.action = "Direct";

#HEADER PRESSURE CONTROLLER FINAL ELEMENT
	PV_001.Cv = 120 * 'gal/min';
	PV_001.Fgamma = 0.8;
	PV_001.xT = 0.7;

#EXPORT GAS STD. VOL. FLOW ELEMENT AND TRANSMITTER
	FE_001.Cv = 3000*'gal/min';
	FE_001.Fgamma = 0.8;
	FE_001.xT = 0.7;

	FIT_001.RangeMax = 6e6*'m^3/d';
	FIT_001.RangeMin = 0*'m^3/d';
	
	EQUATIONS
	"No gas lift"
	SPT_001.Outlet(2).Qg = 0 * 'm^3/d';
end

FlowSheet UGKO
	PARAMETERS
	Patm			as pressure	(Brief="Atmospheric pressure",DisplayUnit='kPa',Default=1);
	
	DEVICES
	gas1			as strG;
	gas2			as strG;
	UGKO			as UnitGasKnockout;

	CONNECTIONS
	gas1		to	UGKO.GMX_001.Inlet(1);
	gas2		to	UGKO.GMX_001.Inlet(2);
	
	SPECIFY
#gas1 STREAM CONDIDTIONS (from UOTR_init.rlt --> UOTR.FE_001.Outlet)
	gas1.Qg 		= 5.41821e6 * 'm^3/d';
	gas1.T 		= 307.708 * 'K';
	gas1.hG		= 316.587 * 'kJ/kg';
	gas1.rhoG 	= 16.8924 * 'kg/m^3';
	gas1.Rv 		= 0.332803 * 'l/m^3';
	gas1.Bg 		= 0.0475321 * 'm^3/m^3';
	gas1.d60G 	= 0.775174;
	gas1.TbnG 	= 373.389 * 'K';
	gas1.dg 		= 0.655926;
	gas1.Ycg 		= 6.0547 * 'l/m^3';

#gas2 STREAM CONDIDTIONS (from UVRC_init.rlt --> UVRC.SPT(2).Outlet2)
	gas2.Qg 		= 133964 * 'm^3/d';
	gas2.T 		= 369.452 * 'K';
	gas2.hG		= 240.827 * 'kJ/kg';
	gas2.rhoG 	= 39.4868 * 'kg/m^3';
	gas2.Rv 		= 1.24011 * 'l/m^3';
	gas2.Bg 		= 0.0485643 * 'm^3/m^3';
	gas2.d60G		= 0.821585;
	gas2.TbnG 	= 447.528 * 'K';
	gas2.dg 		= 1.56655;
	gas2.Ycg 		= 13.6337 * 'l/m^3';

#INLET GAS COOLET TEMPERATURE CONTROLLER TUNNING
	UGKO.TIT_001.SPinput = (30+273.15)*'K';
	UGKO.TIC_001.KC = 1;
	UGKO.TIC_001.TI = 60*'s';
	UGKO.TIC_001.TD = 0*'s';
	UGKO.TIC_001.mode = 0; #Auto
	UGKO.TIC_001.MVinput = UGKO.TIC_001.MVoutput;
	UGKO.P_001.Qout = 2.5*UGKO.TIC_001.MVoutput*'MW';

#INLET SCRUBBER PRESSURE CONTROLLER TUNNING
	UGKO.PIT_001.SPinput = 2100*'kPa' + Patm;
	UGKO.PIC_001.KC = 1;
	UGKO.PIC_001.TI = 60*'s';
	UGKO.PIC_001.TD = 0*'s';
	UGKO.PIC_001.mode = 0; #Auto
	UGKO.PIC_001.MVinput = UGKO.PIC_001.MVoutput;

#INLET SCRUBBER LEVEL CONTROLLER TUNNING
	UGKO.LIT_001.SPinput = 0.5*'m';
	UGKO.LIC_001.KC = 0.5;
	UGKO.LIC_001.TI = 120*'s';
	UGKO.LIC_001.TD = 0*'s';
	UGKO.LIC_001.mode = 0; #Auto
	UGKO.LIC_001.MVinput = UGKO.LIC_001.MVoutput;

#FLOW ELEMENT ORIFICE PERCENT OPEN AND TRANSMITTER SP
	UGKO.FE_001.c = 1.0;
	UGKO.FIT_001.SPinput = 6e6*'m^3/d';
	
	EQUATIONS
	"Pressure boundary conditions"
	UGKO.FE_001.Outlet.P = 2000*'kPa' + Patm;
	UGKO.LV_001.Outlet.P = 700*'kPa' + Patm;

	INITIAL
	"Inlet gas cooler initial conditions"
	UGKO.P_001.Qout 		= 0.5*'MW';

	"Inlet scrubber initial conditions" 
	UGKO.V_001.OutletG.P 	= 2100 * 'kPa' + Patm;
	UGKO.V_001.OutletG.T 	= (40+273.15)*'K';
	UGKO.V_001.Level 		= 0.5*'m';
	UGKO.V_001.OutletG.dg 	= 0.65;
	UGKO.V_001.OutletG.Ycg 	= 2*'l/m^3';
	UGKO.V_001.OutletG.d60G 	= 141.5/(70+131.5);
	UGKO.V_001.OutletG.TbnG 	= (9.083*UGKO.V_001.OutletG.d60G)^3 * 'degR';

	UGKO.PIC_001.MVoutput 	= 1e-5;
	
	UGKO.LV_001.c 			= 0.4;
	UGKO.LIC_001.MVoutput 	= UGKO.LV_001.c;

	OPTIONS
	Dynamic=true;
	TimeStart = 0;
	TimeStep = 600;
	TimeEnd = 600;
	TimeUnit='min';
	NLASolver(
		File="nlasolver",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8,
		MaxIterations=300
	);
	DAESolver(
		File="dasslc",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8
	);
	InitialFile="init/UGKO_init.rlt";
end

FlowSheet UVRC
	PARAMETERS
	Patm			as pressure	(Brief="Atmospheric pressure",DisplayUnit='kPa',Default=1);

	DEVICES
	feed1st 		as strG;
	feed2nd		as strG;
	UVRC 		as UnitVapourRecovery;

	CONNECTIONS
	feed1st		to UVRC.mix(1).Inlet3;
	feed2nd		to UVRC.mix(2).Inlet3;

	SPECIFY
#feed1std CONDIDTIONS (from UOTR_init.rlt --> UOTR.PV_003A.Outlet)
	feed1st.Qg 		= 38260.6 * 'm^3/d';
	feed1st.T 		= 352.893 * 'K';
	feed1st.hG 		= 210.055 * 'kJ/kg';
	feed1st.rhoG 		= 5.91538 * 'kg/m^3';
	feed1st.Rv 		= 3.68833 * 'l/m^3';
	feed1st.Bg 		= 0.417627 * 'm^3/m^3';
	feed1st.d60G 		= 0.82789;
	feed1st.TbnG 		= 457.909 * 'K';
	feed1st.dg 		= 2.01812;
	feed1st.Ycg 		= 17.5637 * 'l/m^3';

#feed2nd CONDIDTIONS (from UOTR_init.rlt --> UOTR.PV_002A.Outlet)
	feed2nd.Qg 		= 96077.4 * 'm^3/d';
	feed2nd.T 		= 352.955 * 'K';
	feed2nd.hG 		= 240.74 * 'kJ/kg';
	feed2nd.rhoG 		= 11.151 * 'kg/m^3';
	feed2nd.Rv 		= 2.43404 * 'l/m^3';
	feed2nd.Bg 		= 0.152084 * 'm^3/m^3';
	feed2nd.d60G 		= 0.819863;
	feed2nd.TbnG 		= 444.72 * 'K';
	feed2nd.dg 		= 1.38539;
	feed2nd.Ycg 		= 12.0571 * 'l/m^3';

#MASTER CAPACITY CONTROL
	UVRC.PIT.SPinput = 180*'kPa' + Patm;
	UVRC.MCC.KC = 0.5;
	UVRC.MCC.TI = 600*'s';
	UVRC.MCC.TD = 0*'min';
	UVRC.MCC.mode = 0;	#Auto
	UVRC.MCC.MVinput = UVRC.MCC.MVoutput;

#ANTI-SURGE FLOW CONTROLLER
	UVRC.FIC.KC = 2;
	UVRC.FIC.TI = 30*'s';
	UVRC.FIC.TD = 0*'min';

#SCRUBBER LEVEL CONTROLLER
	UVRC.LIT.SPinput = 0.75*'m';
	UVRC.LIC.KC = [4,1];
	UVRC.LIC.TI = [600,200] * 's';
	UVRC.LIC.TD = [0,0] * 's';
	UVRC.LIC.mode = 0; #Auto
	UVRC.LIC.MVinput = UVRC.LIC.MVoutput;

#TEMPERATURE CONTROL
	UVRC.TIT.SPinput = (50+273.15)*'K';
	UVRC.TIC.KC = 1;
	UVRC.TIC.TI = 60*'s';
	UVRC.TIC.TD = 0*'min';
	UVRC.TIC.mode = 0;	#Auto
	UVRC.TIC.MVinput = UVRC.TIC.MVoutput;

	EQUATIONS
	"Pressure boundary conditions"
	UVRC.SPT(UVRC.numOfStg).Outlet2.P = 2060*'kPa' + Patm;
	UVRC.LV(1).Outlet.P = Patm;

	INITIAL
	"Vapor recovery unit initial conditions"
	UVRC.scrb.OutletG.P 	= [180,670] * 'kPa' + Patm;
	UVRC.scrb.OutletG.T 	= (50+273.15)*'K';
	UVRC.scrb.Level 		= 1.00*'m';
	UVRC.scrb.OutletG.d60G	= [0.82789,0.819863];
	UVRC.scrb.OutletG.TbnG 	= [457.909,444.72] * 'K';
	UVRC.scrb.OutletG.dg 	= [2.01812,1.38539];
	UVRC.scrb.OutletG.Ycg 	= [17.5637,12.0571] * 'l/m^3';

	UVRC.cool.Qout 		= [0.15,0.35]*'MW';

	UVRC.comp.Nr 			= 9000*'rpm';
	UVRC.MCC.MVoutput 		= UVRC.comp(1).Nr/UVRC.Nr_Max;

	UVRC.FIC.MVoutput 		= [0.50,0.50];

	UVRC.LV.c 			= [0.50,0.50];
	UVRC.LIC.MVoutput 		= UVRC.LV(1:UVRC.numOfStg).c;

	OPTIONS
	Dynamic=true;
	TimeStart = 0;
	TimeStep = 600;
	TimeEnd = 600;
	TimeUnit='min';
	NLASolver(
		File="nlasolver",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8,
		MaxIterations=300
	);
	DAESolver(
		File="dasslc",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8
	);
	InitialFile="init/UVRC_init";
end

FlowSheet UOTR
	PARAMETERS
	rho_H2Ostd	as dens_mass	(Brief="Pure water mass density at std. cond.",Default=999.054);	
	Patm			as pressure	(Brief="Atmospheric pressure",DisplayUnit='kPa',Default=1);
	
	DEVICES
	feed			as triphase_source;
	cond1		as str2ph;
	cond2		as str2ph;
	cond3		as str2ph;
	wdesalt		as water_source;

	UOTR 		as UnitOilTreatment;

	str2STK 		as triphase_sink;
	str2UWTR		as water_sink;
	str2UGTR		as gas_sink;

	CONNECTIONS
	feed.Outlet			to 	UOTR.InletMix.InletF;

	cond1				to 	UOTR.CondMix.InletC(1);
	cond2				to 	UOTR.CondMix.InletC(2);
	cond3				to 	UOTR.CondMix.InletC(3);
	wdesalt.Outlet			to 	UOTR.DesaltMix.InletW;

	UOTR.P_001.Hot.Outlet	to	str2STK.Inlet;
	UOTR.LV_002.Outlet		to	str2UWTR.Inlet;
	UOTR.FE_001.Outlet		to 	str2UGTR.Inlet;

	SPECIFY
#feed CONDIDTIONS
	feed.Outlet.Qf		= 24000 * 'm^3/d';
	feed.Outlet.BSW		= 0.1;
	feed.Rgo 			= 250 * 'm^3/m^3';
	feed.Cws 			= 255*'g/l';
	feed.Outlet.T 		= (15+273.15)*'K';
	feed.API			= 29;
	feed.Kw			= 11.3;
	feed.Outlet.dg 	= 0.65;
	feed.Outlet.Ycg 	= 6*'l/m^3';

#cond1 CONDIDTIONS (from UGKO_init.rlt --> UGKO.LV_001.Outlet)
	cond1.Qf 			= 1320.17 * 'm^3/d';
	cond1.Qg 			= 5017.95 * 'm^3/d';
	cond1.T 			= 312.502 * 'K';
	cond1.hO 			= 48.3458 * 'kJ/kg';
	cond1.hG 			= 145.027 * 'kJ/kg';
	cond1.rhoL 		= 887.854 * 'kg/m^3';
	cond1.rhoG 		= 17.4902 * 'kg/m^3';
	cond1.Rs 			= 7.63231 * 'm^3/m^3';
	cond1.Rv 			= 0.796434 * 'l/m^3';
	cond1.Bo 			= 1.02886;
	cond1.Bg 			= 0.102956;
	cond1.d60 		= 0.91439;
	cond1.d60G		= 0.810938;
	cond1.Tbn 		= 685.459 * 'K';
	cond1.TbnG		= 478.135 * 'K';
	cond1.dg 			= 1.47102;
	cond1.dgL			= 2.67448;
	cond1.Ycg 		= 8.40121 * 'l/m^3';
	cond1.YcgL		= 15.2743 * 'l/m^3';

#cond2 CONDIDTIONS (future from UMCP_init.rlt --> UMCP.ExitL.Outlet)
	cond2.Qf 			= 855.828 * 'm^3/d';
	cond2.Qg 			= 1931.34 * 'm^3/d';
	cond2.T 			= 302.736 * 'K';
	cond2.hO 			= 28.093 * 'kJ/kg';
	cond2.hG 			= 138.821 * 'kJ/kg';
	cond2.rhoL 		= 868.073 * 'kg/m^3';
	cond2.rhoG 		= 18.0779 * 'kg/m^3';
	cond2.Rs 			= 9.15476 * 'm^3/m^3';
	cond2.Rv 			= 0.959091 * 'l/m^3';
	cond2.Bo 			= 1.03;
	cond2.Bg 			= 0.0985416;
	cond2.d60 		= 0.895004;
	cond2.d60G		= 0.785594;
	cond2.Tbn 		= 575.889 * 'K';
	cond2.TbnG		= 389.456 * 'K';
	cond2.dg 			= 1.45527;
	cond2.dgL			= 2.8149;
	cond2.Ycg 		= 12.3944 * 'l/m^3';
	cond2.YcgL		= 23.9743 * 'l/m^3';

#cond3 CONDIDTIONS (from UHDP_init.rlt --> UHDP.P_002.Cold.Outlet)
	cond3.Qf 			= 999.157 * 'm^3/d';
	cond3.Qg 			= 22880.6 * 'm^3/d';
	cond3.T 			= 288.435 * 'K';
	cond3.hO 			= -0.530209 * 'kJ/kg';
	cond3.hG 			= 72.776 * 'kJ/kg';
	cond3.rhoL 		= 903.816 * 'kg/m^3';
	cond3.rhoG 		= 27.6945 * 'kg/m^3';
	cond3.Rs 			= 10.6793 * 'm^3/m^3';
	cond3.Rv 			= 0.629465 * 'l/m^3';
	cond3.Bo 			= 1.02798;
	cond3.Bg 			= 0.0771049;
	cond3.d60 		= 0.930033;
	cond3.d60G		= 0.80308;
	cond3.Tbn 		= 646.186 * 'K';
	cond3.TbnG		= 416.043 * 'K';
	cond3.dg 			= 1.74442;
	cond3.dgL			= 3.72261;
	cond3.Ycg 		= 14.8571 * 'l/m^3';
	cond3.YcgL		= 31.7052 * 'l/m^3';

#wdesalt STREAM CONDITIONS
	wdesalt.Outlet.Qw 	= 50 * 'm^3/h';
	wdesalt.Outlet.T 	= (80+273.15) * 'K';
	wdesalt.Cws 		= 50*'g/l';
	wdesalt.Outlet.TOG 	= 0.00 *'ml/m^3';
	wdesalt.Outlet.d60 	= 0.88162;
	wdesalt.Outlet.Tbn 	= 549.247 * 'K';

#TRIPHASE SEPARATOR FLOW ELEMENT ORIFICE PERCENT OPEN AND TRANSMITTER SP
	UOTR.FE_001.c = 1.0;
	UOTR.FIT_001.SPinput = 6e6*'m^3/d';

#TRIPHASE SEPARATOR OIL LEVEL CONTROLLER TUNNING
	UOTR.LIT_001.SPinput = 1.5*'m';
	UOTR.LIC_001.KC = 4;
	UOTR.LIC_001.TI = 600*'s';
	UOTR.LIC_001.TD = 0*'s';
	UOTR.LIC_001.mode = 0; #Auto
	UOTR.LIC_001.MVinput = UOTR.LIC_001.MVoutput;

#TRIPHASE SEPARATOR WATER (INTERFACE) LEVEL CONTROLLER TUNNING
	UOTR.LIT_002.SPinput = 0.15*'m';
	UOTR.LIC_002.KC = 4;
	UOTR.LIC_002.TI = 600*'s';
	UOTR.LIC_002.TD = 0*'s';
	UOTR.LIC_002.mode = 0; #Auto
	UOTR.LIC_002.MVinput = UOTR.LIC_002.MVoutput;

#HEAT EXCHANGER BATTERY SPECIFICATIONS
	UOTR.P_001.Hot.DP = 70*'kPa';
	UOTR.P_001.Cold.DP = 70*'kPa';
	UOTR.P_002.DP = 70*'kPa';
	
#HEAT EXCHANGER BATTERY TEMPERATURE CONTROLLER TUNNING
	UOTR.TIT_001.SPinput = (80+273.15)*'K';
	UOTR.TIC_001.KC = 1;
	UOTR.TIC_001.TI = 60*'s';
	UOTR.TIC_001.TD = 0*'s';
	UOTR.TIC_001.mode = 0;
	UOTR.TIC_001.MVinput = UOTR.TIC_001.MVoutput;
	UOTR.P_002.Qin = (5 + (25 - 5)*UOTR.TIC_001.MVoutput)*'MW';

#PREOIL -DEGASSER PRESSURE CONTROLLER TUNNING
	UOTR.PIT_002A.SPinput = 700*'kPa' + Patm;
	UOTR.PIC_002A.KC = 1;
	UOTR.PIC_002A.TI = 60*'s';
	UOTR.PIC_002A.TD = 0*'s';
	UOTR.PIC_002A.mode = 0; #Auto
	UOTR.PIC_002A.MVinput = UOTR.PIC_002A.MVoutput;

	UOTR.PIT_002B.SPinput = 750*'kPa' + Patm;
	UOTR.PIC_002B.KC = 4;
	UOTR.PIC_002B.TI = 20*'s';
	UOTR.PIC_002B.TD = 0*'s';
	UOTR.PIC_002B.mode = 0; #Auto
	UOTR.PIC_002B.MVinput = UOTR.PIC_002B.MVoutput;

#PRE-OIL DEGASSER OIL LEVEL CONTROLLER TUNNING
	UOTR.LIT_003.SPinput = 1.0*'m';
	UOTR.LIC_003.KC = 4;
	UOTR.LIC_003.TI = 600*'s';
	UOTR.LIC_003.TD = 0*'s';
	UOTR.LIC_003.mode = 0; #Auto
	UOTR.LIC_003.MVinput = UOTR.LIC_003.MVoutput;

#PRE-OIL TREATER WATER LEVEL CONTROLLER TUNNING
	UOTR.LIT_004.SPinput = 2.0*'m';
	UOTR.LIC_004.KC = 4;
	UOTR.LIC_004.TI = 600*'s';
	UOTR.LIC_004.TD = 0*'s';
	UOTR.LIC_004.mode = 0; #Auto
	UOTR.LIC_004.MVinput = UOTR.LIC_004.MVoutput;

#DEGASSER PRESSURE CONTROLLER TUNNING
	UOTR.PIT_003A.SPinput = 200*'kPa' + Patm;
	UOTR.PIC_003A.KC = 1;
	UOTR.PIC_003A.TI = 60*'s';
	UOTR.PIC_003A.TD = 0*'s';
	UOTR.PIC_003A.mode = 0; #Auto
	UOTR.PIC_003A.MVinput = UOTR.PIC_003A.MVoutput;

	UOTR.PIT_003B.SPinput = 220*'kPa' + Patm;
	UOTR.PIC_003B.KC = 3;
	UOTR.PIC_003B.TI = 30*'s';
	UOTR.PIC_003B.TD = 0*'s';
	UOTR.PIC_003B.mode = 0; #Auto
	UOTR.PIC_003B.MVinput = UOTR.PIC_003B.MVoutput;

#DEGASSER OIL LEVEL CONTROLLER TUNNING
	UOTR.LIT_005.SPinput = 1.0*'m';
	UOTR.LIC_005.KC = 4;
	UOTR.LIC_005.TI = 600*'s';
	UOTR.LIC_005.TD = 0*'s';
	UOTR.LIC_005.mode = 0; #Auto
	UOTR.LIC_005.MVinput = UOTR.LIC_005.MVoutput;

#OIL TREATER WATER LEVEL CONTROLLER
	UOTR.LIT_006.SPinput = 2.0*'m';
	UOTR.LIC_006.KC = 4;
	UOTR.LIC_006.TI = 600*'s';
	UOTR.LIC_006.TD = 0*'s';
	UOTR.LIC_006.mode = 0; #Auto
	UOTR.LIC_006.MVinput = UOTR.LIC_006.MVoutput;

	EQUATIONS
	"Pressure boundary conditions"
	str2STK.Inlet.P = Patm;
	str2UGTR.Inlet.P = 2060*'kPa' + Patm;
	str2UWTR.Inlet.P = 700*'kPa' + Patm;

	UOTR.PV_002A.Outlet.P = 670*'kPa' + Patm;
	UOTR.PV_002B.Outlet.P = Patm;
	UOTR.PV_003A.Outlet.P = 180*'kPa' + Patm;
	UOTR.PV_003B.Outlet.P = Patm;

	INITIAL
	"Triphase separator initial conditions"
	UOTR.SG_001.OutletG.P 		= str2UGTR.Inlet.P + 10* 'kPa';
	UOTR.SG_001.OutletG.T 		= (40+273.15)*'K';
	UOTR.SG_001.OutletL.d60 		= 141.5/(29+131.5);
	UOTR.SG_001.OutletL.Tbn 		= (11.3*UOTR.SG_001.OutletL.d60)^3 * 'degR';
	UOTR.SG_001.OutletG.dg 		= 0.7;
	UOTR.SG_001.OutletG.Ycg 		= 4*'l/m^3';
	UOTR.SG_001.OutletW.ws 		= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.SG_001.OutletL.ws 		= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.SG_001.BSWLCS 			= 0.2;
	UOTR.SG_001.OutletL.BSW 		= 0.2;
	UOTR.SG_001.LevelWCS 		= 0.15*'m';
	UOTR.SG_001.LevelCS 		= 1.001*UOTR.SG_001.hweir;
	UOTR.SG_001.LevelCL 		= 1.5*'m';

	UOTR.LV_001.c 				= 0.5;
	UOTR.LIC_001.MVoutput 		= UOTR.LV_001.c;

	UOTR.LV_002.c 				= 0.1;
	UOTR.LIC_002.MVoutput 		= UOTR.LV_002.c;
	
	"Production heater initial conditions"
	UOTR.P_002.Qin 			= 12.5*'MW';
	
	"Pre-oil treater initial conditions"
	UOTR.V_TO_001.OutletG.P 		= 700*'kPa' + Patm;
	UOTR.V_TO_001.OutletG.T 		= (80+273.15)*'K';
	UOTR.V_TO_001.OutletL.d60 	= 141.5/(29+131.5);
	UOTR.V_TO_001.OutletL.Tbn 	= (11.3*UOTR.V_TO_001.OutletL.d60)^3 * 'degR';
	UOTR.V_TO_001.OutletG.dg 	= 1.05;
	UOTR.V_TO_001.OutletG.Ycg 	= 5.5*'l/m^3';
	UOTR.V_TO_001.OutletL.BSW	= 0.2;
	UOTR.V_TO_001.OutletL.ws 	= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.V_TO_001.Level 		= 1.0*'m';

	UOTR.TO_001.OutletW.T 		= (80+273.15)*'K';
	UOTR.TO_001.OutletL.d60 		= 141.5/(29+131.5);
	UOTR.TO_001.OutletL.Tbn 		= (11.3*UOTR.TO_001.OutletL.d60)^3 * 'degR';	
	UOTR.TO_001.OutletW.ws 		= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.TO_001.LevelW 			= 2.0*'m';

	UOTR.PV_002A.c 			= 0.5;
	UOTR.PIC_002A.MVoutput 		= UOTR.PV_002A.c;
	UOTR.PV_002B.c 			= 0.00;
	UOTR.PIC_002B.MVoutput 		= UOTR.PV_002B.c;
	
	UOTR.LV_003.c 				= 0.5;
	UOTR.LIC_003.MVoutput 		= UOTR.LV_003.c;

	UOTR.LV_004.c 				= 0.5;
	UOTR.LIC_004.MVoutput 		= UOTR.LV_004.c;
	
	"Oil treater initial conditions"
	UOTR.V_TO_002.OutletG.P 		= 200*'kPa' + Patm;
	UOTR.V_TO_002.OutletG.T 		= (80+273.15)*'K';
	UOTR.V_TO_002.OutletL.d60	= 141.5/(29+131.5);
	UOTR.V_TO_002.OutletL.Tbn	= (11.3*UOTR.V_TO_002.OutletL.d60)^3 * 'degR';
	UOTR.V_TO_002.OutletG.dg		= 1.5;
	UOTR.V_TO_002.OutletG.Ycg	= 6.5*'l/m^3';
	UOTR.V_TO_002.OutletL.BSW	= 0.2;
	UOTR.V_TO_002.OutletL.ws		= (50*'g/l'/rho_H2Ostd)/(1+(50*'g/l'/rho_H2Ostd));
	UOTR.V_TO_002.Level			= 1.0*'m';

	UOTR.TO_002.OutletW.T 		= (80+273.15)*'K';
	UOTR.TO_002.OutletL.d60 		= 141.5/(29+131.5);
	UOTR.TO_002.OutletL.Tbn 		= (11.3*UOTR.TO_002.OutletL.d60)^3 * 'degR';	
	UOTR.TO_002.OutletW.ws 		= (50*'g/l'/rho_H2Ostd)/(1+(50*'g/l'/rho_H2Ostd));
	UOTR.TO_002.LevelW 			= 2.0*'m';

	UOTR.PV_003A.c 			= 0.5;
	UOTR.PIC_003A.MVoutput 		= UOTR.PV_003A.c;
	UOTR.PV_003B.c 			= 0.00;
	UOTR.PIC_003B.MVoutput 		= UOTR.PV_003B.c;
	
	UOTR.LV_005.c 				= 0.7;
	UOTR.LIC_005.MVoutput 		= UOTR.LV_005.c;

	UOTR.LV_006.c 				= 0.5;
	UOTR.LIC_006.MVoutput 		= UOTR.LV_006.c;

	OPTIONS
	Dynamic=true;
	TimeStart = 0;
	TimeStep = 600;
	TimeEnd = 600;
	TimeUnit='min';
	NLASolver(
		File="nlasolver",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8,
		MaxIterations=300
	);
	DAESolver(
		File="dasslc",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8,
		EventAccuracy=1e-2
	);
	InitialFile="init/UOTR_init.rlt";
end

FlowSheet OilProcess
	PARAMETERS
	rho_H2Ostd	as dens_mass	(Brief="Pure water mass density at std. cond.",Default=999.054);	
	Patm			as pressure	(Brief="Atmospheric pressure",DisplayUnit='kPa',Default=1);
	
	DEVICES
	feed			as triphase_source;
	cond1		as str2ph;
	cond2		as str2ph;
	cond3		as str2ph;
	wdesalt		as water_source;

	UOTR 		as UnitOilTreatment;

	gas1			as strG;
	gas2			as strG;
	UGKO			as UnitGasKnockout;

	feed1st 		as strG;
	feed2nd		as strG;
	UVRC 		as UnitVapourRecovery;

	str2STK 		as triphase_sink;
	str2UWTR		as water_sink;
	str2UGTR		as gas_sink;

	CONNECTIONS
	feed.Outlet			to 	UOTR.InletMix.InletF;
#	cond1				to 	UOTR.CondMix.InletC(1);
	UGKO.LV_001.Outlet		to	UOTR.CondMix.InletC(1);
	cond2				to 	UOTR.CondMix.InletC(2);
	cond3				to 	UOTR.CondMix.InletC(3);
	wdesalt.Outlet			to 	UOTR.DesaltMix.InletW;

#	gas1					to	UGKO.GMX_001.Inlet(1);
#	gas2					to	UGKO.GMX_001.Inlet(2);
	UOTR.FE_001.Outlet		to 	UGKO.GMX_001.Inlet(1);
	UVRC.SPT(2).Outlet2		to	UGKO.GMX_001.Inlet(2);

#	feed1st				to 	UVRC.mix(1).Inlet3;
#	feed2nd				to 	UVRC.mix(2).Inlet3;
	UOTR.PV_003A.Outlet		to 	UVRC.mix(1).Inlet3;
	UOTR.PV_002A.Outlet		to 	UVRC.mix(2).Inlet3;

	UOTR.P_001.Hot.Outlet	to	str2STK.Inlet;
	UOTR.LV_002.Outlet		to	str2UWTR.Inlet;
	UGKO.FE_001.Outlet		to 	str2UGTR.Inlet;

	SPECIFY
#feed CONDIDTIONS
#	feed.Outlet.Qf		= 24000 * 'm^3/d';		<---------------------- GO TO EQUATIONS >> DISTURBS SECTION
#	feed.Outlet.BSW	= 0.1;		<---------------------------------- GO TO EQUATIONS >> DISTURBS SECTION
	feed.Rgo 			= 250 * 'm^3/m^3';
	feed.Cws 			= 255*'g/l';
	feed.Outlet.T 		= (15+273.15)*'K';
	feed.API			= 29;
	feed.Kw			= 11.3;
	feed.Outlet.dg 	= 0.65;
	feed.Outlet.Ycg		= 6*'l/m^3';

#cond1 CONDIDTIONS (from UGKO_init.rlt --> UGKO.LV_001.Outlet)
	cond1.Qf 			= 1320.17 * 'm^3/d';
	cond1.Qg 			= 5017.95 * 'm^3/d';
	cond1.T 			= 312.502 * 'K';
	cond1.hO 			= 48.3458 * 'kJ/kg';
	cond1.hG 			= 145.027 * 'kJ/kg';
	cond1.rhoL 		= 887.854 * 'kg/m^3';
	cond1.rhoG 		= 17.4902 * 'kg/m^3';
	cond1.Rs 			= 7.63231 * 'm^3/m^3';
	cond1.Rv 			= 0.796434 * 'l/m^3';
	cond1.Bo 			= 1.02886;
	cond1.Bg 			= 0.102956;
	cond1.d60 		= 0.91439;
	cond1.d60G		= 0.810938;
	cond1.Tbn 		= 685.459 * 'K';
	cond1.TbnG		= 478.135 * 'K';
	cond1.dg 			= 1.47102;
	cond1.dgL			= 2.67448;
	cond1.Ycg 		= 8.40121 * 'l/m^3';
	cond1.YcgL		= 15.2743 * 'l/m^3';

#cond2 CONDIDTIONS (future from UMCP_init.rlt --> UMCP.ExitL.Outlet)
	cond2.Qf 			= 855.828 * 'm^3/d';
	cond2.Qg 			= 1931.34 * 'm^3/d';
	cond2.T 			= 302.736 * 'K';
	cond2.hO 			= 28.093 * 'kJ/kg';
	cond2.hG 			= 138.821 * 'kJ/kg';
	cond2.rhoL 		= 868.073 * 'kg/m^3';
	cond2.rhoG 		= 18.0779 * 'kg/m^3';
	cond2.Rs 			= 9.15476 * 'm^3/m^3';
	cond2.Rv 			= 0.959091 * 'l/m^3';
	cond2.Bo 			= 1.03;
	cond2.Bg 			= 0.0985416;
	cond2.d60 		= 0.895004;
	cond2.d60G		= 0.785594;
	cond2.Tbn 		= 575.889 * 'K';
	cond2.TbnG		= 389.456 * 'K';
	cond2.dg 			= 1.45527;
	cond2.dgL			= 2.8149;
	cond2.Ycg 		= 12.3944 * 'l/m^3';
	cond2.YcgL		= 23.9743 * 'l/m^3';

#cond3 CONDIDTIONS (from UHDP_init.rlt --> UHDP.P_002.Cold.Outlet)
	cond3.Qf 			= 999.157 * 'm^3/d';
	cond3.Qg 			= 22880.6 * 'm^3/d';
	cond3.T 			= 288.435 * 'K';
	cond3.hO 			= -0.530209 * 'kJ/kg';
	cond3.hG 			= 72.776 * 'kJ/kg';
	cond3.rhoL 		= 903.816 * 'kg/m^3';
	cond3.rhoG 		= 27.6945 * 'kg/m^3';
	cond3.Rs 			= 10.6793 * 'm^3/m^3';
	cond3.Rv 			= 0.629465 * 'l/m^3';
	cond3.Bo 			= 1.02798;
	cond3.Bg 			= 0.0771049;
	cond3.d60 		= 0.930033;
	cond3.d60G		= 0.80308;
	cond3.Tbn 		= 646.186 * 'K';
	cond3.TbnG		= 416.043 * 'K';
	cond3.dg 			= 1.74442;
	cond3.dgL			= 3.72261;
	cond3.Ycg 		= 14.8571 * 'l/m^3';
	cond3.YcgL		= 31.7052 * 'l/m^3';

#wdesalt STREAM CONDITIONS
	wdesalt.Outlet.Qw 	= 50 * 'm^3/h';
	wdesalt.Outlet.T 	= (80+273.15) * 'K';
	wdesalt.Cws 		= 50*'g/l';
	wdesalt.Outlet.TOG 	= 0.00 *'ml/m^3';
	wdesalt.Outlet.d60 	= 0.88162;
	wdesalt.Outlet.Tbn 	= 549.247 * 'K';

#gas1 STREAM CONDIDTIONS (from UOTR_init.rlt --> UOTR.FE_001.Outlet)
	gas1.Qg 			= 5.41821e6 * 'm^3/d';
	gas1.T 			= 307.708 * 'K';
	gas1.hG			= 316.587 * 'kJ/kg';
	gas1.rhoG 		= 16.8924 * 'kg/m^3';
	gas1.Rv 			= 0.332803 * 'l/m^3';
	gas1.Bg 			= 0.0475321 * 'm^3/m^3';
	gas1.d60G 		= 0.775174;
	gas1.TbnG 		= 373.389 * 'K';
	gas1.dg 			= 0.655926;
	gas1.Ycg 			= 6.0547 * 'l/m^3';

#gas2 STREAM CONDIDTIONS (from UVRC_init.rlt --> UVRC.SPT(2).Outlet2)
	gas2.Qg 			= 133964 * 'm^3/d';
	gas2.T 			= 369.452 * 'K';
	gas2.hG			= 240.827 * 'kJ/kg';
	gas2.rhoG 		= 39.4868 * 'kg/m^3';
	gas2.Rv 			= 1.24011 * 'l/m^3';
	gas2.Bg 			= 0.0485643 * 'm^3/m^3';
	gas2.d60G			= 0.821585;
	gas2.TbnG 		= 447.528 * 'K';
	gas2.dg 			= 1.56655;
	gas2.Ycg 			= 13.6337 * 'l/m^3';

#feed1std CONDIDTIONS (from UOTR_init.rlt --> UOTR.PV_003A.Outlet)
	feed1st.Qg 		= 38260.6 * 'm^3/d';
	feed1st.T 		= 352.893 * 'K';
	feed1st.hG 		= 210.055 * 'kJ/kg';
	feed1st.rhoG		= 5.91538 * 'kg/m^3';
	feed1st.Rv 		= 3.68833 * 'l/m^3';
	feed1st.Bg 		= 0.417627 * 'm^3/m^3';
	feed1st.d60G		= 0.82789;
	feed1st.TbnG		= 457.909 * 'K';
	feed1st.dg 		= 2.01812;
	feed1st.Ycg 		= 17.5637 * 'l/m^3';

#feed2nd CONDIDTIONS (from UOTR_init.rlt --> UOTR.PV_002A.Outlet)
	feed2nd.Qg 		= 96077.4 * 'm^3/d';
	feed2nd.T 		= 352.955 * 'K';
	feed2nd.hG 		= 240.74 * 'kJ/kg';
	feed2nd.rhoG		= 11.151 * 'kg/m^3';
	feed2nd.Rv 		= 2.43404 * 'l/m^3';
	feed2nd.Bg 		= 0.152084 * 'm^3/m^3';
	feed2nd.d60G		= 0.819863;
	feed2nd.TbnG		= 444.72 * 'K';
	feed2nd.dg 		= 1.38539;
	feed2nd.Ycg 		= 12.0571 * 'l/m^3';

#TRIPHASE SEPARATOR FLOW ELEMENT ORIFICE PERCENT OPEN AND TRANSMITTER SP
	UOTR.FE_001.c = 1.0;
	UOTR.FIT_001.SPinput = 6e6*'m^3/d';

#TRIPHASE SEPARATOR OIL LEVEL CONTROLLER TUNNING
	UOTR.LIT_001.SPinput = 1.5*'m';
	UOTR.LIC_001.KC = 4;
	UOTR.LIC_001.TI = 600*'s';
	UOTR.LIC_001.TD = 0*'s';
	UOTR.LIC_001.mode = 0; #Auto
	UOTR.LIC_001.MVinput = UOTR.LIC_001.MVoutput;

#TRIPHASE SEPARATOR WATER (INTERFACE) LEVEL CONTROLLER TUNNING
	UOTR.LIT_002.SPinput = 0.15*'m';
	UOTR.LIC_002.KC = 4;
	UOTR.LIC_002.TI = 600*'s';
	UOTR.LIC_002.TD = 0*'s';
	UOTR.LIC_002.mode = 0; #Auto
	UOTR.LIC_002.MVinput = UOTR.LIC_002.MVoutput;

#HEAT EXCHANGER BATTERY SPECIFICATIONS
	UOTR.P_001.Hot.DP = 70*'kPa';
	UOTR.P_001.Cold.DP = 70*'kPa';
	UOTR.P_002.DP = 70*'kPa';
	
#HEAT EXCHANGER BATTERY TEMPERATURE CONTROLLER TUNNING
	UOTR.TIT_001.SPinput = (80+273.15)*'K';
	UOTR.TIC_001.KC = 1;
	UOTR.TIC_001.TI = 60*'s';
	UOTR.TIC_001.TD = 0*'s';
	UOTR.TIC_001.mode = 0;
	UOTR.TIC_001.MVinput = UOTR.TIC_001.MVoutput;
#	UOTR.P_002.Qin = (5 + (25 - 5)*UOTR.TIC_001.MVoutput)*'MW';	<-- GO TO EQUATIONS >> DISTURBS SECTION

#PREOIL -DEGASSER PRESSURE CONTROLLER TUNNING
	UOTR.PIT_002A.SPinput = 700*'kPa' + Patm;
	UOTR.PIC_002A.KC = 1;
	UOTR.PIC_002A.TI = 60*'s';
	UOTR.PIC_002A.TD = 0*'s';
	UOTR.PIC_002A.mode = 0; #Auto
	UOTR.PIC_002A.MVinput = UOTR.PIC_002A.MVoutput;

	UOTR.PIT_002B.SPinput = 750*'kPa' + Patm;
	UOTR.PIC_002B.KC = 4;
	UOTR.PIC_002B.TI = 20*'s';
	UOTR.PIC_002B.TD = 0*'s';
	UOTR.PIC_002B.mode = 0; #Auto
	UOTR.PIC_002B.MVinput = UOTR.PIC_002B.MVoutput;

#PRE-OIL DEGASSER OIL LEVEL CONTROLLER TUNNING
	UOTR.LIT_003.SPinput = 1.0*'m';
	UOTR.LIC_003.KC = 4;
	UOTR.LIC_003.TI = 600*'s';
	UOTR.LIC_003.TD = 0*'s';
	UOTR.LIC_003.mode = 0; #Auto
	UOTR.LIC_003.MVinput = UOTR.LIC_003.MVoutput;

#PRE-OIL TREATER WATER LEVEL CONTROLLER TUNNING
	UOTR.LIT_004.SPinput = 2.0*'m';
	UOTR.LIC_004.KC = 4;
	UOTR.LIC_004.TI = 600*'s';
	UOTR.LIC_004.TD = 0*'s';
	UOTR.LIC_004.mode = 0; #Auto
	UOTR.LIC_004.MVinput = UOTR.LIC_004.MVoutput;

#DEGASSER PRESSURE CONTROLLER TUNNING
	UOTR.PIT_003A.SPinput = 200*'kPa' + Patm;
	UOTR.PIC_003A.KC = 1;
	UOTR.PIC_003A.TI = 60*'s';
	UOTR.PIC_003A.TD = 0*'s';
	UOTR.PIC_003A.mode = 0; #Auto
	UOTR.PIC_003A.MVinput = UOTR.PIC_003A.MVoutput;

	UOTR.PIT_003B.SPinput = 220*'kPa' + Patm;
	UOTR.PIC_003B.KC = 3;
	UOTR.PIC_003B.TI = 30*'s';
	UOTR.PIC_003B.TD = 0*'s';
	UOTR.PIC_003B.mode = 0; #Auto
	UOTR.PIC_003B.MVinput = UOTR.PIC_003B.MVoutput;

#DEGASSER OIL LEVEL CONTROLLER TUNNING
	UOTR.LIT_005.SPinput = 1.0*'m';
	UOTR.LIC_005.KC = 4;
	UOTR.LIC_005.TI = 600*'s';
	UOTR.LIC_005.TD = 0*'s';
	UOTR.LIC_005.mode = 0; #Auto
	UOTR.LIC_005.MVinput = UOTR.LIC_005.MVoutput;

#OIL TREATER WATER LEVEL CONTROLLER
	UOTR.LIT_006.SPinput = 2.0*'m';
	UOTR.LIC_006.KC = 4;
	UOTR.LIC_006.TI = 600*'s';
	UOTR.LIC_006.TD = 0*'s';
	UOTR.LIC_006.mode = 0; #Auto
	UOTR.LIC_006.MVinput = UOTR.LIC_006.MVoutput;

#INLET GAS COOLET TEMPERATURE CONTROLLER TUNNING
	UGKO.TIT_001.SPinput = (30+273.15)*'K';
	UGKO.TIC_001.KC = 1;
	UGKO.TIC_001.TI = 60*'s';
	UGKO.TIC_001.TD = 0*'s';
	UGKO.TIC_001.mode = 0; #Auto
	UGKO.TIC_001.MVinput = UGKO.TIC_001.MVoutput;
	UGKO.P_001.Qout = 2.5*UGKO.TIC_001.MVoutput*'MW';

#INLET SCRUBBER PRESSURE CONTROLLER TUNNING
	UGKO.PIT_001.SPinput = 2100*'kPa' + Patm;
	UGKO.PIC_001.KC = 1;
	UGKO.PIC_001.TI = 60*'s';
	UGKO.PIC_001.TD = 0*'s';
	UGKO.PIC_001.mode = 0; #Auto
	UGKO.PIC_001.MVinput = UGKO.PIC_001.MVoutput;

#INLET SCRUBBER LEVEL CONTROLLER TUNNING
	UGKO.LIT_001.SPinput = 0.5*'m';
	UGKO.LIC_001.KC = 4;
	UGKO.LIC_001.TI = 600*'s';
	UGKO.LIC_001.TD = 0*'s';
	UGKO.LIC_001.mode = 0; #Auto
	UGKO.LIC_001.MVinput = UGKO.LIC_001.MVoutput;

#FLOW ELEMENT ORIFICE PERCENT OPEN AND TRANSMITTER SP
	UGKO.FE_001.c = 1.0;
	UGKO.FIT_001.SPinput = 6e6*'m^3/d';

#MASTER CAPACITY CONTROL
	UVRC.PIT.SPinput = 180*'kPa' + Patm;
	UVRC.MCC.KC = 1;
	UVRC.MCC.TI = 420*'s';
	UVRC.MCC.TD = 0*'min';
	UVRC.MCC.mode = 0;	#Auto
	UVRC.MCC.MVinput = UVRC.MCC.MVoutput;

#ANTI-SURGE FLOW CONTROLLER
	UVRC.FIC.KC = 2;
	UVRC.FIC.TI = 30*'s';
	UVRC.FIC.TD = 0*'min';

#SCRUBBER LEVEL CONTROLLER
	UVRC.LIT.SPinput = 0.75*'m';
	UVRC.LIC.KC = [4,1];
	UVRC.LIC.TI = [600,200] * 's';
	UVRC.LIC.TD = [0,0] * 's';
	UVRC.LIC.mode = 0; #Auto
	UVRC.LIC.MVinput = UVRC.LIC.MVoutput;

#TEMPERATURE CONTROL
	UVRC.TIT.SPinput = (50+273.15)*'K';
	UVRC.TIC.KC = 1;
	UVRC.TIC.TI = 60*'s';
	UVRC.TIC.TD = 0*'min';
	UVRC.TIC.mode = 0;	#Auto
	UVRC.TIC.MVinput = UVRC.TIC.MVoutput;

	EQUATIONS
	"Pressure boundary conditions"
	str2STK.Inlet.P = Patm;
	str2UWTR.Inlet.P = 700*'kPa' + Patm;

	UOTR.PV_002B.Outlet.P = Patm;
	UOTR.PV_003B.Outlet.P = Patm;

	UGKO.FE_001.Outlet.P = 2000*'kPa' + Patm;

	UVRC.LV(1).Outlet.P = Patm;

#*FOR FLOWSHEET BUILD WITH DEVICES DISCONNTECTED"
The equations below were used and commented appropriately to
add new devices and re-simulate to renew the initial file*#
#	UOTR.FE_001.Outlet.P = 2060*'kPa' + Patm;			#UOTR.FE_001.Outlet disconnected to UGKO
#	UOTR.PV_002A.Outlet.P = 670*'kPa' + Patm;			#UOTR.PV_002A.Outlet disconnected to UVRC
#	UOTR.PV_003A.Outlet.P = 180*'kPa' + Patm;			#UOTR.PV_003A.Outlet disconnected to UVRC

#	UGKO.LV_001.Outlet.P = 941.325 * 'kPa';				#UGKO.LV_001.Outlet disconnected to UOTR

#	UVRC.SPT(2).Outlet2.P = 2060*'kPa' + Patm;			#UVRC.SPT(2).Outlet2 disconnected to UGKO
	
#*FOR FLOWSHEET BUILD WITH DEVICES CONNTECTED"
The equations below were used and commented appropriately to 
add new devices and re-simulate to renew the initial file*#

	gas1.P = UGKO.GMX_001.Outlet.P;					#UOTR.FE_001.Outlet connected to UGKO
	gas2.P = UGKO.GMX_001.Outlet.P;					#UVRC.SPT(2).Outlet2 connected to UGKO
	cond1.P = UOTR.CondMix.InletC(1).P;				#UGKO.LV_001.Outlet connected to UOTR
#	cond2.P = UOTR.CondMix.InletC(2).P;				#UMCP.ExitL.Outlet connected to UOTR
#	cond3.P = UOTR.CondMix.InletC(3).P;				#UHDP.P_002.Cold.Outlet connected to UOTR
	feed1st.P = UOTR.PV_003A.Outlet.P;					#UOTR.PV_002A.Outlet connected to UVRC
	feed2nd.P = UOTR.PV_002A.Outlet.P;					#UOTR.PV_003A.Outlet connected to UVRC

#DISTURBANCES APPLIED
	"DISTURBANCE CASE 0: feed.Outlet.Qf"
	feed.Outlet.Qf	= 24000 * 'm^3/d';
#	feed.Outlet.Qf = 24000*'m^3/d' - 18000*'m^3/d'*(
#		0.5*(1+tanh((time/'min'-60)/1e-4))*(time/'min'-60)/(100-60)
#		- 0.5*(1+tanh((time/'min'-100)/1e-4))*(time/'min'-100)/(100-60)
#		);

	"DISTURBANCE CASE 0: feed.Outlet.BSW"
	feed.Outlet.BSW	= 0.1;
#	feed.Outlet.BSW - 0.1 = 0.05*0.5*(1+tanh((time/'min'-60)/1e-4));

	"DISTURBANCE CASE A: UOTR.P_002.Qin"
	UOTR.P_002.Qin/'MW' = (5 + (25 - 5)*UOTR.TIC_001.MVoutput);
#	UOTR.P_002.Qin/'MW' = (5 + (25 - 5)*UOTR.TIC_001.MVoutput)*
#		(1-0.64*(1+tanh((time/'min'-60)/1e-4))*0.5*(1-exp(-(time/'min'-60)/8)));

	INITIAL
	"Triphase separator initial conditions"
	UOTR.SG_001.OutletG.P 		= 2000*'kPa' + Patm;
	UOTR.SG_001.OutletG.T 		= (40+273.15)*'K';
	UOTR.SG_001.OutletL.d60 		= 141.5/(29+131.5);
	UOTR.SG_001.OutletL.Tbn 		= (11.3*UOTR.SG_001.OutletL.d60)^3 * 'degR';
	UOTR.SG_001.OutletG.dg 		= 0.7;
	UOTR.SG_001.OutletG.Ycg 		= 4*'l/m^3';
	UOTR.SG_001.OutletW.ws 		= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.SG_001.OutletL.ws 		= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.SG_001.BSWLCS 			= 0.2;
	UOTR.SG_001.OutletL.BSW 		= 0.2;
	UOTR.SG_001.LevelWCS 		= 0.15*'m';
	UOTR.SG_001.LevelCS 		= 1.001*UOTR.SG_001.hweir;
	UOTR.SG_001.LevelCL 		= 1.5*'m';

	UOTR.LV_001.c 				= 0.5;
	UOTR.LIC_001.MVoutput 		= UOTR.LV_001.c;
	
	UOTR.LV_002.c 				= 0.1;
	UOTR.LIC_002.MVoutput 		= UOTR.LV_002.c;
	
	"Production heater initial conditions"
	UOTR.P_002.Qin 			= 12.5*'MW';
	
	"Pre-oil treater initial conditions"
	UOTR.V_TO_001.OutletG.P 		= 700*'kPa' + Patm;
	UOTR.V_TO_001.OutletG.T 		= (90+273.15)*'K';
	UOTR.V_TO_001.OutletL.d60	= 141.5/(29+131.5);
	UOTR.V_TO_001.OutletL.Tbn	= (11.3*UOTR.V_TO_001.OutletL.d60)^3 * 'degR';
	UOTR.V_TO_001.OutletG.dg		= 1.05;
	UOTR.V_TO_001.OutletG.Ycg	= 5.5*'l/m^3';
	UOTR.V_TO_001.OutletL.BSW	= 0.2;
	UOTR.V_TO_001.OutletL.ws		= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.V_TO_001.Level			= 1.0*'m';

	UOTR.TO_001.OutletW.T 		= (90+273.15)*'K';
	UOTR.TO_001.OutletL.d60 		= 141.5/(29+131.5);
	UOTR.TO_001.OutletL.Tbn 		= (11.3*UOTR.TO_001.OutletL.d60)^3 * 'degR';	
	UOTR.TO_001.OutletW.ws 		= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.TO_001.LevelW 			= 2.0*'m';

	UOTR.PV_002A.c 			= 0.5;
	UOTR.PIC_002A.MVoutput 		= UOTR.PV_002A.c;
	UOTR.PV_002B.c 			= 0.00;
	UOTR.PIC_002B.MVoutput 		= UOTR.PV_002B.c;
	
	UOTR.LV_003.c 				= 0.5;
	UOTR.LIC_003.MVoutput 		= UOTR.LV_003.c;

	UOTR.LV_004.c 				= 0.5;
	UOTR.LIC_004.MVoutput 		= UOTR.LV_004.c;
	
	"Oil treater initial conditions"
	UOTR.V_TO_002.OutletG.P 		= 200*'kPa' + Patm;
	UOTR.V_TO_002.OutletG.T 		= (90+273.15)*'K';
	UOTR.V_TO_002.OutletL.d60 	= 141.5/(29+131.5);
	UOTR.V_TO_002.OutletL.Tbn 	= (11.3*UOTR.V_TO_002.OutletL.d60)^3 * 'degR';
	UOTR.V_TO_002.OutletG.dg 	= 1.5;
	UOTR.V_TO_002.OutletG.Ycg 	= 6.5*'l/m^3';
	UOTR.V_TO_002.OutletL.BSW 	= 0.2;
	UOTR.V_TO_002.OutletL.ws 	= (50*'g/l'/rho_H2Ostd)/(1+(50*'g/l'/rho_H2Ostd));
	UOTR.V_TO_002.Level			= 1.0*'m';

	UOTR.TO_002.OutletW.T 		= (90+273.15)*'K';
	UOTR.TO_002.OutletL.d60 		= 141.5/(29+131.5);
	UOTR.TO_002.OutletL.Tbn 		= (11.3*UOTR.TO_002.OutletL.d60)^3 * 'degR';	
	UOTR.TO_002.OutletW.ws 		= (50*'g/l'/rho_H2Ostd)/(1+(50*'g/l'/rho_H2Ostd));
	UOTR.TO_002.LevelW 			= 2.0*'m';

	UOTR.PV_003A.c 			= 0.5;
	UOTR.PIC_003A.MVoutput 		= UOTR.PV_003A.c;
	UOTR.PV_003B.c 			= 0.00;
	UOTR.PIC_003B.MVoutput 		= UOTR.PV_003B.c;
	
	UOTR.LV_005.c 				= 0.7;
	UOTR.LIC_005.MVoutput 		= UOTR.LV_005.c;
	
	UOTR.LV_006.c 				= 0.5;
	UOTR.LIC_006.MVoutput 		= UOTR.LV_006.c;

	"Inlet gas cooler initial conditions"
	UGKO.P_001.Qout 			= 2*'MW';

	"Inlet scrubber initial conditions" 
	UGKO.V_001.OutletG.P 		= 2100 * 'kPa' + Patm;
	UGKO.V_001.OutletG.T 		= (40+273.15)*'K';
	UGKO.V_001.Level 			= 0.5*'m';
	UGKO.V_001.OutletG.dg 		= 0.65;
	UGKO.V_001.OutletG.Ycg		= 2*'l/m^3';
	UGKO.V_001.OutletG.d60G 		= 141.5/(70+131.5);
	UGKO.V_001.OutletG.TbnG 		= (9.083*UGKO.V_001.OutletG.d60G)^3 * 'degR';

	UGKO.PIC_001.MVoutput 		= 1e-5;
	
	UGKO.LV_001.c 				= 0.4;
	UGKO.LIC_001.MVoutput 		= UGKO.LV_001.c;

	"Vapor recovery unit initial conditions"
	UVRC.scrb.OutletG.P 		= [180,670] * 'kPa' + Patm;
	UVRC.scrb.OutletG.T 		= (50+273.15)*'K';
	UVRC.scrb.Level 			= 1.00*'m';
	UVRC.scrb.OutletG.d60G 		= [0.82789,0.819863];
	UVRC.scrb.OutletG.TbnG 		= [457.909,444.72] * 'K';
	UVRC.scrb.OutletG.dg 		= [2.01812,1.38539];
	UVRC.scrb.OutletG.Ycg 		= [17.5637,12.0571] * 'l/m^3';

	UVRC.cool.Qout 			= [0.15,0.35]*'MW';

	UVRC.comp.Nr 				= 9000*'rpm';
	UVRC.MCC.MVoutput 			= UVRC.comp(1).Nr/UVRC.Nr_Max;

	UVRC.FIC.MVoutput 			= [0.50,0.50];

	UVRC.LV.c 				= [0.50,0.50];
	UVRC.LIC.MVoutput 			= UVRC.LV.c;

	OPTIONS
	Dynamic=true;
	SparseAlgebra=true;
	TimeStart = 0;
	TimeStep = 1;
	TimeEnd = 600;
	TimeUnit='min';
	NLASolver(
		File="nlasolver",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8,
		MaxIterations=300
	);
	DAESolver(
		File="dasslc",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8,
		EventAccuracy=1e-2
	);
	InitialFile="init/OilProcess_init.rlt";
end

FlowSheet UMCP
	PARAMETERS
	Patm			as 	pressure		(Brief="Atmospheric pressure",DisplayUnit='kPa',Default=1);
	
	DEVICES
	feedGas 		as 	strG;
	UMCP 		as 	UnitMainCompression;

	CONNECTIONS
	feedGas		to 	UMCP.InletSPT.Inlet;

	SPECIFY
#feedGas CONDIDTIONS (from OilProcess_init.rlt --> UGKO.FE_001.Outlet)
	feedGas.Qg 		= 5.5414e6*'m^3/d';
	feedGas.T 		= 303.003 * 'K';
	feedGas.hG		= 291.275 * 'kJ/kg';
	feedGas.rhoG		= 17.2638 * 'kg/m^3';
	feedGas.Rv		= 0.281302 * 'l/m^3';
	feedGas.Bg		= 0.0479362 * 'm^3/m^3';	
	feedGas.d60G 		= 0.788799;
	feedGas.TbnG 		= 378.656 * 'K';
	feedGas.dg 		= 0.676043;
	feedGas.Ycg 		= 6.23283 * 'l/m^3';

#MASTER CAPACITY CONTROL
	UMCP.PIT.SPinput = 2000*'kPa' + Patm;
	UMCP.MCC.KC = 1;
	UMCP.MCC.TI = 420*'s';
	UMCP.MCC.TD = 0*'min';
	UMCP.MCC.mode = 0;	#Auto
	UMCP.MCC.MVinput = UMCP.MCC.MVoutput;

#ANTI-SURGE FLOW CONTROLLER
	UMCP.FIC.KC = 1;
	UMCP.FIC.TI = 60*'s';
	UMCP.FIC.TD = 0*'min';

#SUCTION SCRUBBER LEVEL CONTROLLER
	UMCP.LIT.SPinput = [1,1] * 'm';
	UMCP.LIC.KC = [4,4];
	UMCP.LIC.TI = [600,600]*'s';
	UMCP.LIC.TD = [0,0]*'s';
	UMCP.LIC.mode = [0,0]; #Auto
	UMCP.LIC.MVinput = UMCP.LIC.MVoutput;

#TEMPERATURE CONTROL
	UMCP.TIT.SPinput = (30+273.15)*'K';
	UMCP.TIC.KC = 1;
	UMCP.TIC.TI = 60*'s';
	UMCP.TIC.TD = 0*'min';
	UMCP.TIC.mode = 0;	#Auto
	UMCP.TIC.MVinput = UMCP.TIC(1:UMCP.numOfStg).MVoutput;
	
	EQUATIONS
	"Pressure boundary conditions"
	UMCP.LV(1).Outlet.P = 945.325*'kPa';	#(from OilProcess_init002.rlt --> UOTR.CondMix.Outlet.P)
	
	"Hypothetical PI control for unit outlet pressure"
	diff(UMCP.ExitG.Outlet.Qg) = -feedGas.Qg*0.1*(
		diff(8150-(UMCP.ExitG.Outlet.P-Patm)/'kPa') 
		+ 1/(60*'s')*(8150-(UMCP.ExitG.Outlet.P-Patm)/'kPa')
	);
	
	INITIAL
	"Main compreesion unit initial conditions"
	UMCP.scrb.OutletG.P 		= [2000,8000] * 'kPa' + Patm;	
	UMCP.scrb.OutletG.T 		= (30+273.15)*'K';
	UMCP.scrb.OutletG.d60G 		= 0.788785;
	UMCP.scrb.OutletG.TbnG 		= 393.728 * 'K';
	UMCP.scrb.OutletG.dg 		= 0.703984;
	UMCP.scrb.OutletG.Ycg 		= 3.9913*'l/m^3';
	UMCP.scrb.Level 			= 1.0*'m';

	UMCP.comp.Nr 				= 11000*'rpm';
	UMCP.MCC.MVoutput 			= UMCP.comp(1).Nr/UMCP.Nr_Max;

	UMCP.FIC.MVoutput 			= 0;

	UMCP.LV.c 				= [0.5,0.5];
	UMCP.LIC.MVoutput 			= UMCP.LV.c;

	UMCP.cool.Qout 			= 7*'MW';
	
	"Initial condition for unit outlet pressure hypothetical PI control"
	UMCP.ExitG.Outlet.Qg 		= feedGas.Qg/2;
	
	OPTIONS
	Dynamic=true;
	TimeStart = 0;
	TimeStep = 600;
	TimeEnd = 600;
	TimeUnit='min';
	NLASolver(
		File="nlasolver",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8,
		MaxIterations=300
	);
	DAESolver(
		File="dasslc",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8
	);
	InitialFile="init/UMCP_init.rlt";
end

FlowSheet UHDP
	PARAMETERS
	Patm		as pressure	(Brief="Atmospheric pressure",DisplayUnit='kPa',Default=1);	

	DEVICES
	feedUHDP	as strG;
	gasUHDP	as strG;
	liqUHDP	as str2ph;
	UHDP		as UnitHydrocarbonDewpoint;

	CONNECTIONS
	feedUHDP		to	UHDP.P_001.Hot.Inlet;
	feedUHDP		to	UHDP.P_001.HotMax.Inlet;

#	feedUHDP		to UHDP.PV_001.Inlet;

#	gasUHDP		to UHDP.P_001.Hot.Inlet;
#	gasUHDP		to UHDP.P_001.HotMax.Inlet;
	
#	liqUHDP		to UHDP.P_002.Cold.Inlet;
#	liqUHDP		to UHDP.P_002.ColdMax.Inlet;

	SPECIFY
#feedUHDP CONDIDTIONS (from UMCP_init --> UMCP.ExitG.Outlet)
	feedUHDP.Qg 		= 5.53579e6 * 'm^3/d';
	feedUHDP.T		= 303.15 * 'K';
	feedUHDP.hG		= 225.589 * 'kJ/kg';
	feedUHDP.rhoG		= 80.1553 * 'kg/m^3';
	feedUHDP.Rv		= 0.180947 * 'l/m^3';
	feedUHDP.Bg		= 0.0103373;
	feedUHDP.d60G		= 0.779693;
	feedUHDP.TbnG		= 365.693 * 'K';
	feedUHDP.dg		= 0.676883;
	feedUHDP.Ycg		= 6.24058 * 'l/m^3';

#gas CONDIDTIONS (from UMCP_init --> UMCP.ExitG.Outlet)
	gasUHDP.Qg 		= 5.53579e6 * 'm^3/d';
	gasUHDP.T			= 303.15 * 'K';
	gasUHDP.hG		= 225.589 * 'kJ/kg';
	gasUHDP.rhoG		= 80.1553 * 'kg/m^3';
	gasUHDP.Rv		= 0.180947 * 'l/m^3';
	gasUHDP.Bg		= 0.0103373;
	gasUHDP.d60G		= 0.779693;
	gasUHDP.TbnG		= 365.693 * 'K';
	gasUHDP.dg		= 0.676883;
	gasUHDP.Ycg		= 6.24058 * 'l/m^3';

#liq CONDIDTIONS (after simulation results with disconnected UHDP devices)
	liqUHDP.Qf 		= 950.77 * 'm^3/d';
	liqUHDP.Qg 		= 19874.3 * 'm^3/d';
	liqUHDP.T			= 278.299 * 'K';
	liqUHDP.hO 		= -20.4131 * 'kJ/kg';
	liqUHDP.hG 		= 54.6624 * 'kJ/kg';
	liqUHDP.rhoL		= 898.89 * 'kg/m^3';
	liqUHDP.rhoG		= 34.8659 * 'kg/m^3';
	liqUHDP.Rs		= 12.9052 * 'm^3/m^3';
	liqUHDP.Rv		= 0.42194 * 'l/m^3';
	liqUHDP.Bo		= 1.03171;
	liqUHDP.Bg		= 0.0605087;
	liqUHDP.d60		= 0.92832;
	liqUHDP.d60G		= 0.790975;
	liqUHDP.Tbn		= 642.623 * 'K';
	liqUHDP.TbnG		= 397.513 * 'K';
	liqUHDP.dg		= 1.72343;
	liqUHDP.dgL		= 3.9687;
	liqUHDP.Ycg		= 14.6783 * 'l/m^3';
	liqUHDP.YcgL		= 33.801 * 'l/m^3';

#GAS/GAS AND GAS/LIQ EXCHANGER SPECIFICATIONS
	UHDP.P_002.Cold.DP = 70*'kPa';

#UPSTREAM JT VALVE PRESSURE CONTROLLER
	UHDP.PIT_001.SPinput = 8000*'kPa' + Patm;
	UHDP.PIC_001.KC = 1;
	UHDP.PIC_001.TI = 60*'s';
	UHDP.PIC_001.TD = 0*'s';
	UHDP.PIC_001.mode = 0; #Auto
	UHDP.PIC_001.MVinput = UHDP.PIC_001.MVoutput;

#COLD VESSEL LEVEL CONTROLLER
	UHDP.LIT_001.SPinput = 1.5*'m';
	UHDP.LIC_001.KC = 4;
	UHDP.LIC_001.TI = 600*'s';
	UHDP.LIC_001.TD = 0*'s';
	UHDP.LIC_001.mode = 0; #Auto
	UHDP.LIC_001.MVinput = UHDP.LIC_001.MVoutput;

	EQUATIONS
	"Pressure boundary conditions"
	UHDP.P_002.Cold.Outlet.P = 941.325*'kPa';	#(from UOTR_init001)
	UHDP.P_001.Cold.Outlet.P = 4900*'kPa' + Patm;

#*FOR FLOWSHEET BUILD WITH DEVICES DISCONNTECTED"
The equations below were used and commented appropriately to
add new devices and re-simulate to renew the initial file*#
#	feedUHDP.P = UHDP.P_002.Hot.Outlet.P;			#UHDP.P_002.Hot.Outlet disconnected to UHDP.PV_001.Inlet
#	UHDP.LV_001.Outlet.P = UHDP.P_002.Cold.Inlet.P;	#UHDP.LV_001.Outlet disconnected to UHDP.P_002.Cold.Inlet

#*FOR FLOWSHEET BUILD WITH DEVICES CONNTECTED"
The equations below were used and commented appropriately to 
add new devices and re-simulate to renew the initial file*#
	feedUHDP.P = gasUHDP.P;						#UHDP.P_002.Hot.Outlet connected to UHDP.PV_001.Inlet
	liqUHDP.P = UHDP.LV_001.Outlet.P;				#UHDP.LV_001.Outlet connected to UHDP.P_002.Cold.Inlet

	INITIAL
	"Hydrocarbon dewpoint unit initial conditions"
	UHDP.V_001.OutletG.P 	= 5100*'kPa' + Patm;
	UHDP.V_001.OutletG.T 	= (10+273.15)*'K';
	UHDP.V_001.OutletG.d60G 	= 141.5/(70+131.5);
	UHDP.V_001.OutletG.TbnG 	= (9.65*UHDP.V_001.OutletG.d60G)^3 * 'degR';
	UHDP.V_001.OutletG.dg 	= 0.7;
	UHDP.V_001.OutletG.Ycg 	= 6*'l/m^3';
	UHDP.V_001.Level 		= 1.5*'m';

	UHDP.PV_001.c 			= 0.25;
	UHDP.PIC_001.MVoutput 	= UHDP.PV_001.c;
	
	UHDP.LV_001.c 			= 0.25;
	UHDP.LIC_001.MVoutput 	= UHDP.LV_001.c;

	OPTIONS
	Dynamic=true;
	TimeStart = 0;
	TimeStep = 600;
	TimeEnd = 600;
	TimeUnit='min';
	NLASolver(
		File="nlasolver",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8,
		MaxIterations=300
	);
	DAESolver(
		File="dasslc",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8
	);
	InitialFile="init/UHDP_init.rlt";
end


FlowSheet UECP
	PARAMETERS
	Patm			as pressure	(Brief="Atmospheric pressure",DisplayUnit='kPa',Default=1);
	
	DEVICES
	feedEXP 		as strG;
	UECP 		as UnitExportCompression;
	UEHD			as UnitGasExportHeader;
	str2EXP		as gas_sink;

	CONNECTIONS
	feedEXP				to UECP.InletSPT.Inlet;
	UECP.ExitG.Outlet		to UEHD.SPT_001.Inlet;
	UEHD.FE_001.Outlet		to str2EXP.Inlet;

	SPECIFY
#feedEXP CONDIDTIONS (from UHDP_init.rlt --> UHDP.P_001.Cold.Outlet)
	feedEXP.Qg 		= 5.52737e6*'m^3/d';
	feedEXP.T 		= 290.556 * 'K';
	feedEXP.hG 		= 225.416 * 'kJ/kg';
	feedEXP.rhoG		= 47.5839 * 'kg/m^3';
	feedEXP.Rv		= 0.0623732 * 'l/m^3';
	feedEXP.Bg		= 0.0174132 * 'm^3/m^3';	
	feedEXP.d60G 		= 0.779693;
	feedEXP.TbnG 		= 365.693 * 'K';
	feedEXP.dg 		= 0.676883;
	feedEXP.Ycg 		= 6.24058 * 'l/m^3';

#EXPORT COMPRESSION MASTER CAPACITY CONTROL
	UECP.PIT.SPinput = 4900*'kPa' + Patm;
	UECP.MCC.KC = 1;
	UECP.MCC.TI = 600*'s';
	UECP.MCC.TD = 0*'min';
	UECP.MCC.mode = 0;	#Auto
	UECP.MCC.MVinput = UECP.MCC.MVoutput;

#EXPORT COMPRESSION ANTI-SURGE FLOW CONTROLLER
	UECP.FIC.KC = [1,1];
	UECP.FIC.TI = [60,60]*'s';
	UECP.FIC.TD = [0,0]*'min';

#EXPORT COMPRESSION DISCHARGE TEMPERATURE CONTROL
	UECP.TIT.SPinput = [(30+273.15),(30+273.15)]*'K';
	UECP.TIC.KC = [1,1];
	UECP.TIC.TI = [60,60]*'s';
	UECP.TIC.TD = [0,0]*'min';
	UECP.TIC.mode = [0,0];	#Auto
	UECP.TIC.MVinput = UECP.TIC.MVoutput;

#GAS EXPORT HEADER PRESSURE CONTROL
	UEHD.PIT_001.SPinput = 25000*'kPa' + Patm;
	UEHD.PIC_001.KC = 1;
	UEHD.PIC_001.TI = 60*'s';
	UEHD.PIC_001.TD = 0*'s';
	UEHD.PIC_001.mode = 0; #Auto
	UEHD.PIC_001.MVinput = UEHD.PIC_001.MVoutput;

#GAS EXPORT HEADER FLOW ELEMENT ORIFICE PERCENT OPEN AND TRANSMITTER SP
	UEHD.FE_001.c = 1.0;
	UEHD.FIT_001.SPinput = 6e6*'m^3/d';

	EQUATIONS
	"Pressure boundary conditions"
	str2EXP.Inlet.P = 20000*'kPa' + Patm;

	INITIAL
	"Export unit compression initial conditions"
	UECP.scrb.OutletG.P 	= [5000,11250,25000] * 'kPa' + Patm;
	UECP.scrb.OutletG.T 	= [(40+273.15),(40+273.15),(40+273.15)]*'K';
	UECP.scrb.OutletG.Rv 	= [1e-4,1e-4,1e-4]*'l/m^3';
	UECP.scrb.OutletG.d60G 	= [141.5/(50+131.5),141.5/(50+131.5),141.5/(50+131.5)];
	UECP.scrb.OutletG.TbnG 	= [(120+273.15),(120+273.15),(120+273.15)]*'K';
	UECP.scrb.OutletG.dg 	= [0.7,0.7,0.7];
	UECP.scrb.OutletG.Ycg 	= [4,4,4]*'l/m^3';

	UECP.comp.Nr 			= 9000*'rpm';
	UECP.MCC.MVoutput 		= UECP.comp(1).Nr/UECP.Nr_Max;

	UECP.FIC.MVoutput 		= [0,0];

	UECP.cool.Qout 		= [4,6]*'MW';
	
	"Exportation header pressure control initial conditions"
	UEHD.PV_001.c 			= 0.5;
	UEHD.PIC_001.MVoutput 	= UEHD.PV_001.c;

	OPTIONS
	Dynamic=true;
	TimeStart = 0;
	TimeStep = 600;
	TimeEnd = 600;
	TimeUnit='min';
	NLASolver(
		File="nlasolver",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8,
		MaxIterations=300
	);
	DAESolver(
		File="dasslc",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8
	);
	InitialFile="init/UECP_init.rlt";
end

FlowSheet OilGasProcess
	PARAMETERS
	rho_H2Ostd	as dens_mass	(Brief="Pure water mass density at std. cond.",Default=999.054);	
	Patm			as pressure	(Brief="Atmospheric pressure",DisplayUnit='kPa',Default=1);
	
	DEVICES
	feed			as triphase_source;
	cond1		as str2ph;
	cond2		as str2ph;
	cond3		as str2ph;
	wdesalt		as water_source;

	UOTR 		as UnitOilTreatment;

	gas1			as strG;
	gas2			as strG;
	UGKO			as UnitGasKnockout;

	feed1st 		as strG;
	feed2nd		as strG;
	UVRC 		as UnitVapourRecovery;

	feedGas 		as strG;
	UMCP 		as UnitMainCompression;

	feedUHDP		as strG;
	gasUHDP		as strG;
	liqUHDP		as str2ph;
	UHDP			as UnitHydrocarbonDewpoint;

	feedEXP 		as strG;
	UECP 		as UnitExportCompression;
	UEHD			as UnitGasExportHeader;
	str2EXP		as gas_sink;

	str2STK 		as triphase_sink;
	str2UWTR		as water_sink;
	str2UGTR		as gas_sink;

	CONNECTIONS
	feed.Outlet			to 	UOTR.InletMix.InletF;
#	cond1				to 	UOTR.CondMix.InletC(1);
	UGKO.LV_001.Outlet		to	UOTR.CondMix.InletC(1);
#	cond2				to 	UOTR.CondMix.InletC(2);
	UMCP.ExitL.Outlet		to	UOTR.CondMix.InletC(2);
#	cond3				to 	UOTR.CondMix.InletC(3);
	UHDP.P_002.Cold.Outlet	to	UOTR.CondMix.InletC(3);
	wdesalt.Outlet			to 	UOTR.DesaltMix.InletW;

#	gas1					to	UGKO.GMX_001.Inlet(1);
#	gas2					to	UGKO.GMX_001.Inlet(2);
	UOTR.FE_001.Outlet		to 	UGKO.GMX_001.Inlet(1);
	UVRC.SPT(2).Outlet2		to	UGKO.GMX_001.Inlet(2);

#	feed1st				to 	UVRC.mix(1).Inlet3;
#	feed2nd				to 	UVRC.mix(2).Inlet3;
	UOTR.PV_003A.Outlet		to 	UVRC.mix(1).Inlet3;
	UOTR.PV_002A.Outlet		to 	UVRC.mix(2).Inlet3;

#	feedGas				to 	UMCP.InletSPT.Inlet;
	UGKO.FE_001.Outlet		to 	UMCP.InletSPT.Inlet;

#	feedUHDP				to	UHDP.P_001.Hot.Inlet;
#	feedUHDP				to	UHDP.P_001.HotMax.Inlet;
	UMCP.ExitG.Outlet		to	UHDP.P_001.Hot.Inlet;
	UMCP.ExitG.Outlet		to	UHDP.P_001.HotMax.Inlet;

#	feedEXP				to UECP.InletSPT.Inlet;
	UHDP.P_001.Cold.Outlet	to UECP.InletSPT.Inlet;
	UECP.ExitG.Outlet		to UEHD.SPT_001.Inlet;

	UOTR.P_001.Hot.Outlet	to	str2STK.Inlet;
	UOTR.LV_002.Outlet		to	str2UWTR.Inlet;
	UGKO.FE_001.Outlet		to 	str2UGTR.Inlet;
	UEHD.FE_001.Outlet		to	str2EXP.Inlet;

	SPECIFY
#feed CONDIDTIONS
#	feed.Outlet.Qf		= 24000 * 'm^3/d';		<------------------ GO TO EQUATIONS >> DISTURBS SECTION
#	feed.Outlet.BSW	= 0.1;		<---------------------------------- GO TO EQUATIONS >> DISTURBS SECTION
	feed.Rgo 			= 250 * 'm^3/m^3';
	feed.Cws 			= 255*'g/l';
	feed.Outlet.T 		= (15+273.15)*'K';
	feed.API			= 29;
	feed.Kw			= 11.3;
	feed.Outlet.dg 	= 0.65;
	feed.Outlet.Ycg	= 6*'l/m^3';

#cond1 CONDIDTIONS (from UGKO_init.rlt --> UGKO.LV_001.Outlet)
	cond1.Qf 			= 1320.17 * 'm^3/d';
	cond1.Qg 			= 5017.95 * 'm^3/d';
	cond1.T 			= 312.502 * 'K';
	cond1.hO 			= 48.3458 * 'kJ/kg';
	cond1.hG 			= 145.027 * 'kJ/kg';
	cond1.rhoL 		= 887.854 * 'kg/m^3';
	cond1.rhoG 		= 17.4902 * 'kg/m^3';
	cond1.Rs 			= 7.63231 * 'm^3/m^3';
	cond1.Rv 			= 0.796434 * 'l/m^3';
	cond1.Bo 			= 1.02886;
	cond1.Bg 			= 0.102956;
	cond1.d60 		= 0.91439;
	cond1.d60G		= 0.810938;
	cond1.Tbn 		= 685.459 * 'K';
	cond1.TbnG			= 478.135 * 'K';
	cond1.dg 			= 1.47102;
	cond1.dgL			= 2.67448;
	cond1.Ycg 		= 8.40121 * 'l/m^3';
	cond1.YcgL		= 15.2743 * 'l/m^3';

#cond2 CONDIDTIONS (future from UMCP_init.rlt --> UMCP.ExitL.Outlet)
	cond2.Qf 			= 855.828 * 'm^3/d';
	cond2.Qg 			= 1931.34 * 'm^3/d';
	cond2.T 			= 302.736 * 'K';
	cond2.hO 			= 28.093 * 'kJ/kg';
	cond2.hG 			= 138.821 * 'kJ/kg';
	cond2.rhoL 		= 868.073 * 'kg/m^3';
	cond2.rhoG 		= 18.0779 * 'kg/m^3';
	cond2.Rs 			= 9.15476 * 'm^3/m^3';
	cond2.Rv 			= 0.959091 * 'l/m^3';
	cond2.Bo 			= 1.03;
	cond2.Bg 			= 0.0985416;
	cond2.d60 		= 0.895004;
	cond2.d60G		= 0.785594;
	cond2.Tbn 		= 575.889 * 'K';
	cond2.TbnG		= 389.456 * 'K';
	cond2.dg 			= 1.45527;
	cond2.dgL			= 2.8149;
	cond2.Ycg 		= 12.3944 * 'l/m^3';
	cond2.YcgL		= 23.9743 * 'l/m^3';

#cond3 CONDIDTIONS (from UHDP_init.rlt --> UHDP.P_002.Cold.Outlet)
	cond3.Qf 			= 999.157 * 'm^3/d';
	cond3.Qg 			= 22880.6 * 'm^3/d';
	cond3.T 			= 288.435 * 'K';
	cond3.hO 			= -0.530209 * 'kJ/kg';
	cond3.hG 			= 72.776 * 'kJ/kg';
	cond3.rhoL 		= 903.816 * 'kg/m^3';
	cond3.rhoG 		= 27.6945 * 'kg/m^3';
	cond3.Rs 			= 10.6793 * 'm^3/m^3';
	cond3.Rv 			= 0.629465 * 'l/m^3';
	cond3.Bo 			= 1.02798;
	cond3.Bg 			= 0.0771049;
	cond3.d60 		= 0.930033;
	cond3.d60G		= 0.80308;
	cond3.Tbn 		= 646.186 * 'K';
	cond3.TbnG		= 416.043 * 'K';
	cond3.dg 			= 1.74442;
	cond3.dgL			= 3.72261;
	cond3.Ycg 		= 14.8571 * 'l/m^3';
	cond3.YcgL		= 31.7052 * 'l/m^3';

#wdesalt STREAM CONDITIONS
	wdesalt.Outlet.Qw 	= 50 * 'm^3/h';
	wdesalt.Outlet.T	= (80+273.15) * 'K';
	wdesalt.Cws		= 50*'g/l';
	wdesalt.Outlet.TOG 	= 0.00 *'ml/m^3';
	wdesalt.Outlet.d60 	= 0.88162;
	wdesalt.Outlet.Tbn 	= 549.247 * 'K';

#gas1 STREAM CONDIDTIONS (from UOTR_init.rlt --> UOTR.FE_001.Outlet)
	gas1.Qg 			= 5.41821e6 * 'm^3/d';
	gas1.T 			= 307.708 * 'K';
	gas1.hG			= 316.587 * 'kJ/kg';
	gas1.rhoG 		= 16.8924 * 'kg/m^3';
	gas1.Rv 			= 0.332803 * 'l/m^3';
	gas1.Bg 			= 0.0475321 * 'm^3/m^3';
	gas1.d60G 		= 0.775174;
	gas1.TbnG 		= 373.389 * 'K';
	gas1.dg 			= 0.655926;
	gas1.Ycg 			= 6.0547 * 'l/m^3';

#gas2 STREAM CONDIDTIONS (from UVRC_init.rlt --> UVRC.SPT(2).Outlet2)
	gas2.Qg 			= 133964 * 'm^3/d';
	gas2.T 			= 369.452 * 'K';
	gas2.hG			= 240.827 * 'kJ/kg';
	gas2.rhoG 		= 39.4868 * 'kg/m^3';
	gas2.Rv 			= 1.24011 * 'l/m^3';
	gas2.Bg 			= 0.0485643 * 'm^3/m^3';
	gas2.d60G			= 0.821585;
	gas2.TbnG 		= 447.528 * 'K';
	gas2.dg 			= 1.56655;
	gas2.Ycg 			= 13.6337 * 'l/m^3';

#feed1std CONDIDTIONS (from UOTR_init.rlt --> UOTR.PV_003A.Outlet)
	feed1st.Qg 		= 38260.6 * 'm^3/d';
	feed1st.T 		= 352.893 * 'K';
	feed1st.hG 		= 210.055 * 'kJ/kg';
	feed1st.rhoG 		= 5.91538 * 'kg/m^3';
	feed1st.Rv 		= 3.68833 * 'l/m^3';
	feed1st.Bg 		= 0.417627 * 'm^3/m^3';
	feed1st.d60G 		= 0.82789;
	feed1st.TbnG 		= 457.909 * 'K';
	feed1st.dg 		= 2.01812;
	feed1st.Ycg 		= 17.5637 * 'l/m^3';

#feed2nd CONDIDTIONS (from UOTR_init.rlt --> UOTR.PV_002A.Outlet)
	feed2nd.Qg 		= 96077.4 * 'm^3/d';
	feed2nd.T 		= 352.955 * 'K';
	feed2nd.hG 		= 240.74 * 'kJ/kg';
	feed2nd.rhoG 		= 11.151 * 'kg/m^3';
	feed2nd.Rv 		= 2.43404 * 'l/m^3';
	feed2nd.Bg 		= 0.152084 * 'm^3/m^3';
	feed2nd.d60G 		= 0.819863;
	feed2nd.TbnG 		= 444.72 * 'K';
	feed2nd.dg 		= 1.38539;
	feed2nd.Ycg 		= 12.0571 * 'l/m^3';

#feedGas CONDIDTIONS (from OilProcess_init.rlt --> UGKO.FE_001.Outlet)
	feedGas.Qg 		= 5.5414e6*'m^3/d';
	feedGas.T 		= 303.003 * 'K';
	feedGas.hG		= 291.275 * 'kJ/kg';
	feedGas.rhoG		= 17.2638 * 'kg/m^3';
	feedGas.Rv		= 0.281302 * 'l/m^3';
	feedGas.Bg		= 0.0479362 * 'm^3/m^3';	
	feedGas.d60G 		= 0.788799;
	feedGas.TbnG 		= 378.656 * 'K';
	feedGas.dg 		= 0.676043;
	feedGas.Ycg 		= 6.23283 * 'l/m^3';

#feedUHDP CONDIDTIONS (from UMCP_init --> UMCP.ExitG.Outlet)
	feedUHDP.Qg 		= 5.53579e6 * 'm^3/d';
	feedUHDP.T		= 303.15 * 'K';
	feedUHDP.hG		= 225.589 * 'kJ/kg';
	feedUHDP.rhoG		= 80.1553 * 'kg/m^3';
	feedUHDP.Rv		= 0.180947 * 'l/m^3';
	feedUHDP.Bg		= 0.0103373;
	feedUHDP.d60G		= 0.779693;
	feedUHDP.TbnG		= 365.693 * 'K';
	feedUHDP.dg		= 0.676883;
	feedUHDP.Ycg		= 6.24058 * 'l/m^3';

#gas CONDIDTIONS (from UMCP_init --> UMCP.ExitG.Outlet)
	gasUHDP.Qg 		= 5.53579e6 * 'm^3/d';
	gasUHDP.T			= 303.15 * 'K';
	gasUHDP.hG		= 225.589 * 'kJ/kg';
	gasUHDP.rhoG		= 80.1553 * 'kg/m^3';
	gasUHDP.Rv		= 0.180947 * 'l/m^3';
	gasUHDP.Bg		= 0.0103373;
	gasUHDP.d60G		= 0.779693;
	gasUHDP.TbnG		= 365.693 * 'K';
	gasUHDP.dg		= 0.676883;
	gasUHDP.Ycg		= 6.24058 * 'l/m^3';

#liq CONDIDTIONS (after simulation results with disconnected UHDP devices)
	liqUHDP.Qf 		= 950.77 * 'm^3/d';
	liqUHDP.Qg 		= 19874.3 * 'm^3/d';
	liqUHDP.T			= 278.299 * 'K';
	liqUHDP.hO 		= -20.4131 * 'kJ/kg';
	liqUHDP.hG 		= 54.6624 * 'kJ/kg';
	liqUHDP.rhoL		= 898.89 * 'kg/m^3';
	liqUHDP.rhoG		= 34.8659 * 'kg/m^3';
	liqUHDP.Rs		= 12.9052 * 'm^3/m^3';
	liqUHDP.Rv		= 0.42194 * 'l/m^3';
	liqUHDP.Bo		= 1.03171;
	liqUHDP.Bg		= 0.0605087;
	liqUHDP.d60		= 0.92832;
	liqUHDP.d60G		= 0.790975;
	liqUHDP.Tbn		= 642.623 * 'K';
	liqUHDP.TbnG		= 397.513 * 'K';
	liqUHDP.dg		= 1.72343;
	liqUHDP.dgL		= 3.9687;
	liqUHDP.Ycg		= 14.6783 * 'l/m^3';
	liqUHDP.YcgL		= 33.801 * 'l/m^3';

#feedEXP CONDIDTIONS (from UHDP_init.rlt --> UHDP.P_001.Cold.Outlet)
	feedEXP.Qg 		= 5.52737e6 *'m^3/d';
	feedEXP.T 		= 290.556 * 'K';
	feedEXP.hG 		= 225.416 * 'kJ/kg';
	feedEXP.rhoG		= 47.5839 * 'kg/m^3';
	feedEXP.Rv		= 0.0623732 * 'l/m^3';
	feedEXP.Bg		= 0.0174132 * 'm^3/m^3';	
	feedEXP.d60G 		= 0.779693;
	feedEXP.TbnG 		= 365.693 * 'K';
	feedEXP.dg 		= 0.676883;
	feedEXP.Ycg 		= 6.24058 * 'l/m^3';

#TRIPHASE SEPARATOR FLOW ELEMENT ORIFICE PERCENT OPEN AND TRANSMITTER SP
	UOTR.FE_001.c = 1.0;
	UOTR.FIT_001.SPinput = 6e6*'m^3/d';

#TRIPHASE SEPARATOR OIL LEVEL CONTROLLER TUNNING
	UOTR.LIT_001.SPinput = 1.5*'m';
	UOTR.LIC_001.KC = 4;
	UOTR.LIC_001.TI = 600*'s';
	UOTR.LIC_001.TD = 0*'s';
	UOTR.LIC_001.mode = 0; #Auto
	UOTR.LIC_001.MVinput = UOTR.LIC_001.MVoutput;

#TRIPHASE SEPARATOR WATER (INTERFACE) LEVEL CONTROLLER TUNNING
	UOTR.LIT_002.SPinput = 0.15*'m';
	UOTR.LIC_002.KC = 4;
	UOTR.LIC_002.TI = 600*'s';
	UOTR.LIC_002.TD = 0*'s';
	UOTR.LIC_002.mode = 0; #Auto
	UOTR.LIC_002.MVinput = UOTR.LIC_002.MVoutput;

#HEAT EXCHANGER BATTERY SPECIFICATIONS
	UOTR.P_001.Hot.DP = 70*'kPa';
	UOTR.P_001.Cold.DP = 70*'kPa';
	UOTR.P_002.DP = 70*'kPa';
	
#HEAT EXCHANGER BATTERY TEMPERATURE CONTROLLER TUNNING
	UOTR.TIT_001.SPinput = (80+273.15)*'K';
	UOTR.TIC_001.KC = 1;
	UOTR.TIC_001.TI = 60*'s';
	UOTR.TIC_001.TD = 0*'s';
	UOTR.TIC_001.mode = 0;
	UOTR.TIC_001.MVinput = UOTR.TIC_001.MVoutput;
#	UOTR.P_002.Qin = (5 + (25 - 5)*UOTR.TIC_001.MVoutput)*'MW';	<-- GO TO EQUATIONS >> DISTURBS SECTION

#PREOIL -DEGASSER PRESSURE CONTROLLER TUNNING
	UOTR.PIT_002A.SPinput = 700*'kPa' + Patm;
	UOTR.PIC_002A.KC = 1;
	UOTR.PIC_002A.TI = 60*'s';
	UOTR.PIC_002A.TD = 0*'s';
	UOTR.PIC_002A.mode = 0; #Auto
	UOTR.PIC_002A.MVinput = UOTR.PIC_002A.MVoutput;

	UOTR.PIT_002B.SPinput = 750*'kPa' + Patm;
	UOTR.PIC_002B.KC = 4;
	UOTR.PIC_002B.TI = 20*'s';
	UOTR.PIC_002B.TD = 0*'s';
	UOTR.PIC_002B.mode = 0; #Auto
	UOTR.PIC_002B.MVinput = UOTR.PIC_002B.MVoutput;

#PRE-OIL DEGASSER OIL LEVEL CONTROLLER TUNNING
	UOTR.LIT_003.SPinput = 1.0*'m';
	UOTR.LIC_003.KC = 4;
	UOTR.LIC_003.TI = 600*'s';
	UOTR.LIC_003.TD = 0*'s';
	UOTR.LIC_003.mode = 0; #Auto
	UOTR.LIC_003.MVinput = UOTR.LIC_003.MVoutput;

#PRE-OIL TREATER WATER LEVEL CONTROLLER TUNNING
	UOTR.LIT_004.SPinput = 2.0*'m';
	UOTR.LIC_004.KC = 4;
	UOTR.LIC_004.TI = 600*'s';
	UOTR.LIC_004.TD = 0*'s';
	UOTR.LIC_004.mode = 0; #Auto
	UOTR.LIC_004.MVinput = UOTR.LIC_004.MVoutput;

#DEGASSER PRESSURE CONTROLLER TUNNING
	UOTR.PIT_003A.SPinput = 200*'kPa' + Patm;
	UOTR.PIC_003A.KC = 1;
	UOTR.PIC_003A.TI = 60*'s';
	UOTR.PIC_003A.TD = 0*'s';
	UOTR.PIC_003A.mode = 0; #Auto
	UOTR.PIC_003A.MVinput = UOTR.PIC_003A.MVoutput;

	UOTR.PIT_003B.SPinput = 220*'kPa' + Patm;
	UOTR.PIC_003B.KC = 3;
	UOTR.PIC_003B.TI = 30*'s';
	UOTR.PIC_003B.TD = 0*'s';
	UOTR.PIC_003B.mode = 0; #Auto
	UOTR.PIC_003B.MVinput = UOTR.PIC_003B.MVoutput;

#DEGASSER OIL LEVEL CONTROLLER TUNNING
	UOTR.LIT_005.SPinput = 1.0*'m';
	UOTR.LIC_005.KC = 4;
	UOTR.LIC_005.TI = 600*'s';
	UOTR.LIC_005.TD = 0*'s';
	UOTR.LIC_005.mode = 0; #Auto
	UOTR.LIC_005.MVinput = UOTR.LIC_005.MVoutput;

#OIL TREATER WATER LEVEL CONTROLLER
	UOTR.LIT_006.SPinput = 2.0*'m';
	UOTR.LIC_006.KC = 4;
	UOTR.LIC_006.TI = 600*'s';
	UOTR.LIC_006.TD = 0*'s';
	UOTR.LIC_006.mode = 0; #Auto
	UOTR.LIC_006.MVinput = UOTR.LIC_006.MVoutput;

#INLET GAS COOLET TEMPERATURE CONTROLLER TUNNING
	UGKO.TIT_001.SPinput = (30+273.15)*'K';
	UGKO.TIC_001.KC = 1;
	UGKO.TIC_001.TI = 60*'s';
	UGKO.TIC_001.TD = 0*'s';
	UGKO.TIC_001.mode = 0; #Auto
	UGKO.TIC_001.MVinput = UGKO.TIC_001.MVoutput;
	UGKO.P_001.Qout = 2.5*UGKO.TIC_001.MVoutput*'MW';

#INLET SCRUBBER PRESSURE CONTROLLER TUNNING
	UGKO.PIT_001.SPinput = 2100*'kPa' + Patm;
	UGKO.PIC_001.KC = 1;
	UGKO.PIC_001.TI = 60*'s';
	UGKO.PIC_001.TD = 0*'s';
	UGKO.PIC_001.mode = 0; #Auto
	UGKO.PIC_001.MVinput = UGKO.PIC_001.MVoutput;

#INLET SCRUBBER LEVEL CONTROLLER TUNNING
	UGKO.LIT_001.SPinput = 0.5*'m';
	UGKO.LIC_001.KC = 4;
	UGKO.LIC_001.TI = 600*'s';
	UGKO.LIC_001.TD = 0*'s';
	UGKO.LIC_001.mode = 0; #Auto
	UGKO.LIC_001.MVinput = UGKO.LIC_001.MVoutput;

#FLOW ELEMENT ORIFICE PERCENT OPEN AND TRANSMITTER SP
	UGKO.FE_001.c = 1.0;
	UGKO.FIT_001.SPinput = 6e6*'m^3/d';

#MASTER CAPACITY CONTROL
	UVRC.PIT.SPinput = 180*'kPa' + Patm;
	UVRC.MCC.KC = 1;
	UVRC.MCC.TI = 420*'s';
	UVRC.MCC.TD = 0*'min';
	UVRC.MCC.mode = 0;	#Auto
	UVRC.MCC.MVinput = UVRC.MCC.MVoutput;

#ANTI-SURGE FLOW CONTROLLER
	UVRC.FIC.KC = 2;
	UVRC.FIC.TI = 30*'s';
	UVRC.FIC.TD = 0*'min';

#SCRUBBER LEVEL CONTROLLER
	UVRC.LIT.SPinput = 0.75*'m';
	UVRC.LIC.KC = [4,1];
	UVRC.LIC.TI = [600,200] * 's';
	UVRC.LIC.TD = [0,0] * 's';
	UVRC.LIC.mode = 0; #Auto
	UVRC.LIC.MVinput = UVRC.LIC.MVoutput;

#TEMPERATURE CONTROL
	UVRC.TIT.SPinput = (50+273.15)*'K';
	UVRC.TIC.KC = 1;
	UVRC.TIC.TI = 60*'s';
	UVRC.TIC.TD = 0*'min';
	UVRC.TIC.mode = 0;	#Auto
	UVRC.TIC.MVinput = UVRC.TIC.MVoutput;

#MASTER CAPACITY CONTROL
	UMCP.PIT.SPinput = 2000*'kPa' + Patm;
	UMCP.MCC.KC = 1;
	UMCP.MCC.TI = 420*'s';
	UMCP.MCC.TD = 0*'min';
	UMCP.MCC.mode = 0;	#Auto
	UMCP.MCC.MVinput = UMCP.MCC.MVoutput;

#ANTI-SURGE FLOW CONTROLLER
	UMCP.FIC.KC = 1;
	UMCP.FIC.TI = 60*'s';
	UMCP.FIC.TD = 0*'min';

#SUCTION SCRUBBER LEVEL CONTROLLER
	UMCP.LIT.SPinput = [1,1] * 'm';
	UMCP.LIC.KC = [4,4];
	UMCP.LIC.TI = [600,600]*'s';
	UMCP.LIC.TD = [0,0]*'s';
	UMCP.LIC.mode = [0,0]; #Auto
	UMCP.LIC.MVinput = UMCP.LIC.MVoutput;

#TEMPERATURE CONTROL
#	UMCP.TIT.SPinput = (30+273.15)*'K';		<---------------------- GO TO EQUATIONS >> DISTURBS SECTION
	UMCP.TIC.KC = 1;
	UMCP.TIC.TI = 60*'s';
	UMCP.TIC.TD = 0*'min';
	UMCP.TIC.mode = 0;	#Auto
	UMCP.TIC.MVinput = UMCP.TIC(1:UMCP.numOfStg).MVoutput;

#GAS/GAS AND GAS/LIQ EXCHANGER SPECIFICATIONS
	UHDP.P_002.Cold.DP = 70*'kPa';

#UPSTREAM JT VALVE PRESSURE CONTROLLER
#	UHDP.PIT_001.SPinput = 8000*'kPa' + Patm;
	UHDP.PIC_001.KC = 1;
	UHDP.PIC_001.TI = 60*'s';
	UHDP.PIC_001.TD = 0*'s';
	UHDP.PIC_001.mode = 0; #Auto
	UHDP.PIC_001.MVinput = UHDP.PIC_001.MVoutput;

#COLD VESSEL LEVEL CONTROLLER
	UHDP.LIT_001.SPinput = 1.5*'m';
	UHDP.LIC_001.KC = 4;
	UHDP.LIC_001.TI = 600*'s';
	UHDP.LIC_001.TD = 0*'s';
	UHDP.LIC_001.mode = 0; #Auto
	UHDP.LIC_001.MVinput = UHDP.LIC_001.MVoutput;

#EXPORT COMPRESSION MASTER CAPACITY CONTROL
	UECP.PIT.SPinput = 4900*'kPa' + Patm;
	UECP.MCC.KC = 1;
	UECP.MCC.TI = 600*'s';
	UECP.MCC.TD = 0*'min';
	UECP.MCC.mode = 0;	#Auto
	UECP.MCC.MVinput = UECP.MCC.MVoutput;

#EXPORT COMPRESSION ANTI-SURGE FLOW CONTROLLER
	UECP.FIC.KC = [1,1];
	UECP.FIC.TI = [60,60]*'s';
	UECP.FIC.TD = [0,0]*'min';

#EXPORT COMPRESSION DISCHARGE TEMPERATURE CONTROL
	UECP.TIT.SPinput = [(30+273.15),(30+273.15)]*'K';
	UECP.TIC.KC = [1,1];
	UECP.TIC.TI = [60,60]*'s';
	UECP.TIC.TD = [0,0]*'min';
	UECP.TIC.mode = [0,0];	#Auto
	UECP.TIC.MVinput = UECP.TIC.MVoutput;

#GAS EXPORT HEADER PRESSURE CONTROL
	UEHD.PIT_001.SPinput = 25000*'kPa' + Patm;
	UEHD.PIC_001.KC = 1;
	UEHD.PIC_001.TI = 60*'s';
	UEHD.PIC_001.TD = 0*'s';
	UEHD.PIC_001.mode = 0; #Auto
	UEHD.PIC_001.MVinput = UEHD.PIC_001.MVoutput;

#GAS EXPORT HEADER FLOW ELEMENT ORIFICE PERCENT OPEN AND TRANSMITTER SP
	UEHD.FE_001.c = 1.0;
	UEHD.FIT_001.SPinput = 6e6*'m^3/d';

	EQUATIONS
	"Pressure boundary conditions"
	str2STK.Inlet.P = Patm;
	str2UWTR.Inlet.P = 700*'kPa' + Patm;
	str2EXP.Inlet.P = 20000*'kPa' + Patm;

	UOTR.PV_002B.Outlet.P = Patm;
	UOTR.PV_003B.Outlet.P = Patm;
	UVRC.LV(1).Outlet.P = Patm;

#*FOR FLOWSHEET BUILD WITH DEVICES DISCONNTECTED"
The equations below were used and commented appropriately to
add new devices and re-simulate to renew the initial file*#

#	UOTR.FE_001.Outlet.P = 2060*'kPa' + Patm;			#UOTR.FE_001.Outlet disconnected to UGKO
#	UOTR.PV_002A.Outlet.P = 670*'kPa' + Patm;			#UOTR.PV_002A.Outlet disconnected to UVRC
#	UOTR.PV_003A.Outlet.P = 180*'kPa' + Patm;			#UOTR.PV_003A.Outlet disconnected to UVRC

#	UGKO.FE_001.Outlet.P = 2000*'kPa' + Patm;			#UGKO.FE_001.Outlet disconnected to UMCP
#	UGKO.LV_001.Outlet.P = 700*'kPa' + Patm;			#UGKO.LV_001.Outlet disconnected to UOTR

#	UVRC.SPT(2).Outlet2.P = 2060*'kPa' + Patm;			#UVRC.SPT(2).Outlet2 disconnected to UGKO

#	UMCP.ExitL.Outlet.P = 941.325*'kPa';				#UMCP.ExitL.Outlet disconnected to UOTR
#	diff(UMCP.ExitG.Outlet.Qg) = -feedGas.Qg*0.1*(
#		diff(8150-(UMCP.ExitG.Outlet.P-Patm)/'kPa') 
#		+ 1/(60*'s')*(8150-(UMCP.ExitG.Outlet.P-Patm)/'kPa')); #UMCP.ExitG.Outlet disconnected to UHDP

#	UHDP.P_002.Cold.Outlet.P = 941.325*'kPa';			#UHDP.P_002.Cold.Outlet disconnected to UOTR
#	UHDP.LV_001.Outlet.P = UHDP.P_002.Cold.Inlet.P;		#UHDP.LV_001.Outlet disconnected to UOTR
#	feedUHDP.P = UHDP.P_002.Hot.Outlet.P;				#UHDP.P_002.Hot.Outlet disconnected to UHDP.PV_001.Inlet
#	UHDP.LV_001.Outlet.P = UHDP.P_002.Cold.Inlet.P;		#UHDP.LV_001.Outlet disconnected to UHDP.P_002.Cold.Inlet
#	UHDP.P_001.Cold.Outlet.P = 4900*'kPa' + Patm;		#UHDP.P_001.Cold.Outlet disconnected to UECP

#*FOR FLOWSHEET BUILD WITH DEVICES CONNTECTED"
The equations below were used and commented appropriately to 
add new devices and re-simulate to renew the initial file*#

	gas1.P = UGKO.GMX_001.Outlet.P;					#UOTR.FE_001.Outlet connected to UGKO
	gas2.P = UGKO.GMX_001.Outlet.P;					#UVRC.SPT(2).Outlet2 connected to UGKO
	cond1.P = UOTR.CondMix.InletC(1).P;				#UGKO.LV_001.Outlet connected to UOTR
	cond2.P = UOTR.CondMix.InletC(2).P;				#UMCP.ExitL.Outlet connected to UOTR
	cond3.P = UOTR.CondMix.InletC(3).P;				#UHDP.P_002.Cold.Outlet connected to UOTR
	feed1st.P = UOTR.PV_003A.Outlet.P;					#UOTR.PV_002A.Outlet connected to UVRC
	feed2nd.P = UOTR.PV_002A.Outlet.P;					#UOTR.PV_003A.Outlet connected to UVRC
	feedGas.P = UGKO.FE_001.Outlet.P;					#UGKO.FE_001.Outlet connected to UMCP
	gasUHDP.P = UMCP.ExitG.Outlet.P;					#UMCP.ExitG.Outlet connected to UHDP
	feedUHDP.P = gasUHDP.P;							#UHDP.P_002.Hot.Outlet connected to UHDP.PV_001.Inlet
	liqUHDP.P = UHDP.LV_001.Outlet.P;					#UHDP.LV_001.Outlet connected to UHDP.P_002.Cold.Inlet
	feedEXP.P = UHDP.P_001.Cold.Outlet.P;				#UHDP.P_001.Cold.Outlet connected to UECP

#DISTURBANCE APPLIED
	"DISTURBANCE CASE 0: feed.Outlet.Qf"
	feed.Outlet.Qf	= 24000 * 'm^3/d';
#	feed.Outlet.Qf = 24000*'m^3/d' - 18000*'m^3/d'*(
#		0.5*(1+tanh((time/'min'-60)/1e-4))*(time/'min'-60)/(100-60)
#		- 0.5*(1+tanh((time/'min'-100)/1e-4))*(time/'min'-100)/(100-60)
#		);

	"DISTURBANCE CASE 0: feed.Outlet.BSW"
	feed.Outlet.BSW	= 0.1;
#	feed.Outlet.BSW - 0.1 = 0.05*0.5*(1+tanh((time/'min'-60)/1e-4));

	"DISTURBANCE CASE A: UOTR.P_002.Qin"
	UOTR.P_002.Qin/'MW' = (5 + (25 - 5)*UOTR.TIC_001.MVoutput);
#	UOTR.P_002.Qin/'MW' = (5 + (25 - 5)*UOTR.TIC_001.MVoutput)*
#		(1-0.64*(1+tanh((time/'min'-60)/1e-4))*0.5*(1-exp(-(time/'min'-60)/8)));

	"DISTURBANCE CASE B: UHDP.PIT_001.SPinput"
	UHDP.PIT_001.SPinput = 8000*'kPa' + Patm;
#	(UHDP.PIT_001.SPinput - Patm)/'kPa' - 8000 = 500*0.5*(1+tanh((time/'min'-60)/1e-4));

	"DISTURBANCE CASE C: UMCP.TIT.SPinput"
	(UMCP.TIT.SPinput/'K'-273.15) = 30;
#	(UMCP.TIT.SPinput/'K'-273.15) = 30 - 3*0.5*(1+tanh((time/'min'-60)/1e-4));

	INITIAL
	"Triphase separator initial conditions"
	UOTR.SG_001.OutletG.P 		= 2000*'kPa' + Patm;
	UOTR.SG_001.OutletG.T 		= (40+273.15)*'K';
	UOTR.SG_001.OutletL.d60 		= 141.5/(29+131.5);
	UOTR.SG_001.OutletL.Tbn 		= (11.3*UOTR.SG_001.OutletL.d60)^3 * 'degR';
	UOTR.SG_001.OutletG.dg 		= 0.7;
	UOTR.SG_001.OutletG.Ycg 		= 4*'l/m^3';
	UOTR.SG_001.OutletW.ws 		= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.SG_001.OutletL.ws 		= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.SG_001.BSWLCS 			= 0.2;
	UOTR.SG_001.OutletL.BSW 		= 0.2;
	UOTR.SG_001.LevelWCS 		= 0.15*'m';
	UOTR.SG_001.LevelCS 		= 1.001*UOTR.SG_001.hweir;
	UOTR.SG_001.LevelCL 		= 1.5*'m';

	UOTR.LV_001.c 				= 0.5;
	UOTR.LIC_001.MVoutput 		= UOTR.LV_001.c;

	UOTR.LV_002.c 				= 0.1;
	UOTR.LIC_002.MVoutput 		= UOTR.LV_002.c;
	
	"Production heater initial conditions"
	UOTR.P_002.Qin 			= 12.5*'MW';
	
	"Pre-oil treater initial conditions"
	UOTR.V_TO_001.OutletG.P 		= 700*'kPa' + Patm;
	UOTR.V_TO_001.OutletG.T 		= (90+273.15)*'K';
	UOTR.V_TO_001.OutletL.d60 	= 141.5/(29+131.5);
	UOTR.V_TO_001.OutletL.Tbn 	= (11.3*UOTR.V_TO_001.OutletL.d60)^3 * 'degR';
	UOTR.V_TO_001.OutletG.dg 	= 1.05;
	UOTR.V_TO_001.OutletG.Ycg 	= 5.5*'l/m^3';
	UOTR.V_TO_001.OutletL.BSW	= 0.2;
	UOTR.V_TO_001.OutletL.ws 	= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.V_TO_001.Level 		= 1.0*'m';

	UOTR.TO_001.OutletW.T 		= (90+273.15)*'K';
	UOTR.TO_001.OutletL.d60 		= 141.5/(29+131.5);
	UOTR.TO_001.OutletL.Tbn 		= (11.3*UOTR.TO_001.OutletL.d60)^3 * 'degR';	
	UOTR.TO_001.OutletW.ws 		= (255*'g/l'/rho_H2Ostd)/(1+(255*'g/l'/rho_H2Ostd));
	UOTR.TO_001.LevelW 			= 2.0*'m';

	UOTR.PV_002A.c 			= 0.5;
	UOTR.PIC_002A.MVoutput 		= UOTR.PV_002A.c;
	UOTR.PV_002B.c 			= 0.00;
	UOTR.PIC_002B.MVoutput 		= UOTR.PV_002B.c;
	
	UOTR.LV_003.c 				= 0.5;
	UOTR.LIC_003.MVoutput 		= UOTR.LV_003.c;

	UOTR.LV_004.c 				= 0.5;
	UOTR.LIC_004.MVoutput 		= UOTR.LV_004.c;
	
	"Oil treater initial conditions"
	UOTR.V_TO_002.OutletG.P 		= 200*'kPa' + Patm;
	UOTR.V_TO_002.OutletG.T 		= (90+273.15)*'K';
	UOTR.V_TO_002.OutletL.d60 	= 141.5/(29+131.5);
	UOTR.V_TO_002.OutletL.Tbn 	= (11.3*UOTR.V_TO_002.OutletL.d60)^3 * 'degR';
	UOTR.V_TO_002.OutletG.dg 	= 1.5;
	UOTR.V_TO_002.OutletG.Ycg 	= 6.5*'l/m^3';
	UOTR.V_TO_002.OutletL.BSW 	= 0.2;
	UOTR.V_TO_002.OutletL.ws 	= (50*'g/l'/rho_H2Ostd)/(1+(50*'g/l'/rho_H2Ostd));
	UOTR.V_TO_002.Level			= 1.0*'m';

	UOTR.TO_002.OutletW.T 		= (90+273.15)*'K';
	UOTR.TO_002.OutletL.d60 		= 141.5/(29+131.5);
	UOTR.TO_002.OutletL.Tbn 		= (11.3*UOTR.TO_002.OutletL.d60)^3 * 'degR';	
	UOTR.TO_002.OutletW.ws 		= (50*'g/l'/rho_H2Ostd)/(1+(50*'g/l'/rho_H2Ostd));
	UOTR.TO_002.LevelW 			= 2.0*'m';

	UOTR.PV_003A.c 			= 0.5;
	UOTR.PIC_003A.MVoutput 		= UOTR.PV_003A.c;
	UOTR.PV_003B.c 			= 0.00;
	UOTR.PIC_003B.MVoutput 		= UOTR.PV_003B.c;
	
	UOTR.LV_005.c 				= 0.7;
	UOTR.LIC_005.MVoutput 		= UOTR.LV_005.c;
	
	UOTR.LV_006.c 				= 0.5;
	UOTR.LIC_006.MVoutput 		= UOTR.LV_006.c;

	"Inlet gas cooler initial conditions"
	UGKO.P_001.Qout 			= 2*'MW';

	"Inlet scrubber initial conditions" 
	UGKO.V_001.OutletG.P 		= 2100 * 'kPa' + Patm;
	UGKO.V_001.OutletG.T 		= (40+273.15)*'K';
	UGKO.V_001.Level 			= 0.5*'m';
	UGKO.V_001.OutletG.dg 		= 0.65;
	UGKO.V_001.OutletG.Ycg 		= 2*'l/m^3';
	UGKO.V_001.OutletG.d60G 		= 141.5/(70+131.5);
	UGKO.V_001.OutletG.TbnG 		= (9.083*UGKO.V_001.OutletG.d60G)^3 * 'degR';

	UGKO.PIC_001.MVoutput 		= 1e-5;
	
	UGKO.LV_001.c 				= 0.4;
	UGKO.LIC_001.MVoutput 		= UGKO.LV_001.c;

	"Vapor recovery unit initial conditions"
	UVRC.scrb.OutletG.P 		= [180,670] * 'kPa' + Patm;
	UVRC.scrb.OutletG.T 		= (50+273.15)*'K';
	UVRC.scrb.Level 			= 1.00*'m';
	UVRC.scrb.OutletG.d60G 		= [0.82789,0.819863];
	UVRC.scrb.OutletG.TbnG 		= [457.909,444.72] * 'K';
	UVRC.scrb.OutletG.dg 		= [2.01812,1.38539];
	UVRC.scrb.OutletG.Ycg 		= [17.5637,12.0571] * 'l/m^3';

	UVRC.cool.Qout 			= [0.15,0.35]*'MW';

	UVRC.comp.Nr 				= 9000*'rpm';
	UVRC.MCC.MVoutput 			= UVRC.comp(1).Nr/UVRC.Nr_Max;

	UVRC.FIC.MVoutput 			= [0.50,0.50];

	UVRC.LV.c 				= [0.50,0.50];
	UVRC.LIC.MVoutput 			= UVRC.LV(1:UVRC.numOfStg).c;

	"Main compreesion unit initial conditions"
	UMCP.scrb.OutletG.P 		= [2000,8000] * 'kPa' + Patm;	
	UMCP.scrb.OutletG.T 		= (30+273.15)*'K';
	UMCP.scrb.OutletG.d60G 		= 0.788785;
	UMCP.scrb.OutletG.TbnG 		= 393.728 * 'K';
	UMCP.scrb.OutletG.dg 		= 0.703984;
	UMCP.scrb.OutletG.Ycg 		= 3.9913*'l/m^3';
	UMCP.scrb.Level 			= 1.0*'m';

	UMCP.comp.Nr 				= 11000*'rpm';
	UMCP.MCC.MVoutput 			= UMCP.comp(1).Nr/UMCP.Nr_Max;

	UMCP.FIC.MVoutput 			= 0;

	UMCP.LV.c 				= [0.5,0.5];
	UMCP.LIC.MVoutput 			= UMCP.LV.c;

	UMCP.cool.Qout 			= 7*'MW';

	's'*diff(UMCP.ExitG.Outlet.Qg) = 0 * 'm^3/d';

	"Hydrocarbon dewpoint unit initial conditions"
	UHDP.V_001.OutletG.P 		= 5100*'kPa' + Patm;
	UHDP.V_001.OutletG.T 		= (10+273.15)*'K';
	UHDP.V_001.OutletG.d60G 		= 141.5/(70+131.5);
	UHDP.V_001.OutletG.TbnG 		= (9.65*UHDP.V_001.OutletG.d60G)^3 * 'degR';
	UHDP.V_001.OutletG.dg 		= 0.7;
	UHDP.V_001.OutletG.Ycg 		= 6*'l/m^3';
	UHDP.V_001.Level 			= 1.5*'m';

	UHDP.PV_001.c 				= 0.25;
	UHDP.PIC_001.MVoutput 		= UHDP.PV_001.c;
	
	UHDP.LV_001.c 				= 0.25;
	UHDP.LIC_001.MVoutput 		= UHDP.LV_001.c;

	"Export unit compression initial conditions"
	UECP.scrb.OutletG.P 		= [5000,11250,25000] * 'kPa' + Patm;
	UECP.scrb.OutletG.T 		= [(40+273.15),(40+273.15),(40+273.15)]*'K';
	UECP.scrb.OutletG.Rv 		= [1e-4,1e-4,1e-4]*'l/m^3';
	UECP.scrb.OutletG.d60G 		= [141.5/(50+131.5),141.5/(50+131.5),141.5/(50+131.5)];
	UECP.scrb.OutletG.TbnG 		= [(120+273.15),(120+273.15),(120+273.15)]*'K';
	UECP.scrb.OutletG.dg 		= [0.7,0.7,0.7];
	UECP.scrb.OutletG.Ycg 		= [4,4,4]*'l/m^3';

	UECP.comp.Nr 				= 9000*'rpm';
	UECP.MCC.MVoutput 			= UECP.comp(1).Nr/UECP.Nr_Max;

	UECP.FIC.MVoutput 			= [0,0];

	UECP.cool.Qout 			= [4,6]*'MW';
	
	"Exportation header pressure control initial conditions"
	UEHD.PV_001.c 				= 0.5;
	UEHD.PIC_001.MVoutput 		= UEHD.PV_001.c;

	OPTIONS
	Dynamic=true;
	SparseAlgebra=true;
	TimeStart = 0;
	TimeStep = 1;
	TimeEnd = 600;
	TimeUnit='min';
	NLASolver(
		File="nlasolver",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8,
		MaxIterations=300
	);
	DAESolver(
		File="dasslc",
		RelativeAccuracy=1e-5,
		AbsoluteAccuracy=1e-8,
		EventAccuracy=1e-2
	);
	InitialFile="init/OilGasProcess_init.rlt";
end
