using "mbo_streams";

Model hex_liq_basics
	PARAMETERS
	rho_H2Ostd	as dens_mass	(Brief="Pure water mass density at std. cond.",Default=999.054);
	rho_AIRstd	as dens_mass	(Brief="Air mass density at std. cond.",Default=1.2938);
	
	VARIABLES
in	Inlet		as str3ph;
out	Outlet		as triphase_stream;
	
	DP			as positive	(Brief="Pressure drop",Unit='kPa',Default=10);
	Rseq			as positive	(Brief="Solution gas-oil ratio at eq.",Unit='m^3/m^3',Default=10);
	SumInletGas	as positive	(Brief="Inlet streams gas std. vol. flow sum",Unit='m^3/d',Default=2e5);
	Gunbal		as Real		(Brief="Gas std. vol. unbalance",Unit='m^3/d',Default=0);
	
	EQUATIONS
	"Oil std. vol. balance"
	Inlet.Qf*(1-Inlet.BSW) + Inlet.Qg*Inlet.Rv = Outlet.Qf*(1-Outlet.BSW) + Outlet.Qg*Outlet.Rv;

	"Sum of inlet streams gas std. vol."
	SumInletGas = Inlet.Qf*(1-Inlet.BSW)*Inlet.Rs + Inlet.Qg;

	"Gas std. vol. unbalance"
	Gunbal = Outlet.Qf*(1-Outlet.BSW)*Rseq - (Inlet.Qf*(1-Inlet.BSW)*Inlet.Rs + Inlet.Qg);

	"Std. vol. balance for liberated gas"
	Outlet.Qg = 0.5*(1+tanh(-Gunbal/'m^3/d'/1e-6))*(-Gunbal);

	"Std. vol. balance for solution gas-oil ratio"
	Outlet.Qf*(1-Outlet.BSW)*Outlet.Rs = 0.5*(1+tanh(Gunbal/'m^3/d'/1e-6))*SumInletGas
		+ 0.5*(1+tanh(-Gunbal/'m^3/d'/1e-6))*Outlet.Qf*(1-Outlet.BSW)*Rseq;

	"Water std. vol. balance"
	Outlet.Qf*Outlet.BSW = Inlet.Qf*Inlet.BSW;

	"Water salt mass balance"
	Outlet.ws = Inlet.ws;
	
	"Pressure drop"
	DP = Inlet.P - Outlet.P;

	"Solution gas/oil ratio at equilibrium"
	Rseq/'ft^3/bbl' = 0.0362*(Outlet.dg*(1 + 5.912e-5*(141.5/Outlet.d60-131.5)*(40*1.8+32)*ln(14.7/114.7)))
		*(Outlet.P/'psi')^1.0937*exp(25.724*(141.5/Outlet.d60-131.5)/(Outlet.T/'degR'));

	"Vaporized oil/gas ratio"
	Outlet.Rv/Outlet.Ycg = (4.7e-7*(Outlet.P/'psi')^2 - 1.4e-3*(Outlet.P/'psi') + 2.3)*
		exp(-5.438e-3*Outlet.dg)*exp(-6.8e8*Outlet.d60/(Outlet.T/'degR')^3);

	"Equates of outlet stream for compositional variables"
	Outlet.d60 = Inlet.d60;
	Outlet.Tbn = Inlet.Tbn;
	Outlet.dg = Inlet.dg;
	Outlet.Ycg = Inlet.Ycg;
end

Model heater_liq as hex_liq_basics
	VARIABLES
	Qin		as power	(Brief="Heat applied to the system",DisplayUnit='MW',Default=16000);
	
	EQUATIONS
	"Energy balance"
	Qin + Inlet.Qf*((1-Inlet.BSW)*Inlet.d60*rho_H2Ostd*Inlet.hO + Inlet.BSW*Inlet.rho_Wstd*Inlet.hW)
		+ Inlet.Qg*Inlet.dg*rho_AIRstd*Inlet.hG =
	Outlet.Qf*((1-Outlet.BSW)*Outlet.d60*rho_H2Ostd*Outlet.hO + Outlet.BSW*Outlet.rho_Wstd*Outlet.hW)
		+ Outlet.Qg*Outlet.dg*rho_AIRstd*Outlet.hG;
end

Model cooler_liq as hex_liq_basics
	VARIABLES
	Qout		as power	(Brief="Heat removed from the system",DisplayUnit='MW',Default=16000);
	
	EQUATIONS
	"Energy balance"
	Inlet.Qf*((1-Inlet.BSW)*Inlet.d60*rho_H2Ostd*Inlet.hO + Inlet.BSW*Inlet.rho_Wstd*Inlet.hW)
		+ Inlet.Qg*Inlet.dg*rho_AIRstd*Inlet.hG =
	Qout + Outlet.Qf*((1-Outlet.BSW)*Outlet.d60*rho_H2Ostd*Outlet.hO + Outlet.BSW*Outlet.rho_Wstd*Outlet.hW)
		+ Outlet.Qg*Outlet.dg*rho_AIRstd*Outlet.hG;
end

Model hexch_liq
	PARAMETERS
	rho_H2Ostd	as dens_mass		(Brief="Pure water mass density at std. cond.",Default=999.054);
	Tref			as temperature		(Brief="Reference temperature for std. cond.",Default=288.70556);
	UA			as positive		(Brief="Global heat transfer coefficient",Unit='kW/K',Default=1600);
	
	VARIABLES
	Cold 		as heater_liq;
	ColdMax		as heater_liq;
	Hot			as cooler_liq;
	HotMax		as cooler_liq;

	Qexch		as power			(Brief="Heat exchanged",DisplayUnit='MW',Default=16000);
	Qmax			as power			(Brief="Maximum limit for heat exchange",DisplayUnit='MW',Default=20000);
	Ccold		as positive		(Brief="Cold heat capacity rate",Unit='kW/K',Default=800);
	Chot			as positive		(Brief="Hot heat capacity rate",Unit='kW/K',Default=640);
	Cr			as fraction		(Brief="Heat capacity rate ratio",Default=0.8);
	Cmin			as positive		(Brief="Minimum heat capacity rate",Unit='kW/K',Default=640);
	Cmax			as positive		(Brief="Maximum heat capacity rate",Unit='kW/K',Default=800);
	eff			as fraction		(Brief="Heat exchanger effectiveness",Default=0.8);
	NTU			as positive		(Brief="Number of transfer units",Default=3);

	EQUATIONS
	"Thermodynamic heat limits"
	ColdMax.Outlet.T = Hot.Inlet.T;
	HotMax.Outlet.T = Cold.Inlet.T;

	"Cold side/Hot side heat rate"
	Cold.Qin = Qexch;
	Hot.Qout = Cold.Qin;
	
	"Equates of Cold side/Hot side pressure drop"
	ColdMax.DP = Cold.DP;
	HotMax.DP = Hot.DP;

	"Cold heat capacity rate"
	Ccold = ColdMax.Inlet.Qf*(1-ColdMax.Inlet.BSW)*ColdMax.Inlet.d60*rho_H2Ostd*'Btu/lb/degR'*(
			(-1.17126+(0.023722+0.024907*ColdMax.Inlet.d60)*
				((ColdMax.Inlet.Tbn/'degR')^(1/3)/ColdMax.Inlet.d60) + (1.14982-0.046535*
					((ColdMax.Inlet.Tbn/'degR')^(1/3)/ColdMax.Inlet.d60))/ColdMax.Inlet.d60
			)
			+ (1/2)*1e-4*(1+0.82463*((ColdMax.Inlet.Tbn/'degR')^(1/3)/ColdMax.Inlet.d60))*
				(1.12172-0.27634/ColdMax.Inlet.d60)*(707.67^2-(Tref/'degR')^2)/(707.67-(Tref/'degR'))
			- (1/3)*1e-8*(1+0.82463*((ColdMax.Inlet.Tbn/'degR')^(1/3)/ColdMax.Inlet.d60))*
				(2.9027-0.70958/ColdMax.Inlet.d60)*(707.67^3-(Tref/'degR')^3)/(707.67-(Tref/'degR'))
		) +
		ColdMax.Inlet.Qf*ColdMax.Inlet.BSW*ColdMax.Inlet.rho_Wstd*'kJ/kg/K'*(
			4.18-ColdMax.Inlet.ws*(ColdMax.Inlet.rho_Wstd/'kg/m^3')/ColdMax.Inlet.Bw*
				(4.396e-3-4.8e-6*ColdMax.Inlet.ws*(ColdMax.Inlet.rho_Wstd/'kg/m^3')/ColdMax.Inlet.Bw)
		);

	"Hot heat capacity rate"
	Chot = HotMax.Inlet.Qf*(1-HotMax.Inlet.BSW)*HotMax.Inlet.d60*rho_H2Ostd*'Btu/lb/degR'*(
			(-1.17126+(0.023722+0.024907*HotMax.Inlet.d60)*
				((HotMax.Inlet.Tbn/'degR')^(1/3)/HotMax.Inlet.d60) + (1.14982-0.046535*
					((HotMax.Inlet.Tbn/'degR')^(1/3)/HotMax.Inlet.d60))/HotMax.Inlet.d60
			)
			+ (1/2)*1e-4*(1+0.82463*((HotMax.Inlet.Tbn/'degR')^(1/3)/HotMax.Inlet.d60))*
				(1.12172-0.27634/HotMax.Inlet.d60)*(707.67^2-(Tref/'degR')^2)/(707.67-(Tref/'degR'))
			- (1/3)*1e-8*(1+0.82463*((HotMax.Inlet.Tbn/'degR')^(1/3)/HotMax.Inlet.d60))*
				(2.9027-0.70958/HotMax.Inlet.d60)*(707.67^3-(Tref/'degR')^3)/(707.67-(Tref/'degR'))
			) +
		HotMax.Inlet.Qf*HotMax.Inlet.BSW*HotMax.Inlet.rho_Wstd*'kJ/kg/K'*(
			4.18 - HotMax.Inlet.ws*(HotMax.Inlet.rho_Wstd/'kg/m^3')/HotMax.Inlet.Bw*
				(4.396e-3 - 4.8e-6*HotMax.Inlet.ws*(HotMax.Inlet.rho_Wstd/'kg/m^3')/HotMax.Inlet.Bw)
		);

	"Heat capacity rate"
	Cmax = 0.5*(1+tanh((Ccold-Chot)/'kW/K'/1e-4))*Ccold + 0.5*(1+tanh((Chot-Ccold)/'kW/K'/1e-4))*Chot;
	Cmin = 0.5*(1+tanh((Ccold-Chot)/'kW/K'/1e-4))*Chot + 0.5*(1+tanh((Chot-Ccold)/'kW/K'/1e-4))*Ccold;

	"Number of transfer units"
	NTU*Cmin = UA;
	
	"Heat capacity rate ratio"
	Cr*Cmax = Cmin;

	"Heat transfer effectiveness: Counter-current flow"
	eff*(1-Cr*exp(-NTU*(1-Cr))) = (1-exp(-NTU*(1-Cr)));

	"Maximum limit for heat exchange"
	Qmax = 0.5*(1+tanh((ColdMax.Qin-HotMax.Qout)/'MW'/1e-4))*HotMax.Qout 
		+ 0.5*(1+tanh((HotMax.Qout-ColdMax.Qin)/'MW'/1e-4))*ColdMax.Qin;

	"Heat transferred effectiveness"
	Qexch = eff*Qmax;
end

Model hex_gasliq_basics
	PARAMETERS
	rho_H2Ostd	as dens_mass	(Brief="Pure water mass density at std. cond.",Default=999.054);
	rho_AIRstd	as dens_mass	(Brief="Air mass density at std. cond.",Default=1.2938);
	Cf			as area		(Brief="Flow coefficient",DisplayUnit='cm^2',Default=0.1);
	
	VARIABLES
in	Inlet		as strGL;
out	Outlet		as gasliq_stream;

	DP			as positive	(Brief="Pressure drop",Unit='kPa',Default=10);
	Rveq			as positive	(Brief="Vaporized oil-gas ratio at eq.",Unit='l/m^3',Default=0.05);
	SumInletOil	as positive	(Brief="Inlet streams oil std. vol. flow sum",Unit='m^3/d',Default=1e2);
	Ounbal		as Real		(Brief="Oil std. vol. unbalance",Unit='m^3/d',Default=0);
	
	EQUATIONS
	"Pressure-flow relation"
	Inlet.Qg*Inlet.dg*rho_AIRstd = Cf*sqrt(DP*Inlet.rhoG);

	"Gas std. vol. balance"
	Inlet.Qg + Inlet.Qo*Inlet.Rs = Outlet.Qg + Outlet.Qo*Outlet.Rs;

	"Sum of inlet streams oil std. vol."
	SumInletOil = Inlet.Qg*Inlet.Rv + Inlet.Qo;

	"Oil std. vol. unbalance"
	Ounbal = Outlet.Qg*Rveq - (Inlet.Qg*Inlet.Rv + Inlet.Qo);

	"Std. vol. balance for condensed oil"
	Outlet.Qo = 0.5*(1+tanh(-Ounbal/'m^3/d'/1e-6))*(-Ounbal);

	"Std. vol. balance for volatiled oil-gas ratio"
	Outlet.Qg*Outlet.Rv = 0.5*(1+tanh(Ounbal/'m^3/d'/1e-6))*SumInletOil
		+ 0.5*(1+tanh(-Ounbal/'m^3/d'/1e-6))*Outlet.Qg*Rveq;
	
	"Pressure drop"
	DP = Inlet.P - Outlet.P;

	"Solution gas/oil ratio"
	Outlet.Rs/'ft^3/bbl' = 
		0.0362*(Outlet.dg*(1+5.912e-5*(141.5/Outlet.d60-131.5)*(40*1.8+32)*ln(14.7/114.7)))
		*(Outlet.P/'psi')^1.0937*exp(25.724*(141.5/Outlet.d60-131.5)/(Outlet.T/'degR'));

	"Vaporized oil/gas ratio"
	Rveq/Outlet.Ycg = (4.7e-7*(Outlet.P/'psi')^2 - 1.4e-3*(Outlet.P/'psi') + 2.3)*
		exp(-5.438e-3*Outlet.dg)*exp(-6.8e8*Outlet.d60/(Outlet.T/'degR')^3);

	"Equates of outlet stream for compositional variables"
	Outlet.d60G = Inlet.d60G;
	Outlet.TbnG = Inlet.TbnG;
	Outlet.dg = Inlet.dg;
	Outlet.Ycg = Inlet.Ycg;
end

Model heater_gasliq as hex_gasliq_basics
	VARIABLES
	Qin		as power	(Brief="Heat applied to the system",DisplayUnit='MW',Default=4000);
	
	EQUATIONS
	"Energy balance"
	Qin + Inlet.Qg*Inlet.dg*rho_AIRstd*Inlet.hG + Inlet.Qo*Inlet.d60*rho_H2Ostd*Inlet.hO =
		Outlet.Qg*Outlet.dg*rho_AIRstd*Outlet.hG + Outlet.Qo*Outlet.d60*rho_H2Ostd*Outlet.hO;
end

Model cooler_gasliq as hex_gasliq_basics
	VARIABLES
	Qout		as power	(Brief="Heat removed from the system",DisplayUnit='MW',Default=4000);
	
	EQUATIONS
	"Energy balance"
	Inlet.Qg*Inlet.dg*rho_AIRstd*Inlet.hG + Inlet.Qo*Inlet.d60*rho_H2Ostd*Inlet.hO =
		Qout + Outlet.Qg*Outlet.dg*rho_AIRstd*Outlet.hG + Outlet.Qo*Outlet.d60*rho_H2Ostd*Outlet.hO;
end

Model hexch_gasliq
	PARAMETERS
	R			as positive		(Brief="Ideal gas constant",Unit='kJ/kmol/K',Default=8.31447);
	rho_AIRstd	as dens_mass		(Brief="Air mass density at std. cond.",Default=1.2938);
	Tref			as temperature		(Brief="Reference temperature for std. cond.",Default=288.70556);
	UA			as positive		(Brief="Global heat transfer coefficient",Unit='kW/K',Default=1600);

	SET
	ColdMax.Cf = Cold.Cf;
	HotMax.Cf = Hot.Cf;

	VARIABLES
	Cold 		as heater_gasliq;
	ColdMax		as heater_gasliq;
	Hot			as cooler_gasliq;
	HotMax		as cooler_gasliq;
	
	Qexch		as power			(Brief="Heat exchanged",DisplayUnit='MW',Default=16000);
	Qmax			as power			(Brief="Maximum limit for heat exchange",DisplayUnit='MW',Default=20000);
	Ccold		as positive		(Brief="Cold heat capacity rate",Unit='kW/K',Default=800);
	Chot			as positive		(Brief="Hot heat capacity rate",Unit='kW/K',Default=640);
	Cr			as fraction		(Brief="Heat capacity rate ratio",Default=0.8);
	Cmin			as positive		(Brief="Minimum heat capacity rate",Unit='kW/K',Default=640);
	Cmax			as positive		(Brief="Maximum heat capacity rate",Unit='kW/K',Default=800);
	eff			as fraction		(Brief="Heat exchanger effectiveness",Default=0.8);
	NTU			as positive		(Brief="Number of transfer units",Default=3);

	EQUATIONS
	"Thermodynamic heat limits"
	ColdMax.Outlet.T = Hot.Inlet.T;
	HotMax.Outlet.T = Cold.Inlet.T;

	"Cold side/Hot side heat rate"
	Cold.Qin = Qexch;
	Hot.Qout = Cold.Qin;

	"Cold heat capacity rate"
	Ccold = 
		ColdMax.Inlet.Qg*rho_AIRstd*R/(29*'kg/kmol')*(
			(0.7457*ColdMax.Inlet.dg^2 - 1.3405*ColdMax.Inlet.dg + 2.222) +
			1e-3*(19.894*ColdMax.Inlet.dg - 1.902)/2*(473.15^2-(Tref/'K')^2)/(473.15-(Tref/'K')) +
			1e-6*(-6.6562*ColdMax.Inlet.dg + 1.5103)/3*(473.15^3-(Tref/'K')^3)/(473.15-(Tref/'K'))
			);
			
	"Hot heat capacity rate"
	Chot = 
		HotMax.Inlet.Qg*rho_AIRstd*R/(29*'kg/kmol')*(
			(0.7457*HotMax.Inlet.dg^2 - 1.3405*HotMax.Inlet.dg + 2.222) +
			1e-3*(19.894*HotMax.Inlet.dg - 1.902)/2*(473.15^2-(Tref/'K')^2)/(473.15-(Tref/'K')) +
			1e-6*(-6.6562*HotMax.Inlet.dg + 1.5103)/3*(473.15^3-(Tref/'K')^3)/(473.15-(Tref/'K'))
			);

	"Heat capacity rate"
	Cmax = 0.5*(1+tanh((Ccold-Chot)/'kW/K'/1e-4))*Ccold + 0.5*(1+tanh((Chot-Ccold)/'kW/K'/1e-4))*Chot;
	Cmin = 0.5*(1+tanh((Ccold-Chot)/'kW/K'/1e-4))*Chot + 0.5*(1+tanh((Chot-Ccold)/'kW/K'/1e-4))*Ccold;

	"Number of transfer units"
	NTU*Cmin = UA;
	
	"Heat capacity rate ratio"
	Cr*Cmax = Cmin;

	"Heat transfer effectiveness: Counter-current flow"
	eff*(1-Cr*exp(-NTU*(1-Cr))) = (1-exp(-NTU*(1-Cr)));

	"Maximum limit for heat exchange"
	Qmax = 0.5*(1+tanh((ColdMax.Qin-HotMax.Qout)/'MW'/1e-4))*HotMax.Qout 
		+ 0.5*(1+tanh((HotMax.Qout-ColdMax.Qin)/'MW'/1e-4))*ColdMax.Qin;

	"Heat transferred effectiveness"
	Qexch = eff*Qmax;
end

Model hexch_hliq_cgas
	PARAMETERS
	R			as positive		(Brief="Ideal gas constant",Unit='kJ/kmol/K',Default=8.31447);
	rho_H2Ostd	as dens_mass		(Brief="Pure water mass density at std. cond.",Default=999.054);
	rho_AIRstd	as dens_mass		(Brief="Air mass density at std. cond.",Default=1.2938);
	Tref			as temperature		(Brief="Reference temperature for std. cond.",Default=288.70556);
	UA			as positive		(Brief="Global heat transfer coefficient",Unit='kW/K',Default=1600);
	
	SET
	HotMax.Cf = Hot.Cf;
	
	VARIABLES
	Cold 		as heater_liq;
	ColdMax		as heater_liq;
	Hot			as cooler_gasliq;
	HotMax		as cooler_gasliq;
	
	Qexch		as power			(Brief="Heat exchanged",DisplayUnit='MW',Default=16000);
	Qmax			as power			(Brief="Maximum Heat exchanged",DisplayUnit='MW',Default=20000);
	Ccold		as positive		(Brief="Cold heat capacity rate",Unit='kW/K',Default=800);
	Chot			as positive		(Brief="Hot heat capacity rate",Unit='kW/K',Default=640);
	Cr			as fraction		(Brief="Heat capacity ratio",Default=0.8);
	Cmin			as positive		(Brief="Minimum Heat capacity",Unit='kW/K',Default=640);
	Cmax			as positive		(Brief="Maximum Heat capacity",Unit='kW/K',Default=800);
	eff			as fraction		(Brief="Heat exchanger efficiency",Default=0.8);
	NTU			as positive		(Brief="Number of transfer units",Default=3);

	EQUATIONS
	"Thermodynamic heat limits"
	ColdMax.Outlet.T = Hot.Inlet.T;
	HotMax.Outlet.T = Cold.Inlet.T;

	"Cold side/Hot side energy balance"
	Cold.Qin = Qexch;
	Hot.Qout = Cold.Qin;
	
	"Equates of Cold side/Hot side pressure drop"
	ColdMax.DP = Cold.DP;

	"Cold heat capacity rate"
	Ccold = ColdMax.Inlet.Qf*(1-ColdMax.Inlet.BSW)*ColdMax.Inlet.d60*rho_H2Ostd*'Btu/lb/degR'*(
			(-1.17126+(0.023722+0.024907*ColdMax.Inlet.d60)*
				((ColdMax.Inlet.Tbn/'degR')^(1/3)/ColdMax.Inlet.d60) + (1.14982-0.046535*
					((ColdMax.Inlet.Tbn/'degR')^(1/3)/ColdMax.Inlet.d60))/ColdMax.Inlet.d60
			)
			+ (1/2)*1e-4*(1+0.82463*((ColdMax.Inlet.Tbn/'degR')^(1/3)/ColdMax.Inlet.d60))*
				(1.12172-0.27634/ColdMax.Inlet.d60)*(707.67^2-(Tref/'degR')^2)/(707.67-(Tref/'degR'))
			- (1/3)*1e-8*(1+0.82463*((ColdMax.Inlet.Tbn/'degR')^(1/3)/ColdMax.Inlet.d60))*
				(2.9027-0.70958/ColdMax.Inlet.d60)*(707.67^3-(Tref/'degR')^3)/(707.67-(Tref/'degR'))
			) +
		ColdMax.Inlet.Qf*ColdMax.Inlet.BSW*ColdMax.Inlet.rho_Wstd*'kJ/kg/K'*(
			4.18 - ColdMax.Inlet.ws*(ColdMax.Inlet.rho_Wstd/'kg/m^3')/ColdMax.Inlet.Bw*
				(4.396e-3 - 4.8e-6*ColdMax.Inlet.ws*(ColdMax.Inlet.rho_Wstd/'kg/m^3')/ColdMax.Inlet.Bw)
		);

	"Hot heat capacity rate"
	Chot = 
		HotMax.Inlet.Qg*rho_AIRstd*R/(29*'kg/kmol')*(
			(0.7457*HotMax.Inlet.dg^2 - 1.3405*HotMax.Inlet.dg + 2.222) +
			1e-3*(19.894*HotMax.Inlet.dg - 1.902)/2*(473.15^2-(Tref/'K')^2)/(473.15-(Tref/'K')) +
			1e-6*(-6.6562*HotMax.Inlet.dg + 1.5103)/3*(473.15^3-(Tref/'K')^3)/(473.15-(Tref/'K'))
			);

	"Heat capacity rate"
	Cmax = 0.5*(1+tanh((Ccold-Chot)/'kW/K'/1e-4))*Ccold + 0.5*(1+tanh((Chot-Ccold)/'kW/K'/1e-4))*Chot;
	Cmin = 0.5*(1+tanh((Ccold-Chot)/'kW/K'/1e-4))*Chot + 0.5*(1+tanh((Chot-Ccold)/'kW/K'/1e-4))*Ccold;

	"Number of transfer units"
	NTU*Cmin = UA;

	"Heat capacity rate ratio"
	Cr*Cmax = Cmin;

	"Heat transfer effectiveness: Counter-current flow"
	eff*(1-Cr*exp(-NTU*(1-Cr))) = (1-exp(-NTU*(1-Cr)));

	"Maximum limit for heat exchange"
	Qmax = 0.5*(1+tanh((ColdMax.Qin-HotMax.Qout)/'MW'/1e-4))*HotMax.Qout 
		+ 0.5*(1+tanh((HotMax.Qout-ColdMax.Qin)/'MW'/1e-4))*ColdMax.Qin;

	"Heat transferred effectiveness"
	Qexch = eff*Qmax;
end

Model hex_gas_basics
	PARAMETERS
	rho_AIRstd	as dens_mass	(Brief="Air mass density at std. cond.",Default=1.2938);
	Cf			as area		(Brief="Flow coefficient",DisplayUnit='cm^2',Default=0.1);
	
	VARIABLES
in	Inlet		as strG;
out	Outlet		as gas_stream;

	DP			as positive	(Brief="Pressure drop",Unit='kPa',Default=10);
	
	EQUATIONS
	"Pressure-flow relation"
	Inlet.Qg*Inlet.dg*rho_AIRstd = Cf*sqrt(DP*Inlet.rhoG);

	"Std. vol. balance for volatilized oil-gas ratio"
	Outlet.Rv = Inlet.Rv;

	"Gas std. vol. balance"
	Inlet.Qg = Outlet.Qg;
	
	"Pressure drop"
	DP = Inlet.P - Outlet.P;

	"Equates of outlet stream compositional variables"
	Outlet.d60G = Inlet.d60G;
	Outlet.TbnG = Inlet.TbnG;
	Outlet.dg = Inlet.dg;
	Outlet.Ycg = Inlet.Ycg;
end

Model cooler_gas as hex_gas_basics
	VARIABLES
	Qout		as power	(Brief="Heat removed from the system",DisplayUnit='MW',Default=4000);
	
	EQUATIONS
	"Energy balance"
	Inlet.Qg*Inlet.dg*rho_AIRstd*Inlet.hG = Qout + Outlet.Qg*Outlet.dg*rho_AIRstd*Outlet.hG;
end
