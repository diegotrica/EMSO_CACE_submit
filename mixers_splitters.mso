using "mbo_streams";

Model mixer_3ph
	PARAMETERS
	rho_H2Ostd		as dens_mass	(Brief="Pure water mass density at std. cond.",Default=999.054);
	rho_AIRstd		as dens_mass	(Brief="Air mass density at std. cond.",Default=1.2938);
	numOfInlets		as Integer	(Brief="Number of inlet streams",Default=2);
	
	VARIABLES
in	Inlet(numOfInlets)	as str3ph;
out	Outlet			as triphase_stream;

	EQUATIONS
	"Oil std vol. balance"
	Outlet.Qf*(1-Outlet.BSW) + Outlet.Qg*Outlet.Rv =  
		sum(Inlet.Qf*(1-Inlet.BSW) + Inlet.Qg*Inlet.Rv);

	"Gas std vol. balance"
	Outlet.Qg + Outlet.Qf*(1-Outlet.BSW)*Outlet.Rs = 
		sum(Inlet.Qg + Inlet.Qf*(1-Inlet.BSW)*Inlet.Rs);

	"Water std vol. balance"
	Outlet.Qf*Outlet.BSW = sum(Inlet.Qf*Inlet.BSW);

	"Water salt mass balance"
	Outlet.Qf*Outlet.BSW*Outlet.rho_Wstd*Outlet.ws = 
		sum(Inlet.Qf*Inlet.BSW*Inlet.rho_Wstd*Inlet.ws);

	"Energy balance"
	Outlet.Qf*((1-Outlet.BSW)*Outlet.d60*rho_H2Ostd*Outlet.hO + Outlet.BSW*Outlet.rho_Wstd*Outlet.hW)
		+ Outlet.Qg*rho_AIRstd*Outlet.dg*Outlet.hG = 
	sum(Inlet.Qf*((1-Inlet.BSW)*Inlet.d60*rho_H2Ostd*Inlet.hO + Inlet.BSW*Inlet.rho_Wstd*Inlet.hW)
		+ Inlet.Qg*rho_AIRstd*Inlet.dg*Inlet.hG);

	"Solution gas/oil ratio"
	Outlet.Rs/'ft^3/bbl' = 
		0.0362*(Outlet.dg*(1 + 5.912e-5*(141.5/Outlet.d60-131.5)*(40*1.8+32)*ln(14.7/114.7)))
		*(Outlet.P/'psi')^1.0937*exp(25.724*(141.5/Outlet.d60-131.5)/(Outlet.T/'degR'));

	"Vaporized oil/gas ratio"
	Outlet.Rv/Outlet.Ycg = (4.7e-7*(Outlet.P/'psi')^2 - 1.4e-3*(Outlet.P/'psi') + 2.3)*
		exp(-5.438e-3*Outlet.dg)*exp(-6.8e8*Outlet.d60/(Outlet.T/'degR')^3);

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	Outlet.Qf*(1-Outlet.BSW)*Outlet.d60 + Outlet.Qg*Outlet.Rv*Outlet.d60G =
		sum(Inlet.Qf*(1-Inlet.BSW)*Inlet.d60 + Inlet.Qg*Inlet.Rv*Inlet.d60G);

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	Outlet.Qf*(1-Outlet.BSW)*(Outlet.Tbn/'degR')^(1/3) + Outlet.Qg*Outlet.Rv*(Outlet.TbnG/'degR')^(1/3) = 	
		sum(Inlet.Qf*(1-Inlet.BSW)*(Inlet.Tbn/'degR')^(1/3) + Inlet.Qg*Inlet.Rv*(Inlet.TbnG/'degR')^(1/3));

	"Property mixing rule for gas specific gravity (std vol. balance)"
	Outlet.Qf*(1-Outlet.BSW)*Outlet.Rs*Outlet.dgL + Outlet.Qg*Outlet.dg = 
		sum(Inlet.Qf*(1-Inlet.BSW)*Inlet.Rs*Inlet.dgL + Inlet.Qg*Inlet.dg);

	"Property mixing rule for condensate/gas yield (std. vol. balance)"
	Outlet.Qf*(1-Outlet.BSW)*Outlet.Rs*Outlet.YcgL + Outlet.Qg*Outlet.Ycg = 
		sum(Inlet.Qf*(1-Inlet.BSW)*Inlet.Rs*Inlet.YcgL + Inlet.Qg*Inlet.Ycg);

	"Mechanical equilibrium"
	Inlet(1:numOfInlets).P = Outlet.P;
end

Model mixer_3ph2ph
	PARAMETERS
	rho_H2Ostd			as dens_mass	(Brief="Pure water mass density at std. cond.",Default=999.054);
	rho_AIRstd			as dens_mass	(Brief="Air mass density at std. cond.",Default=1.2938);

	numOfInletsF			as Integer		(Brief="Number of str3ph inlet streams",Default=1);
	numOfInletsC			as Integer		(Brief="Number of str2ph inlet streams",Default=1);
	
	VARIABLES
in	InletF(numOfInletsF)	as str3ph;
in	InletC(numOfInletsC)	as str2ph;
out	Outlet				as triphase_stream;

	EQUATIONS
	"Oil std. vol. balance"
	Outlet.Qf*(1-Outlet.BSW) + Outlet.Qg*Outlet.Rv = 
		sum(InletF.Qf*(1-InletF.BSW) + InletF.Qg*InletF.Rv) 
		+ sum(InletC.Qf + InletC.Qg*InletC.Rv);
	
	"Gas std vol. balance"
	Outlet.Qf*(1-Outlet.BSW)*Outlet.Rs + Outlet.Qg = 
		sum(InletF.Qf*(1-InletF.BSW)*InletF.Rs + InletF.Qg)
		+ sum(InletC.Qf*InletC.Rs + InletC.Qg);

	"Water std vol. balance"
	Outlet.Qf*Outlet.BSW = sum(InletF.Qf*InletF.BSW);
	
	"Water salt mass balance"
	Outlet.Qf*Outlet.BSW*Outlet.rho_Wstd*Outlet.ws = 
		sum(InletF.Qf*InletF.BSW*InletF.rho_Wstd*InletF.ws);

	"Energy balance"
	Outlet.Qf*((1-Outlet.BSW)*Outlet.d60*rho_H2Ostd*Outlet.hO + Outlet.BSW*Outlet.rho_Wstd*Outlet.hW)
		+ Outlet.Qg*rho_AIRstd*Outlet.dg*Outlet.hG = sum(InletF.Qf*(
			(1-InletF.BSW)*InletF.d60*rho_H2Ostd*InletF.hO + InletF.BSW*InletF.rho_Wstd*InletF.hW)
		+ InletF.Qg*rho_AIRstd*InletF.dg*InletF.hG) 
		+ sum(InletC.Qf*InletC.d60*rho_H2Ostd*InletC.hO + InletC.Qg*rho_AIRstd*InletC.dg*InletC.hG);

	"Solution gas/oil ratio"
	Outlet.Rs/'ft^3/bbl' = 
		0.0362*(Outlet.dg*(1 + 5.912e-5*(141.5/Outlet.d60-131.5)*(40*1.8+32)*ln(14.7/114.7)))
		*(Outlet.P/'psi')^1.0937*exp(25.724*(141.5/Outlet.d60-131.5)/(Outlet.T/'degR'));

	"Vaporized oil/gas ratio"
	Outlet.Rv/Outlet.Ycg = (4.7e-7*(Outlet.P/'psi')^2 - 1.4e-3*(Outlet.P/'psi') + 2.3)*
		exp(-5.438e-3*Outlet.dg)*exp(-6.8e8*Outlet.d60/(Outlet.T/'degR')^3);

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	Outlet.Qf*(1-Outlet.BSW)*Outlet.d60 + Outlet.Qg*Outlet.Rv*Outlet.d60G = 
		sum(InletF.Qf*(1-InletF.BSW)*InletF.d60 + InletF.Qg*InletF.Rv*InletF.d60G)
		+ sum(InletC.Qf*InletC.d60 + InletC.Qg*InletC.Rv*InletC.d60G);

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	Outlet.Qf*(1-Outlet.BSW)*(Outlet.Tbn/'degR')^(1/3) + Outlet.Qg*Outlet.Rv*(Outlet.TbnG/'degR')^(1/3) = 
		sum(InletF.Qf*(1-InletF.BSW)*(InletF.Tbn/'degR')^(1/3) 
			+ InletF.Qg*InletF.Rv*(InletF.TbnG/'degR')^(1/3)) 
		+ sum(InletC.Qf*(InletC.Tbn/'degR')^(1/3) 
			+ InletC.Qg*InletC.Rv*(InletC.TbnG/'degR')^(1/3));
	
	"Property mixing rule for gas specific gravity (std vol. balance)"
	Outlet.Qg*Outlet.dg + Outlet.Qf*(1-Outlet.BSW)*Outlet.Rs*Outlet.dgL = 
		sum(InletF.Qf*(1-InletF.BSW)*InletF.Rs*InletF.dgL + InletF.Qg*InletF.dg)
		+ sum(InletC.Qf*InletC.Rs*InletC.dgL + InletC.Qg*InletC.dg);

	"Property mixing rule for Condensate/Gas yield (std. vol. balance)"
	Outlet.Qg*Outlet.Ycg + Outlet.Qf*(1-Outlet.BSW)*Outlet.Rs*Outlet.YcgL = 
		sum(InletF.Qf*(1-InletF.BSW)*InletF.Rs*InletF.YcgL + InletF.Qg*InletF.Ycg)
		+ sum(InletC.Qf*InletC.Rs*InletC.YcgL + InletC.Qg*InletC.Ycg);

	"Mechanical equilibrium"
	InletF(1:numOfInletsF).P = Outlet.P;
	InletC(1:numOfInletsC).P = Outlet.P;
end

Model mixer_water
	PARAMETERS
	numOfInlets			as Integer	(Brief="Number of inlet streams",Default=2);
	
	VARIABLES
in	Inlet(numOfInlets)		as strW;
out	Outlet				as water_stream;
	
	EQUATIONS
	"Water std. vol. balance"
	Outlet.Qw = sum(Inlet.Qw);
	
	"Water salt mass balance"
	Outlet.Qw*Outlet.rho_Wstd*Outlet.ws = sum(Inlet.Qw*Inlet.rho_Wstd*Inlet.ws);
	
	"Oil std. vol. balance"
	Outlet.Qw*Outlet.TOG = sum(Inlet.Qw*Inlet.TOG);
	
	"Energy balance"
	Outlet.Qw*Outlet.rho_Wstd*Outlet.hW = sum(Inlet.Qw*Inlet.rho_Wstd*Inlet.hW);

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	Outlet.Qw*Outlet.TOG*Outlet.d60 = sum(Inlet.Qw*Inlet.TOG*Inlet.d60);

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	Outlet.Qw*Outlet.TOG*(Outlet.Tbn/'degR')^(1/3) = 
		sum(Inlet.Qw*Inlet.TOG*(Inlet.Tbn/'degR')^(1/3));
	
	"Mechanical equilibrium"
	Inlet(1:numOfInlets).P = Outlet.P;
end

Model mixer_W3ph
	PARAMETERS
	rho_H2Ostd			as dens_mass	(Brief="Pure water mass density at std. cond.",Default=999.054);
	rho_AIRstd			as dens_mass	(Brief="Air mass density at std. cond.",Default=1.2938);

	numOfInletsF			as Integer	(Brief="Number of str3ph inlet streams",Default=1);
	numOfInletsW			as Integer	(Brief="Number of strW inlet streams",Default=1);
	
	VARIABLES
in	InletF(numOfInletsF)	as str3ph;
in	InletW(numOfInletsW)	as strW;
out	Outlet				as triphase_stream;

	EQUATIONS
	"Oil std. vol. balance"
	Outlet.Qf*(1-Outlet.BSW) + Outlet.Qg*Outlet.Rv = 
		sum(InletF.Qf*(1-InletF.BSW) + InletF.Qg*InletF.Rv)
		+ sum(InletW.Qw*InletW.TOG);
	
	"Gas std vol. balance"
	Outlet.Qf*(1-Outlet.BSW)*Outlet.Rs + Outlet.Qg = sum(InletF.Qf*(1-InletF.BSW)*InletF.Rs + InletF.Qg);

	"Water std vol. balance"
	Outlet.Qf*Outlet.BSW = sum(InletF.Qf*InletF.BSW) + sum(InletW.Qw);
	
	"Water salt mass balance"
	Outlet.Qf*Outlet.BSW*Outlet.rho_Wstd*Outlet.ws = 
		sum(InletF.Qf*InletF.BSW*InletF.rho_Wstd*InletF.ws)
		+ sum(InletW.Qw*InletW.rho_Wstd*InletW.ws);

	"Energy balance"
	Outlet.Qf*((1-Outlet.BSW)*Outlet.d60*rho_H2Ostd*Outlet.hO + Outlet.BSW*Outlet.rho_Wstd*Outlet.hW)
		+ Outlet.Qg*rho_AIRstd*Outlet.dg*Outlet.hG = sum(
	InletF.Qf*((1-InletF.BSW)*InletF.d60*rho_H2Ostd*InletF.hO + InletF.BSW*InletF.rho_Wstd*InletF.hW)
		+ InletF.Qg*rho_AIRstd*InletF.dg*InletF.hG
		) + sum(InletW.Qw*InletW.rho_Wstd*InletW.hW);

	"Solution gas/oil ratio"
	Outlet.Rs/'ft^3/bbl' = 
		0.0362*(Outlet.dg*(1 + 5.912e-5*(141.5/Outlet.d60-131.5)*(40*1.8+32)*ln(14.7/114.7)))
		*(Outlet.P/'psi')^1.0937*exp(25.724*(141.5/Outlet.d60-131.5)/(Outlet.T/'degR'));

	"Vaporized oil/gas ratio"
	Outlet.Rv/Outlet.Ycg = (4.7e-7*(Outlet.P/'psi')^2 - 1.4e-3*(Outlet.P/'psi') + 2.3)*
		exp(-5.438e-3*Outlet.dg)*exp(-6.8e8*Outlet.d60/(Outlet.T/'degR')^3);

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	Outlet.Qf*(1-Outlet.BSW)*Outlet.d60 + Outlet.Qg*Outlet.Rv*Outlet.d60G = 
		sum(InletF.Qf*(1-InletF.BSW)*InletF.d60 + InletF.Qg*InletF.Rv*InletF.d60G)
		+ sum(InletW.Qw*InletW.TOG*InletW.d60);

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	Outlet.Qf*(1-Outlet.BSW)*(Outlet.Tbn/'degR')^(1/3) + Outlet.Qg*Outlet.Rv*(Outlet.TbnG/'degR')^(1/3) = 
		sum(InletF.Qf*(1-InletF.BSW)*(InletF.Tbn/'degR')^(1/3) 
			+ InletF.Qg*InletF.Rv*(InletF.TbnG/'degR')^(1/3)) 
		+ sum(InletW.Qw*InletW.TOG*(InletW.Tbn/'degR')^(1/3));
	
	"Property mixing rule for gas specific gravity (std vol. balance)"
	Outlet.Qg*Outlet.dg + Outlet.Qf*(1-Outlet.BSW)*Outlet.Rs*Outlet.dgL = 
		sum(InletF.Qg*InletF.dg + InletF.Qf*(1-InletF.BSW)*InletF.Rs*InletF.dgL);

	"Property mixing rule for Condensate/Gas yield (std. vol. balance)"
	Outlet.Qg*Outlet.Ycg + Outlet.Qf*(1-Outlet.BSW)*Outlet.Rs*Outlet.YcgL = 
		sum(InletF.Qg*InletF.Ycg + InletF.Qf*(1-InletF.BSW)*InletF.Rs*InletF.YcgL);

	"Mechanical equilibrium"
	InletF(1:numOfInletsF).P = Outlet.P;
	InletW(1:numOfInletsW).P = Outlet.P;
end

Model mixer_gas
	PARAMETERS
	rho_AIRstd			as dens_mass		(Brief="Air mass density at std. cond.",Default=1.2938);
	numOfInlets			as Integer		(Brief="Number of inlet streams",Default=2);
	
	VARIABLES
in	Inlet(numOfInlets)		as strG;
out	Outlet				as gas_stream;

	EQUATIONS
	"Oil std vol. balance"
	Outlet.Qg*Outlet.Rv = sum(Inlet.Qg*Inlet.Rv);

	"Gas std vol. balance"
	Outlet.Qg = sum(Inlet.Qg);

	"Energy balance"
	Outlet.Qg*rho_AIRstd*Outlet.dg*Outlet.hG = 
		sum(Inlet.Qg*rho_AIRstd*Inlet.dg*Inlet.hG);

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	Outlet.Qg*Outlet.Rv*Outlet.d60G = 
		sum(Inlet.Qg*Inlet.Rv*Inlet.d60G);

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	Outlet.Qg*Outlet.Rv*(Outlet.TbnG/'degR')^(1/3) = 
		sum(Inlet.Qg*Inlet.Rv*(Inlet.TbnG/'degR')^(1/3));

	"Property mixing rule for gas specific gravity (std vol. balance)"
	Outlet.Qg*Outlet.dg = sum(Inlet.Qg*Inlet.dg);

	"Property mixing rule for Condensate/Gas yield (std. vol. balance)"
	Outlet.Qg*Outlet.Ycg = sum(Inlet.Qg*Inlet.Ycg);

	"Mechanical equilibrium"
	Inlet(1:numOfInlets).P = Outlet.P;
end

Model mixer3_gas
	PARAMETERS
	rho_AIRstd		as dens_mass	(Brief="Air mass density at std. cond.",Default=1.2938);

	VARIABLES
in	Inlet1			as strG;
in	Inlet2			as strG;
in	Inlet3			as strG;
out	Outlet			as gas_stream;

	EQUATIONS
	"Gas std vol. balance"
	Outlet.Qg = Inlet1.Qg + Inlet2.Qg + Inlet3.Qg;

	"Oil std vol. balance"
	Outlet.Qg*Outlet.Rv = Inlet1.Qg*Inlet1.Rv + Inlet2.Qg*Inlet2.Rv + Inlet3.Qg*Inlet3.Rv;

	"Energy balance"
	Outlet.hG = (Inlet1.Qg*Inlet1.dg*Inlet1.hG + Inlet2.Qg*Inlet2.dg*Inlet2.hG 
			+ Inlet3.Qg*Inlet3.dg*Inlet3.hG)/(Outlet.Qg*Outlet.dg);

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	Outlet.Qg*Outlet.Rv*Outlet.d60G = 
		Inlet1.Qg*Inlet1.Rv*Inlet1.d60G
		+ Inlet2.Qg*Inlet2.Rv*Inlet2.d60G
		+ Inlet3.Qg*Inlet3.Rv*Inlet3.d60G;

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	Outlet.Qg*Outlet.Rv*(Outlet.TbnG/'degR')^(1/3) = 
		Inlet1.Qg*Inlet1.Rv*(Inlet1.TbnG/'degR')^(1/3)
		+ Inlet2.Qg*Inlet2.Rv*(Inlet2.TbnG/'degR')^(1/3)
		+ Inlet3.Qg*Inlet3.Rv*(Inlet3.TbnG/'degR')^(1/3);

	"Property mixing rule fo gas specific gravity (std vol. balance)"
	Outlet.dg = (Inlet1.Qg*Inlet1.dg + Inlet2.Qg*Inlet2.dg + Inlet3.Qg*Inlet3.dg)/Outlet.Qg;

	"Property mixing rule for condensate/gas yield (std. vol. balance)"
	Outlet.Ycg = (Inlet1.Qg*Inlet1.Ycg + Inlet2.Qg*Inlet2.Ycg + Inlet3.Qg*Inlet3.Ycg)/Outlet.Qg;

	"Mechanical equilibrium"
	Inlet1.P = Outlet.P;
	Inlet2.P = Outlet.P;
	Inlet3.P = Outlet.P;
end

Model splitter_gas
	PARAMETERS
	numOfOutlets 			as Integer (Brief="Number of outlet streams",Lower=2,Default=2);
	
	VARIABLES
in	Inlet				as strG;
out	Outlet(numOfOutlets)	as strG;

	EQUATIONS
	"Gas phase std. vol. balance"
	sum(Outlet.Qg) = Inlet.Qg;

	"Equates of outlet streams for process variables"
	Outlet.hG		= Inlet.hG;
	Outlet.Rv		= Inlet.Rv;
	Outlet.Bg		= Inlet.Bg;
	Outlet.rhoG	= Inlet.rhoG;

	"Thermal equilibrium"
	Outlet.T		= Inlet.T;
	
	"Mechanical equilibrium"
	Outlet.P		= Inlet.P;
	
	"Equates of outlet streams for compositional variables"
	Outlet.d60G	= Inlet.d60G;
	Outlet.TbnG	= Inlet.TbnG;
	Outlet.dg		= Inlet.dg;
	Outlet.Ycg	= Inlet.Ycg;
end

Model splitter2_gas
	VARIABLES
in	Inlet	as strG;
out	Outlet1	as strG;
out	Outlet2	as strG;

	EQUATIONS
	"Gas phase std. vol. balance"
	Outlet1.Qg + Outlet2.Qg = Inlet.Qg;

	"Equates of outlet streams for process variables"
	Outlet1.hG		= Inlet.hG;
	Outlet1.Rv		= Inlet.Rv;
	Outlet1.Bg		= Inlet.Bg;
	Outlet1.rhoG		= Inlet.rhoG;

	Outlet2.hG		= Inlet.hG;	
	Outlet2.Rv		= Inlet.Rv;
	Outlet2.Bg		= Inlet.Bg;
	Outlet2.rhoG		= Inlet.rhoG;
	
	"Thermal equilibrium"
	Outlet1.T			= Inlet.T;
	Outlet2.T			= Inlet.T;
	
	"Mechanical equilibrium"
	Outlet1.P			= Inlet.P;
	Outlet2.P			= Inlet.P;
	
	"Equates of outlet streams for compositional variables"	
	Outlet1.d60G		= Inlet.d60G;
	Outlet1.TbnG		= Inlet.TbnG;
	Outlet1.dg		= Inlet.dg;
	Outlet1.Ycg		= Inlet.Ycg;

	Outlet2.d60G		= Inlet.d60G;
	Outlet2.TbnG		= Inlet.TbnG;
	Outlet2.dg		= Inlet.dg;
	Outlet2.Ycg		= Inlet.Ycg;
end

Model splitter2_gas_ctrl
	VARIABLES
in	Inlet	as strG;
out	Outlet1	as strG;
out	Outlet2	as strG;

in	qfrac	as fraction	(Brief="Std. vol. flow split fraction",Default=0.5);

	EQUATIONS	
	"Gas phase std. vol. balance"
	Outlet1.Qg + Outlet2.Qg = Inlet.Qg;

	"Gas phase std. vol. flow split"
	Outlet1.Qg = 0.5*(1+tanh((qfrac-1e-4)/1e-6))*qfrac*Inlet.Qg;

	"Equates of outlet streams for process variables"
	Outlet1.Rv	= Inlet.Rv;
	Outlet1.hG	= Inlet.hG;
	Outlet1.Bg	= Inlet.Bg;
	Outlet1.rhoG	= Inlet.rhoG;
	
	Outlet2.Rv	= Inlet.Rv;
	Outlet2.hG	= Inlet.hG;
	Outlet2.Bg	= Inlet.Bg;
	Outlet2.rhoG	= Inlet.rhoG;
	
	"Thermal equilibrium"
	Outlet1.T		= Inlet.T;
	Outlet2.T		= Inlet.T;
	
	"Mechanical equilibrium"
	Outlet2.P		= Inlet.P;
	
	"Equates of outlet streams for compositional variables"	
	Outlet1.d60G	= Inlet.d60G;
	Outlet1.TbnG	= Inlet.TbnG;
	Outlet1.dg	= Inlet.dg;
	Outlet1.Ycg	= Inlet.Ycg;

	Outlet2.d60G	= Inlet.d60G;
	Outlet2.TbnG	= Inlet.TbnG;
	Outlet2.dg	= Inlet.dg;
	Outlet2.Ycg	= Inlet.Ycg;
end

Model splitter2_gasliq
	VARIABLES
in	Inlet	as strGL;
out	Outlet1	as strGL;
out	Outlet2	as strGL;

	EQUATIONS
	"Gas phase std. vol. balance"
	Outlet1.Qg + Outlet2.Qg = Inlet.Qg;

	"Oil phase std. vol. balance"
	Outlet1.Qo + Outlet2.Qo = Inlet.Qo;

	"Equates of outlet streams for process variables"
	Outlet1.hO	= Inlet.hO;
	Outlet1.hG	= Inlet.hG;
	Outlet1.Rs	= Inlet.Rs;
	Outlet1.Rv	= Inlet.Rv;
	Outlet1.Bo	= Inlet.Bo;
	Outlet1.Bg	= Inlet.Bg;
	Outlet1.rhoL	= Inlet.rhoL;
	Outlet1.rhoG	= Inlet.rhoG;

	Outlet2.hO	= Inlet.hO;
	Outlet2.hG	= Inlet.hG;
	Outlet2.Rs	= Inlet.Rs;
	Outlet2.Rv	= Inlet.Rv;
	Outlet2.Bo	= Inlet.Bo;
	Outlet2.Bg	= Inlet.Bg;
	Outlet2.rhoL	= Inlet.rhoL;
	Outlet2.rhoG	= Inlet.rhoG;

	"Thermal equilibrium"
	Outlet1.T		= Inlet.T;
	Outlet2.T		= Inlet.T;

	"Mechanical equilibrium"
	Outlet1.P		= Inlet.P;
	Outlet2.P		= Inlet.P;

	"Equates of outlet streams for compositional variables"
	Outlet1.d60	= Inlet.d60;
	Outlet1.d60G	= Inlet.d60G;
	Outlet1.Tbn	= Inlet.Tbn;
	Outlet1.TbnG	= Inlet.TbnG;
	Outlet1.dg	= Inlet.dg;
	Outlet1.dgL	= Inlet.dgL;
	Outlet1.Ycg	= Inlet.Ycg;
	Outlet1.YcgL	= Inlet.YcgL;

	Outlet2.d60	= Inlet.d60;
	Outlet2.d60G	= Inlet.d60G;
	Outlet2.Tbn	= Inlet.Tbn;
	Outlet2.TbnG	= Inlet.TbnG;
	Outlet2.dg	= Inlet.dg;
	Outlet2.dgL	= Inlet.dgL;
	Outlet2.Ycg	= Inlet.Ycg;
	Outlet2.YcgL	= Inlet.YcgL;
end

Model splitter2_gasliq_ctrl
	VARIABLES
in	Inlet	as strGL;
out	Outlet1	as strGL;
out	Outlet2	as strGL;

in	qfrac	as fraction	(Brief="Std. vol. flow split fraction",Default=0.5);

	EQUATIONS	
	"Gas phase std. vol. balance"
	Outlet1.Qg + Outlet2.Qg = Inlet.Qg;

	"Oil phase std. vol. balance"
	Outlet1.Qo + Outlet2.Qo = Inlet.Qo;

	"Gas std. vol. flow split"
	Outlet1.Qg = 0.5*(1+tanh((qfrac-1e-4)/1e-6))*qfrac*Inlet.Qg;

	"Oil std. vol. flow split"
	Outlet1.Qo = 0.5*(1+tanh((qfrac-1e-4)/1e-6))*qfrac*Inlet.Qo;

	"Equates of outlet streams for process variables"
	Outlet1.hO	= Inlet.hO;
	Outlet1.hG	= Inlet.hG;
	Outlet1.Rs	= Inlet.Rs;
	Outlet1.Rv	= Inlet.Rv;
	Outlet1.Bo	= Inlet.Bo;
	Outlet1.Bg	= Inlet.Bg;
	Outlet1.rhoL	= Inlet.rhoL;
	Outlet1.rhoG	= Inlet.rhoG;

	Outlet2.hO	= Inlet.hO;
	Outlet2.hG	= Inlet.hG;
	Outlet2.Rs	= Inlet.Rs;
	Outlet2.Rv	= Inlet.Rv;
	Outlet2.Bo	= Inlet.Bo;
	Outlet2.Bg	= Inlet.Bg;
	Outlet2.rhoL	= Inlet.rhoL;
	Outlet2.rhoG	= Inlet.rhoG;

	"Thermal equilibrium"
	Outlet1.T		= Inlet.T;
	Outlet2.T		= Inlet.T;

	"Mechanical equilibrium"
	Outlet2.P		= Inlet.P;
	
	"Equates of outlet streams for compositional variables"
	Outlet1.d60	= Inlet.d60;
	Outlet1.d60G	= Inlet.d60G;
	Outlet1.Tbn	= Inlet.Tbn;
	Outlet1.TbnG	= Inlet.TbnG;
	Outlet1.dg	= Inlet.dg;
	Outlet1.dgL	= Inlet.dgL;
	Outlet1.Ycg	= Inlet.Ycg;
	Outlet1.YcgL	= Inlet.YcgL;

	Outlet2.d60	= Inlet.d60;
	Outlet2.d60G	= Inlet.d60G;
	Outlet2.Tbn	= Inlet.Tbn;
	Outlet2.TbnG	= Inlet.TbnG;
	Outlet2.dg	= Inlet.dg;
	Outlet2.dgL	= Inlet.dgL;
	Outlet2.Ycg	= Inlet.Ycg;
	Outlet2.YcgL	= Inlet.YcgL;
end
