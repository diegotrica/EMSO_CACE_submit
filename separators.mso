#This code was printed to .pdf format for submission.
#Copy the text to a .txt file and save as separators.mso to open at EMSO.

using "mbo_streams";

Model triphase_separator
	PARAMETERS
	pi			as constant     	(Brief="Pi number",Default=3.141592);
	g			as constant		(Brief="Gravity acceleration",Default=9.80665,Unit='m/s^2');
	rho_H2Ostd	as dens_mass		(Brief="Pure water mass density at std. cond.",Default=999.0054);
	rho_AIRstd	as dens_mass		(Brief="Air mass density at std. cond.",Default=1.2938);
	Pref			as pressure		(Brief="Reference pressure for std. cond.",DisplayUnit='kPa',Default=1);
	D			as length       	(Brief="Vessel diameter",Default=3.0);
	LCS			as length       	(Brief="Separation chamber (CS) length",Default=10.0);
	LCL     		as length       	(Brief="Lights chamber (CL) length",Default=2.0);
	Lweir   		as length       	(Brief="Weir length");
	hweir   		as length       	(Brief="Weir height",Default=1.5);
	V			as volume       	(Brief="Vessel total volume");	
	TOGinf		as positive		(Brief="Minimum TOG achieved parameter",Unit='ml/m^3',Default=20);
	tau			as time_sec		(Brief="TOG residence time decay",Default=0.166667);
	
	VARIABLES
in  Inlet			as str3ph;
out OutletL		as liquid_stream;
out OutletW		as water_stream;
out OutletG		as gas_stream;

	VLCSstd		as positive		(Brief="Light phase std. vol. hold-up in CS",Unit='m^3',Default=100);
	VLCLstd    	as positive		(Brief="Light phase std. vol. hold-up in CL",Unit='m^3',Default=20);
	VWCSstd    	as positive		(Brief="Water phase std. vol. hold-up in CS",Unit='m^3',Default=50);
	VGstd      	as positive		(Brief="Gas phase std. vol. hold-up",Unit='m^3',Default=5e3);
	BSWLCS		as fraction		(Brief="BSW at ligth Phase in CS",Default=0.5);
	E			as energy			(Brief="Energy hold-up",DisplayUnit='MJ',Default=5e6);
	LevelCS     	as length			(Brief="Total level in CS",Default=2.2);
	LevelWCS   	as length			(Brief="Water phase level in CS",Default=1.0);
	LevelLCS    	as length			(Brief="Light phase level in CS",Default=1.2);
	LevelCL    	as length		(Brief="Liquid level in CL",Default=0.7);
	Qweir   		as positive 		(Brief="Weir liquid std. vol. flow rate",Unit='m^3/d',Default=1e4);
	effWL		as fraction		(Brief="Water removal efficiency from light phase",Default=0.2);
	effOW		as fraction		(Brief="Oil removal efficiency from water Phase",Default=0.999);
	
	SET
	V = (LCS + LCL)*pi*(D^2)/4;
	Lweir = 2*sqrt(hweir*(D - hweir));

	EQUATIONS
	"Oil std. vol. balance at oil-emulsion (light) phase in separation chamber"
	diff(VLCSstd*(1-BSWLCS) + VGstd*OutletG.Rv) = 
		Inlet.Qf*(1-Inlet.BSW)*effOW + Inlet.Qg*Inlet.Rv 
		- Qweir*(1-BSWLCS) - OutletG.Qg*OutletG.Rv;

	"Gas std. vol. balance"
	diff((VLCSstd*(1-BSWLCS)+VLCLstd*(1-OutletL.BSW))*OutletL.Rs + VGstd) = 
		Inlet.Qf*(1-Inlet.BSW)*effOW*Inlet.Rs + Inlet.Qg
		- OutletG.Qg - OutletL.Qf*(1-OutletL.BSW)*OutletL.Rs;

	"Water std. vol. balance at oil-emulsion (light) phase in separation chamber"
	diff(VLCSstd*BSWLCS) = Inlet.Qf*Inlet.BSW*(1-effWL) 
		- Qweir*BSWLCS;

	"Water std. vol. balance at water phase in separation chamber"
	diff(VWCSstd) = Inlet.Qf*Inlet.BSW*effWL - OutletW.Qw;

	"Water salt mass balance in separation chamber"
	diff((VWCSstd+VLCSstd*BSWLCS)*OutletW.rho_Wstd*OutletW.ws) = Inlet.Qf*Inlet.BSW*Inlet.rho_Wstd*Inlet.ws
		- OutletW.Qw*OutletW.rho_Wstd*OutletW.ws - Qweir*BSWLCS*OutletW.rho_Wstd*OutletW.ws;

	"Height constraint in separation chamber"
	LevelCS = LevelWCS + LevelLCS;

	"Liquid volume hold-up in separation chamber"
	VWCSstd*OutletW.Bw + VLCSstd*((1-BSWLCS)*OutletL.Bo + BSWLCS*OutletW.Bw) 
		= LCS*(D^2)/4*(acos((1-2*LevelCS/D)) - (1-2*LevelCS/D)*sin(acos(1-2*LevelCS/D)*'rad'));

	"Water phase volume hold-up in separation chamber"
	VWCSstd*OutletW.Bw = 
		LCS*(D^2)/4*(acos((1-2*LevelWCS/D)) - (1-2*LevelWCS/D)*sin(acos(1-2*LevelWCS/D)*'rad'));

	"Liquid volume hold-up in lights chamber"
	VLCLstd*((1-OutletL.BSW)*OutletL.Bo + OutletL.BSW*OutletL.Bw) = 
		LCL*(D^2/4)*(acos((1-2*LevelCL/D)) - (1-2*LevelCL/D)*sin(acos(1-2*LevelCL/D)*'rad'));
	
	"Water removal efficiency from light phase"
	effWL = 0.5486 - 0.2675*(LevelWCS/'m') - 0.3626*(Inlet.Qf*(1-Inlet.BSW)*Inlet.Bo/'m^3/s') 
		+ 0.1356*(LevelWCS/'m')*(Inlet.Qf*(1-Inlet.BSW)*Inlet.Bo/'m^3/s')
		-0.0747*(LevelWCS/'m')^2 + 0.089*(Inlet.Qf*(1-Inlet.BSW)*Inlet.Bo/'m^3/s')^2;

	"TOG correlation for OutletW"
	OutletW.TOG = TOGinf + (1000*'ml/m^3'-TOGinf)*
		exp(-((VWCSstd*OutletW.Bw)/(Inlet.Qf*Inlet.BSW*Inlet.Bw))/tau);
	
	"Oil removal efficiency from water phase"
	Inlet.Qf*(1-Inlet.BSW)*effOW = Inlet.Qf*(1-Inlet.BSW) - OutletW.Qw*OutletW.TOG;

	"Weir std. vol. flow rate"
	Qweir*((1-BSWLCS)*OutletL.Bo + BSWLCS*OutletW.Bw) = 
		0.5*(1+tanh((hweir/'m'-LevelCL/'m')/1e-4))*0.5*(1+tanh((LevelCS/'m'-hweir/'m')/1e-4))*
			(24.88*sqrt(2*g)*(Lweir-0.2*(abs(LevelCS-hweir)))*(abs(LevelCS-hweir))^1.5)
		+ 0.5*(1+tanh((LevelCL/'m'-hweir/'m')/1e-4))*0.5*(1+tanh((LevelCS/'m'-LevelCL/'m')/1e-4))*
			(24.88*sqrt(2*g)*
				(2*sqrt(LevelCL*(D-LevelCL))-0.2*(abs(LevelCS-LevelCL)))*(abs(LevelCS-LevelCL))^1.5
			);

	"Oil std. vol. balance in lights chamber"
	diff(VLCLstd*(1-OutletL.BSW)) = Qweir*(1-BSWLCS) - OutletL.Qf*(1-OutletL.BSW);

	"Water std. vol. balance in lights chamber"
	diff(VLCLstd*OutletL.BSW) = Qweir*BSWLCS - OutletL.Qf*OutletL.BSW;

	"Water salt mass balance in lights chamber"
	diff(VLCLstd*OutletL.BSW*OutletL.rho_Wstd*OutletL.ws) = 
		Qweir*BSWLCS*OutletW.rho_Wstd*OutletW.ws - OutletL.Qf*OutletL.BSW*OutletL.rho_Wstd*OutletL.ws;

	"Volume constraint"
	V = VGstd*OutletG.Bg + VWCSstd*OutletW.Bw 
		+ VLCSstd*((1-BSWLCS)*OutletL.Bo + BSWLCS*OutletW.Bw) 
		+ VLCLstd*((1-OutletL.BSW)*OutletL.Bo + OutletL.BSW*OutletL.Bw);

	"Energy balance"
	diff(E) = 
		Inlet.Qf*((1-Inlet.BSW)*effOW*Inlet.d60*rho_H2Ostd*Inlet.hO + Inlet.BSW*Inlet.rho_Wstd*Inlet.hW)
		+ Inlet.Qg*Inlet.dg*rho_AIRstd*Inlet.hG
		- OutletL.Qf*
			((1-OutletL.BSW)*OutletL.d60*rho_H2Ostd*OutletL.hO + OutletL.BSW*OutletL.rho_Wstd*OutletL.hW)
		- OutletG.Qg*rho_AIRstd*OutletG.dg*OutletG.hG - OutletW.Qw*OutletW.rho_Wstd*OutletW.hW;
		
	"Energy hold-up"
	E = VLCSstd*((1-BSWLCS)*OutletL.d60*rho_H2Ostd*OutletL.hO + BSWLCS*OutletW.rho_Wstd*OutletW.hW)
		+ VLCLstd*
			((1-OutletL.BSW)*OutletL.d60*rho_H2Ostd*OutletL.hO + OutletL.BSW*OutletL.rho_Wstd*OutletL.hW)
		+ VWCSstd*OutletW.rho_Wstd*OutletW.hW + VGstd*OutletG.dg*rho_AIRstd*OutletG.hG - OutletG.P*V;

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	diff((VLCSstd*(1-BSWLCS)+VLCLstd*(1-OutletL.BSW))*OutletL.d60 + VGstd*OutletG.Rv*OutletG.d60G) = 
		Inlet.Qf*(1-Inlet.BSW)*effOW*Inlet.d60 + Inlet.Qg*Inlet.Rv*Inlet.d60G
		- OutletL.Qf*(1-OutletL.BSW)*OutletL.d60 - OutletG.Qg*OutletG.Rv*OutletG.d60G;

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	diff((VLCSstd*(1-BSWLCS)+VLCLstd*(1-OutletL.BSW))*(OutletL.Tbn/'degR')^(1/3) 
		+ VGstd*OutletG.Rv*(OutletG.TbnG/'degR')^(1/3)
		) = Inlet.Qf*(1-Inlet.BSW)*effOW*(Inlet.Tbn/'degR')^(1/3) 
			+ Inlet.Qg*Inlet.Rv*(Inlet.TbnG/'degR')^(1/3)
			- OutletL.Qf*(1-OutletL.BSW)*(OutletL.Tbn/'degR')^(1/3) 
			- OutletG.Qg*OutletG.Rv*(OutletG.TbnG/'degR')^(1/3);

	"Property mixing rule for gas specific gravity (std vol. balance)"
	diff((VLCSstd*(1-BSWLCS)+VLCLstd*(1-OutletL.BSW))*OutletL.Rs*OutletL.dg + VGstd*OutletG.dg) = 
		Inlet.Qf*(1-Inlet.BSW)*effOW*Inlet.Rs*Inlet.dgL + Inlet.Qg*Inlet.dg
		- OutletL.Qf*(1-OutletL.BSW)*OutletL.Rs*OutletL.dg - OutletG.Qg*OutletG.dg;

	"Property mixing rule for condensate/gas yield (std. vol. balance)"
	diff((VLCSstd*(1-BSWLCS)+VLCLstd*(1-OutletL.BSW))*OutletL.Rs*OutletL.Ycg + VGstd*OutletG.Ycg) = 
		Inlet.Qf*(1-Inlet.BSW)*effOW*Inlet.Rs*Inlet.YcgL + Inlet.Qg*Inlet.Ycg
		- OutletL.Qf*(1-OutletL.BSW)*OutletL.Rs*OutletL.Ycg - OutletG.Qg*OutletG.Ycg;

	"Solution gas/oil ratio"
	OutletL.Rs/'ft^3/bbl' = 
		0.0362*(OutletG.dg*(1 + 5.912e-5*(141.5/OutletL.d60-131.5)*(40*1.8+32)*ln(14.7/114.7)))
		*(OutletG.P/'psi')^1.0937*exp(25.724*(141.5/OutletL.d60-131.5)/(OutletL.T/'degR'));

	"Vaporized oil/gas ratio"
	OutletG.Rv/OutletG.Ycg = (4.7e-7*(OutletG.P/'psi')^2 - 1.4e-3*(OutletG.P/'psi') + 2.3)*
		exp(-5.438e-3*OutletG.dg)*exp(-6.8e8*OutletL.d60/(OutletG.T/'degR')^3);

	"Equilibrium gas/liq relation: oil specific gravity"
	OutletG.d60G/OutletL.d60 = (Pref/OutletG.P)^0.010*exp(100/450 -100/(OutletG.T/'K'));

	"Equilibrium gas/liq relation: oil normal boiling point"
	((OutletG.TbnG/'degR')^(1/3)/OutletG.d60G) = ((OutletL.Tbn/'degR')^(1/3)/OutletL.d60);

	"Equilibrium gas/liq relation: gas specific gravity"
	OutletG.dg/OutletL.dg = (Pref/OutletG.P)^0.005*exp(600/450 - 600/(OutletG.T/'K'));

	"Equilibrium gas/liq relation: condensate/gas yield"
	OutletG.Ycg/OutletL.Ycg = (Pref/OutletG.P)^0.005*exp(600/450 - 600/(OutletG.T/'K'));
	
	"Equates of water outlet stream compositional variables"
	OutletW.d60 = OutletL.d60;
	OutletW.Tbn = OutletL.Tbn;
	
	"Thermal equilibrium"
	OutletL.T = OutletG.T;
	OutletW.T = OutletG.T;
	
	"Mechanical equilibrium"
	Inlet.P = OutletG.P;
	OutletL.P = OutletG.P;
	OutletW.P = OutletG.P;
end

Model degasser
	PARAMETERS
	pi			as constant     	(Brief="Pi number",Default=3.141592);
	rho_H2Ostd	as dens_mass		(Brief="Pure water mass density at std. cond.",Default=999.0054);
	rho_AIRstd	as dens_mass		(Brief="Air mass density at std. cond.",Default=1.2938);
	Pref			as pressure		(Brief="Reference pressure for std. cond.",DisplayUnit='kPa',Default=1);
	D			as length       	(Brief="Vessel diameter",Default=2.5);
	L			as length       	(Brief="Vessel length",Default=10.0);
	V			as volume       	(Brief="Total Vessel volume");
	
	VARIABLES
in  Inlet			as str3ph;
out OutletG		as gas_stream;
out	OutletL		as liquid_stream;

	VLstd		as positive		(Brief="Total liquid std. vol. hold-up",Unit='m^3',Default=25);
	VGstd     	as positive		(Brief="Gas phase std. vol. hold-up",Unit='m^3',Default=5e3);
	E			as energy			(Brief="Energy hold-up",DisplayUnit='MJ',Default=5e6);
	Level 		as length			(Brief="Liquid level",Default=1.2);
	
	SET
	V = L*pi*(D^2)/4;

	EQUATIONS
	"Oil std. vol. Balance"
	diff(VLstd*(1-OutletL.BSW) + VGstd*OutletG.Rv) = Inlet.Qf*(1-Inlet.BSW) + Inlet.Qg*Inlet.Rv
		- OutletL.Qf*(1-OutletL.BSW) - OutletG.Qg*OutletG.Rv;

	"Gas std. vol. Balance"
	diff(VLstd*(1-OutletL.BSW)*OutletL.Rs + VGstd) = Inlet.Qf*(1-Inlet.BSW)*Inlet.Rs + Inlet.Qg
		- OutletL.Qf*(1-OutletL.BSW)*OutletL.Rs - OutletG.Qg;

	"Water std. vol. Balance"
	diff(VLstd*OutletL.BSW) = Inlet.Qf*Inlet.BSW - OutletL.Qf*OutletL.BSW;

	"Water salt mass balance"
	diff(VLstd*OutletL.BSW*OutletL.rho_Wstd*OutletL.ws) = 
		Inlet.Qf*Inlet.BSW*Inlet.rho_Wstd*Inlet.ws - OutletL.Qf*OutletL.BSW*OutletL.rho_Wstd*OutletL.ws;

	"Volume constraint"
	V = VGstd*OutletG.Bg + VLstd*((1-OutletL.BSW)*OutletL.Bo + OutletL.BSW*OutletL.Bw);
	
	"Liquid volume hold-up"
	VLstd*((1-OutletL.BSW)*OutletL.Bo + OutletL.BSW*OutletL.Bw)
		= L*(D^2)/4*(acos((1-2*Level/D)) - (1-2*Level/D)*sin(acos(1-2*Level/D)*'rad'));

	"Energy balance"
	diff(E) = Inlet.Qf*((1-Inlet.BSW)*Inlet.d60*rho_H2Ostd*Inlet.hO + Inlet.BSW*Inlet.rho_Wstd*Inlet.hW)
				+ Inlet.Qg*Inlet.dg*rho_AIRstd*Inlet.hG
		  - OutletL.Qf*((1-OutletL.BSW)*OutletL.d60*rho_H2Ostd*OutletL.hO 
				+ OutletL.BSW*OutletL.rho_Wstd*OutletL.hW)
		  - OutletG.Qg*OutletG.dg*rho_AIRstd*OutletG.hG;

	"Total Energy hold-up"
	E = VLstd*((1-OutletL.BSW)*OutletL.d60*rho_H2Ostd*OutletL.hO + OutletL.BSW*OutletL.rho_Wstd*OutletL.hW)
			+ VGstd*OutletG.dg*rho_AIRstd*OutletG.hG - OutletG.P*V;

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	diff(VLstd*(1-OutletL.BSW)*OutletL.d60 + VGstd*OutletG.Rv*OutletG.d60G) = 
		Inlet.Qf*(1-Inlet.BSW)*Inlet.d60 + Inlet.Qg*Inlet.Rv*Inlet.d60G
		- OutletL.Qf*(1-OutletL.BSW)*OutletL.d60 - OutletG.Qg*OutletG.Rv*OutletG.d60G;

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	diff(
		VLstd*(1-OutletL.BSW)*(OutletL.Tbn/'degR')^(1/3) + VGstd*OutletG.Rv*(OutletG.TbnG/'degR')^(1/3)
		) = Inlet.Qf*(1-Inlet.BSW)*(Inlet.Tbn/'degR')^(1/3) + Inlet.Qg*Inlet.Rv*(Inlet.TbnG/'degR')^(1/3)
		- OutletL.Qf*(1-OutletL.BSW)*(OutletL.Tbn/'degR')^(1/3) 
		- OutletG.Qg*OutletG.Rv*(OutletG.TbnG/'degR')^(1/3);

	"Property mixing rule for gas specific gravity (std vol. balance)"
	diff(VLstd*(1-OutletL.BSW)*OutletL.Rs*OutletL.dg + VGstd*OutletG.dg) = 
		Inlet.Qf*(1-Inlet.BSW)*Inlet.Rs*Inlet.dgL + Inlet.Qg*Inlet.dg
		- OutletL.Qf*(1-OutletL.BSW)*OutletL.Rs*OutletL.dg - OutletG.Qg*OutletG.dg;

	"Property mixing rule for condensate/gas yield (std. vol. balance)"
	diff(VLstd*(1-OutletL.BSW)*OutletL.Rs*OutletL.Ycg + VGstd*OutletG.Ycg) = 
		Inlet.Qf*(1-Inlet.BSW)*Inlet.Rs*Inlet.YcgL + Inlet.Qg*Inlet.Ycg
		- OutletL.Qf*(1-OutletL.BSW)*OutletL.Rs*OutletL.Ycg - OutletG.Qg*OutletG.Ycg;

	"Solution gas/oil ratio"
	OutletL.Rs/'ft^3/bbl' = 
		0.0362*(OutletG.dg*(1 + 5.912e-5*(141.5/OutletL.d60-131.5)*(40*1.8+32)*ln(14.7/114.7)))
		*(OutletG.P/'psi')^1.0937*exp(25.724*(141.5/OutletL.d60-131.5)/(OutletL.T/'degR'));

	"Vaporized oil/gas ratio"
	OutletG.Rv/OutletG.Ycg = (4.7e-7*(OutletG.P/'psi')^2 - 1.4e-3*(OutletG.P/'psi') + 2.3)*
		exp(-5.438e-3*OutletG.dg)*exp(-6.8e8*OutletL.d60/(OutletG.T/'degR')^3);

	"Equilibrium gas/liq relation: oil specific gravity"
	OutletG.d60G/OutletL.d60 = (Pref/OutletG.P)^0.010*exp(100/450 -100/(OutletG.T/'K'));

	"Equilibrium gas/liq relation: oil normal boiling point"
	((OutletG.TbnG/'degR')^(1/3)/OutletG.d60G) = ((OutletL.Tbn/'degR')^(1/3)/OutletL.d60);

	"Equilibrium gas/liq relation: gas specific gravity"
	OutletG.dg/OutletL.dg = (Pref/OutletG.P)^0.005*exp(600/450 - 600/(OutletG.T/'K'));

	"Equilibrium gas/liq relation: condensate/gas yield"
	OutletG.Ycg/OutletL.Ycg = (Pref/OutletG.P)^0.005*exp(600/450 - 600/(OutletG.T/'K'));
	
	"Thermal equilibrium"
	OutletL.T = OutletG.T;
	
	"Mechanical equilibrium"
	Inlet.P = OutletG.P;
	OutletL.P = OutletG.P;
end

Model oil_treater
	PARAMETERS
	pi			as constant     	(Brief="Pi number",Default=3.141592);
	rho_H2Ostd	as dens_mass		(Brief="Pure water mass density at std. cond.",Default=999.0054);
	rho_AIRstd	as dens_mass		(Brief="Air mass density at std. cond.",Default=1.2938);
	Tref			as temperature		(Brief="Reference temperature for std. cond.",Default=288.70556);
	D			as length       	(Brief="Vessel diameter",Default=4);
	L			as length       	(Brief="Vessel length",Default=12);
	V			as volume       	(Brief="Total vessel volume");	
	TRL50		as time_sec		(Brief="Residence time for 50% BSW removal",Default=300);
	b			as positive		(Brief="effWL 2nd parameter correlation",Default=4);
	TOGinf		as positive		(Brief="Minimum TOG achieved parameter",Unit='ml/m^3',Default=20);
	tau			as time_sec		(Brief="TOG residence time decay",Default=500);
	
	VARIABLES
in	Inlet		as strL;
out OutletL		as liquid_stream;
out OutletW		as water_stream;

	VLstd		as positive		(Brief="Total light phase std. vol. hold-up",Unit='m^3',Default=150);
	VWstd		as positive		(Brief="Total water std. vol. hold-up",Unit='m^3',Default=150);
	E			as energy			(Brief="Energy hold-up",DisplayUnit='MJ',Default=5e6);
	LevelL 		as length			(Brief="Liquid level",Default=1.2);
	LevelW 		as length			(Brief="Water level",Default=1.2);
	effWL		as fraction		(Brief="Water removal efficiency from light phase",Default=0.2);
	effOW		as fraction		(Brief="Oil removal efficiency from water phase",Default=0.999);
	TRL 			as time_sec		(Brief="light phase residence time",Lower=1e-6,Default=300);
	dBodT		as Real			(Unit='1/K',Default=9.5e-4);
	dBwdT		as Real			(Unit='1/K',Default=-6e-4);
	dEdT			as Real			(Unit='MJ/K',Default=500);
	
	SET
	V = L*pi*(D^2)/4;
	
	EQUATIONS
	"Gas std. vol. balance"
	OutletL.Rs = Inlet.Rs;

	"Water std. vol. balance at water phase"
	diff(VWstd) = Inlet.Qf*Inlet.BSW*effWL - OutletW.Qw;
	
	"Water salt mass balance at water phase"
	diff(VWstd*OutletW.rho_Wstd*OutletW.ws) = Inlet.Qf*Inlet.BSW*effWL*Inlet.rho_Wstd*Inlet.ws
		- OutletW.Qw*OutletW.rho_Wstd*OutletW.ws;

	"Water salt content constraint"
	OutletL.ws = OutletW.ws;

	"Height constraint"
	D = LevelW + LevelL;

	"Water phase volume hold-up"
	VWstd*OutletL.Bw = L*(D^2)/4*(acos((1-2*LevelW/D)) - (1-2*LevelW/D)*sin(acos(1-2*LevelW/D)*'rad'));

	"Volume constraint"
	V = VWstd*OutletL.Bw + VLstd*((1-OutletL.BSW)*OutletL.Bo + OutletL.BSW*OutletL.Bw);
	
	"Relation between BSW and residence time for light phase"
	OutletL.BSW = Inlet.BSW/(1+(TRL/TRL50)^b);	

	"Oil residence time at light phase"
	VLstd*(1-OutletL.BSW)*OutletL.Bo = TRL*Inlet.Qf*(1-Inlet.BSW)*Inlet.Bo;
	
	"Water Removal Efficiency from light phase"
	effWL*Inlet.Qf*Inlet.BSW = Inlet.Qf*Inlet.BSW - OutletL.Qf*OutletL.BSW;
	
	"TOG correlation for OutletW"
	OutletW.TOG = TOGinf + (1000*'ml/m^3'-TOGinf)*
		exp(-((VWstd*OutletL.Bw)/(Inlet.Qf*Inlet.BSW*Inlet.Bw))/tau);

	"Oil removal efficiency from water phase"
	Inlet.Qf*(1-Inlet.BSW)*effOW = Inlet.Qf*(1-Inlet.BSW) - OutletW.Qw*OutletW.TOG;
	
	"Energy balance"
	diff(E) = 
		Inlet.Qf*((1-Inlet.BSW)*effOW*Inlet.d60*rho_H2Ostd*Inlet.hO + Inlet.BSW*Inlet.rho_Wstd*Inlet.hW)
		- OutletL.Qf*
			((1-OutletL.BSW)*OutletL.d60*rho_H2Ostd*OutletL.hO + OutletL.BSW*OutletL.rho_Wstd*OutletL.hW)
		- OutletW.Qw*OutletW.rho_Wstd*OutletW.hW;
	
	"Energy hold-up"
	E = VLstd*((1-OutletL.BSW)*OutletL.d60*rho_H2Ostd*OutletL.hO + OutletL.BSW*OutletL.rho_Wstd*OutletL.hW) 
		+ VWstd*OutletW.rho_Wstd*OutletW.hW - OutletL.P*V;

	"Volume change rate constraint (degasser liquid outlet gravity flow constraint)"
	Inlet.Qf*(OutletL.Bo*(1-Inlet.BSW)*effOW + OutletW.Bw*Inlet.BSW) 
	+ (VLstd*((1-OutletL.BSW)*dBodT/dEdT + OutletL.BSW*dBwdT/dEdT) + VWstd*dBwdT/dEdT)*diff(E) = 
		OutletL.Qf*(OutletL.Bo*(1-OutletL.BSW) + OutletW.Bw*OutletL.BSW) + OutletW.Qw*OutletW.Bw;

	"dBo/dT"	#with Bo by VASQUEZ & BEGGS (1980)
	dBodT*'degR' = (1.751e-5 - 1.811e-8*(OutletL.Rs/'ft^3/bbl'))*
		(141.5/OutletL.d60-131.5)/
			(OutletL.dg*(1+5.912e-5*(141.5/OutletL.d60-131.5)*(40*1.8+32)*ln(14.7/114.7)));

	"dBw/dT"	#with by McCAIN Jr. (1990)
	dBwdT*'degR'*(1+OutletW.DVWT) = 
		- (1.95301e-9*(OutletL.P/'psi') + 1.72834e-13*(OutletL.P/'psi')^2)
		- (1.33391e-4 + 2*5.50654e-7*(OutletW.T/'degR'-459.67))*OutletL.Bw;

	"dE/dT"		#with Cpw by RAMALIMGAM and Cpo by API-TDB
	dEdT = VLstd*(1-OutletL.BSW)*OutletL.d60*rho_H2Ostd*(
		(-1.17126+(0.023722+0.024907*OutletL.d60)*((OutletL.Tbn/'degR')^(1/3)/OutletL.d60) 
				+ (1.14982-0.046535*((OutletL.Tbn/'degR')^(1/3)/OutletL.d60))/OutletL.d60)
			+ (1/2)*1e-4*(1+0.82463*((OutletL.Tbn/'degR')^(1/3)/OutletL.d60))*(1.12172-0.27634/OutletL.d60)*
				(707.67^2-(Tref/'degR')^2)/(707.67-(Tref/'degR'))
			- (1/3)*1e-8*(1+0.82463*((OutletL.Tbn/'degR')^(1/3)/OutletL.d60))*(2.9027-0.70958/OutletL.d60)*
				(707.67^3-(Tref/'degR')^3)/(707.67-(Tref/'degR'))
		)*'Btu/lb/degR'
		+ (VLstd*OutletL.BSW + VWstd)*OutletW.rho_Wstd*(
			4.180 + (OutletW.rhoW/'kg/m^3')*OutletW.ws*
			(-4.396e-3+4.8e-6*(OutletW.rhoW/'kg/m^3')*OutletW.ws)
			)*'kJ/kg/K';

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	diff(VLstd*(1-OutletL.BSW)*OutletL.d60) = 
		Inlet.Qf*(1-Inlet.BSW)*effOW*Inlet.d60
		- OutletL.Qf*(1-OutletL.BSW)*OutletL.d60;

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	diff(VLstd*(1-OutletL.BSW)*(OutletL.Tbn/'degR')^(1/3)) = 
		Inlet.Qf*(1-Inlet.BSW)*effOW*(Inlet.Tbn/'degR')^(1/3)
		- OutletL.Qf*(1-OutletL.BSW)*(OutletL.Tbn/'degR')^(1/3);
	
	"Equates of liquid outlet stream compositional variables"
	OutletL.dg = Inlet.dg;
	OutletL.Ycg = Inlet.Ycg;
	
	"Equates of water outlet stream compositional variables"
	OutletW.d60 = OutletL.d60;
	OutletW.Tbn = OutletL.Tbn;
	
	"Thermal equilibrium"
	OutletL.T = OutletW.T;
	
	"Mechanical equilibrium"
	Inlet.P = OutletL.P;
	OutletW.P = OutletL.P;
end

Model gasliq_separator
	PARAMETERS
	pi			as constant     	(Brief="Pi number",Default=3.141592);
	R			as constant     	(Brief="Ideal gas constant",Default=8.31447,Unit='J/mol/K');
	rho_H2Ostd	as dens_mass		(Brief="Pure water mass density at std. cond.",Default=999.0054);
	rho_AIRstd	as dens_mass		(Brief="Air mass density at std. cond.",Default=1.2938);
	Pref			as pressure		(Brief="Reference pressure for std. cond.",DisplayUnit='kPa',Default=1);
	D			as length      	(Brief="Scrubber diameter",Default=2.5);
	H			as length       	(Brief="Scrubber heigth",Default=6.125);
	V			as volume       	(Brief="Total volume");
	
	VARIABLES
in  Inlet			as strGL;
out OutletG		as gas_stream;
out OutletL		as condensate_stream;

	VLstd		as positive		(Brief="Total liquid std. vol. hold-up",Unit='m^3',Default=10);
	VGstd    	as positive		(Brief="Gas phase std. vol. hold-up",Unit='m^3',Default=1e3);
	E			as energy			(Brief="Energy hold-up",Default=5e6);
	Level 		as length			(Brief="Liquid level",Default=0.75);

	SET
	V = H*pi*(D^2)/4;

	EQUATIONS
	"Oil std. vol. balance"
	diff(VLstd) = Inlet.Qo - OutletL.Qf;

	"Gas std. vol. balance"
	diff(VGstd) = Inlet.Qg - OutletG.Qg;

	"Volume Constraint"
	V = VGstd*OutletG.Bg + VLstd*OutletL.Bo;

	"Liquid volume hold-up"
	VLstd*OutletL.Bo = Level * pi*(D^2)/4;

	"Energy balance"
	diff(E) = Inlet.Qg*Inlet.dg*rho_AIRstd*Inlet.hG - OutletG.Qg*OutletG.dg*rho_AIRstd*OutletG.hG;

	"Energy hold-up"
	E = VGstd*OutletG.dg*rho_AIRstd*OutletG.hG - OutletG.P*VGstd*OutletG.Bg;

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	diff(VGstd*OutletG.Rv*OutletG.d60G) = 
		Inlet.Qg*Inlet.Rv*Inlet.d60G - OutletG.Qg*OutletG.Rv*OutletG.d60G;

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	diff(VGstd*OutletG.Rv*(OutletG.TbnG/'degR')^(1/3)) = 
		Inlet.Qg*Inlet.Rv*(Inlet.TbnG/'degR')^(1/3) - OutletG.Qg*OutletG.Rv*(OutletG.TbnG/'degR')^(1/3);

	"Property mixing rule for gas specific gravity (std vol. balance)"
	diff(VGstd*OutletG.dg) = Inlet.Qg*Inlet.dg - OutletG.Qg*OutletG.dg;

	"Property mixing rule for condensate/gas yield (std. vol. balance)"
	diff(VGstd*OutletG.Ycg) = Inlet.Qg*Inlet.Ycg - OutletG.Qg*OutletG.Ycg;

	"Solution gas/oil ratio"
	OutletL.Rs/'ft^3/bbl' = 
		0.0362*(OutletG.dg*(1 + 5.912e-5*(141.5/OutletL.d60-131.5)*(40*1.8+32)*ln(14.7/114.7)))
		*(OutletG.P/'psi')^1.0937*exp(25.724*(141.5/OutletL.d60-131.5)/(OutletL.T/'degR'));

	"Vaporized oil/gas ratio"
	OutletG.Rv/OutletG.Ycg = (4.7e-7*(OutletG.P/'psi')^2 - 1.4e-3*(OutletG.P/'psi') + 2.3)*
		exp(-5.438e-3*OutletG.dg)*exp(-6.8e8*OutletL.d60/(OutletG.T/'degR')^3);

	"Equilibrium gas/liq relation: oil specific gravity"
	OutletG.d60G/OutletL.d60 = (Pref/OutletG.P)^0.010*exp(100/450 -100/(OutletG.T/'K'));

	"Equilibrium gas/liq relation: oil normal boiling point"
	((OutletG.TbnG/'degR')^(1/3)/OutletG.d60G) = ((OutletL.Tbn/'degR')^(1/3)/OutletL.d60);

	"Equilibrium gas/liq relation: gas specific gravity"
	OutletG.dg/OutletL.dg = (Pref/OutletG.P)^0.005*exp(600/450 - 600/(OutletG.T/'K'));

	"Equilibrium gas/liq relation: condensate/gas yield"
	OutletG.Ycg/OutletL.Ycg = (Pref/OutletG.P)^0.005*exp(600/450 - 600/(OutletG.T/'K'));

	"Thermal equilibrium"
	OutletL.T = OutletG.T;
	
	"Mechanical equilibrium"
	Inlet.P = OutletG.P;
	OutletL.P = OutletG.P;
end

Model scrubber_gas
	PARAMETERS
	pi			as constant    	(Brief="Pi number",Default=3.141592);
	rho_AIRstd	as dens_mass		(Brief="Air mass density at std. cond.",Default=1.2938);
	D			as length      	(Brief="Scrubber diameter",Default=2.5);
	H			as length       	(Brief="Scrubber heigth",Default=6.125);
	V			as volume       	(Brief="Total volume");
	
	VARIABLES
in  InletG    	as strG;
in  InletSurge 	as strG;
out OutletG		as gas_stream;

	VGstd    	as positive		(Brief="Gas phase std. vol. hold-up",Unit='m^3',Default=1e3);
	E			as energy			(Brief="Energy hold-up",Default=5e6);
	
	SET
	V = H*pi*(D^2)/4;

	EQUATIONS
	"Gas phase std. vol. balance"
	diff(VGstd) = InletG.Qg + InletSurge.Qg - OutletG.Qg;

	"Oil std. vol. balance"
	diff(VGstd*OutletG.Rv) = InletG.Qg*InletG.Rv + 
		InletSurge.Qg*InletSurge.Rv - OutletG.Qg*OutletG.Rv;

	"Volume Constraint"
	V = VGstd*OutletG.Bg;

	"Energy balance"
	diff(E) = InletG.Qg*InletG.dg*rho_AIRstd*InletG.hG
		+ InletSurge.Qg*InletSurge.dg*rho_AIRstd*InletSurge.hG
		- OutletG.Qg*OutletG.dg*rho_AIRstd*OutletG.hG;
	
	"Energy hold-up"
	E = VGstd*OutletG.dg*rho_AIRstd*OutletG.hG - OutletG.P*V;

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	diff(VGstd*OutletG.Rv*OutletG.d60G) = InletG.Qg*InletG.Rv*InletG.d60G
		+ InletSurge.Qg*InletSurge.Rv*InletSurge.d60G
		- OutletG.Qg*OutletG.Rv*OutletG.d60G;

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	diff(VGstd*OutletG.Rv*(OutletG.TbnG/'degR')^(1/3)) = InletG.Qg*InletG.Rv*(InletG.TbnG/'degR')^(1/3)
		+ InletSurge.Qg*InletSurge.Rv*(InletSurge.TbnG/'degR')^(1/3)
		- OutletG.Qg*OutletG.Rv*(OutletG.TbnG/'degR')^(1/3);

	"Property mixing rule for gas specific gravity (std vol. balance)"
	diff(VGstd*OutletG.dg) = InletG.Qg*InletG.dg 
		+ InletSurge.Qg*InletSurge.dg 
		- OutletG.Qg*OutletG.dg;

	"Property mixing rule for Condensate/Gas yield (std. vol. balance)"
	diff(VGstd*OutletG.Ycg) = InletG.Qg*InletG.Ycg 
		+ InletSurge.Qg*InletSurge.Ycg 
		- OutletG.Qg*OutletG.Ycg;
	
	"Mechanical equilibrium"
	InletG.P = OutletG.P;
	InletG.P = InletSurge.P;
end

Model scrubber_gasliq
	PARAMETERS
	pi			as constant     	(Brief="Pi number",Default=3.141592);
	R			as constant     	(Brief="Ideal Gas Constant",Default=8.31447,Unit='J/mol/K');
	rho_H2Ostd	as dens_mass		(Brief="Pure water mass density at std. cond.",Default=999.0054);
	rho_AIRstd	as dens_mass		(Brief="Air mass density at std. cond.",Default=1.2938);
	Pref			as pressure		(Brief="Reference pressure for std. cond.",DisplayUnit='kPa',Default=1);
	D			as length       	(Brief="Scrubber diameter",Default=2.5);
	H			as length       	(Brief="Scrubber heigth",Default=6.125);
	V			as volume       	(Brief="Total volume");
	
	VARIABLES
in  InletG    	as strGL;
in  InletSurge 	as strGL;
in	InletL		as str2ph;
out OutletG		as gas_stream;
out OutletL		as condensate_stream;

	VLstd		as positive		(Brief="Total liquid std. vol. hold-up",Unit='m^3',Default=10);
	VGstd    	as positive		(Brief="Gas phase std. vol. hold-up",Unit='m^3',Default=1e3);
	E			as energy			(Brief="Energy hold-up",Default=5e6);
	Level 		as length			(Brief="Liquid level",Default=0.75);

	SET
	V = H*pi*(D^2)/4;

	EQUATIONS
	"Oil std. vol. balance"
	diff(VLstd) = InletG.Qo + InletSurge.Qo + InletL.Qf - OutletL.Qf;

	"Gas std. vol. balance"
	diff(VGstd) = InletG.Qg + InletSurge.Qg + InletL.Qg - OutletG.Qg;

	"Volume Constraint"
	V = VGstd*OutletG.Bg + VLstd*OutletL.Bo;

	"Liquid volume hold-up"
	VLstd*OutletL.Bo = Level * pi*(D^2)/4;

	"Energy balance"
	diff(E) = InletG.Qg*InletG.dg*rho_AIRstd*InletG.hG
		+ InletSurge.Qg*InletSurge.dg*rho_AIRstd*InletSurge.hG
		+ InletL.Qg*InletL.dg*rho_AIRstd*InletL.hG
		- OutletG.Qg*OutletG.dg*rho_AIRstd*OutletG.hG;

	"Energy hold-up"
	E = VGstd*OutletG.dg*rho_AIRstd*OutletG.hG - OutletG.P*VGstd*OutletG.Bg;

	"Property mixing rule for oil specific gravity (std. vol. balance)"
	diff(VGstd*OutletG.Rv*OutletG.d60G) = 
		InletG.Qg*InletG.Rv*InletG.d60G
		+ InletSurge.Qg*InletSurge.Rv*InletSurge.d60G
		+ InletL.Qg*InletL.Rv*InletL.d60G
		- OutletG.Qg*OutletG.Rv*OutletG.d60G;

	"Property mixing rule for Tbn by means of Watson K-factor (std. vol. balance)"
	diff(VGstd*OutletG.Rv*(OutletG.TbnG/'degR')^(1/3)) = 
		InletG.Qg*InletG.Rv*(InletG.TbnG/'degR')^(1/3)
		+ InletSurge.Qg*InletSurge.Rv*(InletSurge.TbnG/'degR')^(1/3)
		+ InletL.Qg*InletL.Rv*(InletL.TbnG/'degR')^(1/3)
		- OutletG.Qg*OutletG.Rv*(OutletG.TbnG/'degR')^(1/3);

	"Property mixing rule for gas specific gravity (std vol. balance)"
	diff(VGstd*OutletG.dg) = 
		InletG.Qg*InletG.dg
		+ InletSurge.Qg*InletSurge.dg
		+ InletL.Qg*InletL.dg
		- OutletG.Qg*OutletG.dg;

	"Property mixing rule for condensate/gas yield (std. vol. balance)"
	diff(VGstd*OutletG.Ycg) = 
		InletG.Qg*InletG.Ycg
		+ InletSurge.Qg*InletSurge.Ycg
		+ InletL.Qg*InletL.Ycg
		- OutletG.Qg*OutletG.Ycg;

	"Solution gas/oil ratio"
	OutletL.Rs/'ft^3/bbl' = 
		0.0362*(OutletG.dg*(1 + 5.912e-5*(141.5/OutletL.d60-131.5)*(40*1.8+32)*ln(14.7/114.7)))
		*(OutletG.P/'psi')^1.0937*exp(25.724*(141.5/OutletL.d60-131.5)/(OutletL.T/'degR'));

	"Vaporized oil/gas ratio"
	OutletG.Rv/OutletG.Ycg = (4.7e-7*(OutletG.P/'psi')^2 - 1.4e-3*(OutletG.P/'psi') + 2.3)*
		exp(-5.438e-3*OutletG.dg)*exp(-6.8e8*OutletL.d60/(OutletG.T/'degR')^3);

	"Equilibrium gas/liq relation: oil specific gravity"
	OutletG.d60G/OutletL.d60 = (Pref/OutletG.P)^0.010*exp(100/450 -100/(OutletG.T/'K'));

	"Equilibrium gas/liq relation: oil normal boiling point"
	((OutletG.TbnG/'degR')^(1/3)/OutletG.d60G) = ((OutletL.Tbn/'degR')^(1/3)/OutletL.d60);

	"Equilibrium gas/liq relation: gas specific gravity"
	OutletG.dg/OutletL.dg = (Pref/OutletG.P)^0.005*exp(600/450 - 600/(OutletG.T/'K'));

	"Equilibrium gas/liq relation: condensate/gas yield"
	OutletG.Ycg/OutletL.Ycg = (Pref/OutletG.P)^0.005*exp(600/450 - 600/(OutletG.T/'K'));

	"Thermal equilibrium"
	OutletL.T = OutletG.T;
	
	"Mechanical equilibrium"
	InletL.P = OutletG.P;
	InletSurge.P = OutletG.P;
	InletG.P = OutletG.P;
	OutletL.P = OutletG.P;
end
